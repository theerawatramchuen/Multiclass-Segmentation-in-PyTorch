From: <Saved by Blink>
Snapshot-Content-Location: https://chat.deepseek.com/a/chat/s/efad2e4c-7686-4557-847d-89f68db3d66b
Subject: Evaluating Semantic Segmentation Model for Weed Detection - DeepSeek
Date: Fri, 4 Jul 2025 11:25:45 +0700
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--xC4mlvqwVrWApoms1A0UKBsV18p6KuT1DXBVaW7nOf----"


------MultipartBoundary--xC4mlvqwVrWApoms1A0UKBsV18p6KuT1DXBVaW7nOf----
Content-Type: text/html
Content-ID: <frame-C445DE996D0BF445A6E848B8DC1B6C33@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://chat.deepseek.com/a/chat/s/efad2e4c-7686-4557-847d-89f68db3d66b

<!DOCTYPE html><html lang=3D"en" class=3D"notranslate" translate=3D"no"><he=
ad><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3DUTF-8"=
><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-58d39887-a6d9-4=
32f-b348-2de096e61bac@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-2fd9ae6d-0201-4b6d-8d6a-b6ecc83731c5@mhtml.blink" /><l=
ink rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-08da97c1-7dc4-4312=
-8048-aded997a44b2@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css=
" href=3D"cid:css-4ce5887a-ce0f-4994-a6ac-93b671eb100f@mhtml.blink" /><link=
 rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-a387356e-feaa-4aa2-a3=
b2-6a8436e43dcd@mhtml.blink" /><title>Evaluating Semantic Segmentation Mode=
l for Weed Detection - DeepSeek</title><meta name=3D"viewport" content=3D"i=
nitial-scale=3D1.0,maximum-scale=3D1,width=3Ddevice-width,viewport-fit=3Dco=
ver"><meta name=3D"commit-id" content=3D"cc538c75"><meta name=3D"descriptio=
n" content=3D"Chat with DeepSeek AI =E2=80=93 your intelligent assistant fo=
r coding, content creation, file reading, and more. Upload documents, engag=
e in long-context conversations, and get expert help in AI, natural languag=
e processing, and beyond. | =E6=B7=B1=E5=BA=A6=E6=B1=82=E7=B4=A2=EF=BC=88De=
epSeek=EF=BC=89=E5=8A=A9=E5=8A=9B=E7=BC=96=E7=A8=8B=E4=BB=A3=E7=A0=81=E5=BC=
=80=E5=8F=91=E3=80=81=E5=88=9B=E6=84=8F=E5=86=99=E4=BD=9C=E3=80=81=E6=96=87=
=E4=BB=B6=E5=A4=84=E7=90=86=E7=AD=89=E4=BB=BB=E5=8A=A1=EF=BC=8C=E6=94=AF=E6=
=8C=81=E6=96=87=E4=BB=B6=E4=B8=8A=E4=BC=A0=E5=8F=8A=E9=95=BF=E6=96=87=E6=9C=
=AC=E5=AF=B9=E8=AF=9D=EF=BC=8C=E9=9A=8F=E6=97=B6=E4=B8=BA=E6=82=A8=E6=8F=90=
=E4=BE=9B=E9=AB=98=E6=95=88=E7=9A=84AI=E6=94=AF=E6=8C=81=E3=80=82"><meta na=
me=3D"keywords" content=3D"DeepSeek,DeepSeek AI,DeepSeek Chat,AI assistant,=
coding assistant,long-context LLM,Open Source LLM,natural language processi=
ng,AI chatbot,AI long text,AI content creation,large language model,=E6=B7=
=B1=E5=BA=A6=E6=B1=82=E7=B4=A2,=E5=A4=A7=E8=AF=AD=E8=A8=80=E6=A8=A1=E5=9E=
=8B,=E8=87=AA=E7=84=B6=E8=AF=AD=E8=A8=80=E5=A4=84=E7=90=86,AI=E8=81=8A=E5=
=A4=A9=E6=9C=BA=E5=99=A8=E4=BA=BA,=E4=BB=A3=E7=A0=81=E5=BC=80=E5=8F=91,=E5=
=88=9B=E6=84=8F=E5=86=99=E4=BD=9C,AI=E5=8A=A9=E6=89=8B,=E9=95=BF=E6=96=87=
=E6=9C=AC=E5=AF=B9=E8=AF=9D,=E6=96=87=E4=BB=B6=E5=A4=84=E7=90=86AI,=E5=A4=
=A7=E6=A8=A1=E5=9E=8B=E5=85=AC=E5=8F=B8,=E4=BA=BA=E5=B7=A5=E6=99=BA=E8=83=
=BD,AI=E5=BC=80=E5=8F=91=E5=8A=A9=E6=89=8B"><meta property=3D"og:url" conte=
nt=3D"https://chat.deepseek.com"><meta property=3D"og:type" content=3D"webs=
ite"><meta property=3D"og:title" content=3D"DeepSeek"><meta property=3D"og:=
description" content=3D"Chat with DeepSeek AI."><meta property=3D"og:image"=
 content=3D"https://cdn.deepseek.com/images/deepseek-chat-open-graph-image.=
jpeg"><meta name=3D"twitter:card" content=3D"summary_large_image"><meta pro=
perty=3D"twitter:domain" content=3D"deepseek.com"><meta property=3D"twitter=
:url" content=3D"https://chat.deepseek.com"><meta name=3D"twitter:title" co=
ntent=3D"DeepSeek"><meta name=3D"twitter:description" content=3D"Chat with =
DeepSeek AI."><meta name=3D"twitter:image" content=3D"https://cdn.deepseek.=
com/images/deepseek-chat-open-graph-image.jpeg"><meta name=3D"google" conte=
nt=3D"notranslate"><meta name=3D"ip" content=3D"223.24.201.18"><meta name=
=3D"region" content=3D"TH"><link rel=3D"apple-touch-icon" href=3D"https://c=
dn.deepseek.com/chat/icon.png"><link rel=3D"icon" type=3D"image/x-icon" hre=
f=3D"https://chat.deepseek.com/favicon.svg"><link href=3D"https://static.de=
epseek.com/chat/static/main.f704369816.css" rel=3D"stylesheet"><link data-w=
ebpack=3D"@deepseek/chat:chunk-945" rel=3D"stylesheet" href=3D"https://stat=
ic.deepseek.com/chat/static/katex.66a418a9b7.css"></head><body class=3D"en_=
US light" style=3D"--app-height: 937px;"><div id=3D"root"><div class=3D"ds-=
theme" style=3D"--ds-rgb-hover: 0 0 0 / 4%; font-size: var(--ds-font-size-m=
); line-height: var(--ds-line-height-m);"><div class=3D"cb86951c"><div clas=
s=3D"cddfb2ed"></div><div class=3D"c3ecdb44"><div class=3D"dc04ec1d a02af2e=
6"><div class=3D"a7f3a288 f0d4f23d"><div class=3D"ds-icon" style=3D"font-si=
ze: 44px; width: 44px; height: 44px; cursor: pointer;"><svg viewBox=3D"0 0 =
30 30" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"ht=
tp://www.w3.org/1999/xlink"><path id=3D"path" d=3D"M27.501 8.46875C27.249 8=
.3457 27.1406 8.58008 26.9932 8.69922C26.9434 8.73828 26.9004 8.78906 26.85=
84 8.83398C26.4902 9.22852 26.0605 9.48633 25.5 9.45508C24.6787 9.41016 23.=
9785 9.66797 23.3594 10.2969C23.2275 9.52148 22.79 9.05859 22.125 8.76172C2=
1.7764 8.60742 21.4238 8.45312 21.1807 8.11719C21.0098 7.87891 20.9639 7.61=
328 20.8779 7.35156C20.8242 7.19336 20.7695 7.03125 20.5879 7.00391C20.3906=
 6.97266 20.3135 7.13867 20.2363 7.27734C19.9258 7.84375 19.8066 8.46875 19=
.8174 9.10156C19.8447 10.5234 20.4453 11.6562 21.6367 12.4629C21.7725 12.55=
47 21.8076 12.6484 21.7646 12.7832C21.6836 13.0605 21.5869 13.3301 21.501 1=
3.6074C21.4473 13.7852 21.3662 13.8242 21.1768 13.7461C20.5225 13.4727 19.9=
57 13.0684 19.458 12.5781C18.6104 11.7578 17.8438 10.8516 16.8877 10.1426C1=
6.6631 9.97656 16.4395 9.82227 16.207 9.67578C15.2314 8.72656 16.335 7.9472=
7 16.5898 7.85547C16.8574 7.75977 16.6826 7.42773 15.8193 7.43164C14.957 7.=
43555 14.167 7.72461 13.1611 8.10938C13.0137 8.16797 12.8594 8.21094 12.700=
2 8.24414C11.7871 8.07227 10.8389 8.0332 9.84766 8.14453C7.98242 8.35352 6.=
49219 9.23633 5.39648 10.7441C4.08105 12.5547 3.77148 14.6133 4.15039 16.76=
17C4.54883 19.0234 5.70215 20.8984 7.47559 22.3633C9.31348 23.8809 11.4307 =
24.625 13.8457 24.4824C15.3125 24.3984 16.9463 24.2012 18.7881 22.6406C19.2=
529 22.8711 19.7402 22.9629 20.5498 23.0332C21.1729 23.0918 21.7725 23.002 =
22.2373 22.9062C22.9648 22.752 22.9141 22.0781 22.6514 21.9531C20.5186 20.9=
59 20.9863 21.3633 20.5605 21.0371C21.6445 19.752 23.2783 18.418 23.917 14.=
0977C23.9668 13.7539 23.9238 13.5391 23.917 13.2598C23.9131 13.0918 23.9512=
 13.0254 24.1445 13.0059C24.6787 12.9453 25.1973 12.7988 25.6738 12.5352C27=
.0557 11.7793 27.6123 10.5391 27.7441 9.05078C27.7637 8.82422 27.7402 8.587=
89 27.501 8.46875ZM15.46 21.8613C13.3926 20.2344 12.3906 19.6992 11.9766 19=
.7227C11.5898 19.7441 11.6592 20.1875 11.7441 20.4766C11.833 20.7617 11.949=
2 20.959 12.1123 21.209C12.2246 21.375 12.3018 21.623 12 21.8066C11.334 22.=
2207 10.1768 21.668 10.1221 21.6406C8.77539 20.8477 7.64941 19.7988 6.85547=
 18.3652C6.08984 16.9844 5.64453 15.5039 5.57129 13.9238C5.55176 13.541 5.6=
6406 13.4062 6.04297 13.3379C6.54199 13.2461 7.05762 13.2266 7.55664 13.298=
8C9.66602 13.6074 11.4619 14.5527 12.9668 16.0469C13.8262 16.9004 14.4766 1=
7.918 15.1465 18.9121C15.8584 19.9688 16.625 20.9746 17.6006 21.7988C17.944=
3 22.0879 18.2197 22.3086 18.4824 22.4707C17.6895 22.5586 16.3652 22.5781 1=
5.46 21.8613ZM16.4502 15.4805C16.4502 15.3105 16.5859 15.1758 16.7568 15.17=
58C16.7949 15.1758 16.8301 15.1836 16.8613 15.1953C16.9033 15.2109 16.9424 =
15.2344 16.9727 15.2695C17.0273 15.3223 17.0586 15.4004 17.0586 15.4805C17.=
0586 15.6504 16.9229 15.7852 16.7529 15.7852C16.582 15.7852 16.4502 15.6504=
 16.4502 15.4805ZM19.5273 17.0625C19.3301 17.1426 19.1328 17.2129 18.9434 1=
7.2207C18.6494 17.2344 18.3281 17.1152 18.1533 16.9688C17.8828 16.7422 17.6=
895 16.6152 17.6074 16.2168C17.5732 16.0469 17.5928 15.7852 17.623 15.6348C=
17.6934 15.3105 17.6152 15.1035 17.3877 14.9141C17.2012 14.7598 16.9658 14.=
7188 16.7061 14.7188C16.6094 14.7188 16.5205 14.6758 16.4541 14.6406C16.345=
7 14.5859 16.2568 14.4512 16.3418 14.2852C16.3691 14.2324 16.501 14.1016 16=
.5322 14.0781C16.8838 13.877 17.29 13.9434 17.666 14.0938C18.0146 14.2363 1=
8.2773 14.498 18.6562 14.8672C19.0439 15.3145 19.1133 15.4395 19.334 15.773=
4C19.5078 16.0371 19.667 16.3066 19.7754 16.6152C19.8408 16.8066 19.7559 16=
.9648 19.5273 17.0625Z" fill-rule=3D"nonzero" fill=3D"#4D6BFE"></path></svg=
></div><div style=3D"margin-top: 38px; display: flex;"><div class=3D"ds-ico=
n-button" tabindex=3D"0" style=3D"--ds-icon-button-size: 28px;"><svg viewBo=
x=3D"0 0 30 30" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xl=
ink=3D"http://www.w3.org/1999/xlink"><defs><clipPath id=3D"clip1381_20236">=
<rect id=3D"=E6=89=93=E5=BC=80=E8=BE=B9=E6=A0=8F0730" width=3D"30.000000" h=
eight=3D"30.000000" fill=3D"white" fill-opacity=3D"0"></rect></clipPath></d=
efs><rect id=3D"=E6=89=93=E5=BC=80=E8=BE=B9=E6=A0=8F0730" width=3D"30.00000=
0" height=3D"30.000000" fill=3D"#FFFFFF" fill-opacity=3D"0"></rect><g clip-=
path=3D"url(#clip1381_20236)"><rect id=3D"rect" x=3D"11.572754" y=3D"17.683=
594" rx=3D"1.000947" width=3D"5.995172" height=3D"2.001895" transform=3D"ro=
tate(-42.841 11.572754 17.683594)" fill=3D"currentColor" fill-opacity=3D"1.=
000000"></rect><rect id=3D"rect" x=3D"16.033691" y=3D"16.271484" rx=3D"0.99=
5190" width=3D"6.002943" height=3D"1.990380" transform=3D"rotate(-139.147 1=
6.033691 16.271484)" fill=3D"currentColor" fill-opacity=3D"1.000000"></rect=
><path id=3D"path" d=3D"M20.09 25.48L9.89 25.5C9.47 25.5 9.05 25.45 8.64 25=
.37C8.23 25.29 7.83 25.17 7.44 25C7.05 24.84 6.68 24.64 6.33 24.41C5.98 24.=
18 5.66 23.91 5.36 23.61C5.07 23.31 4.8 22.99 4.57 22.64C4.34 22.29 4.14 21=
.92 3.98 21.53C3.82 21.14 3.69 20.74 3.61 20.32C3.53 19.91 3.49 19.49 3.49 =
19.07L3.49 10.92C3.49 10.5 3.53 10.08 3.61 9.67C3.69 9.25 3.82 8.85 3.98 8.=
46C4.14 8.07 4.34 7.7 4.57 7.35C4.8 7 5.07 6.68 5.36 6.38C5.66 6.08 5.98 5.=
81 6.33 5.58C6.68 5.35 7.05 5.15 7.44 4.99C7.83 4.82 8.23 4.7 8.64 4.62C9.0=
5 4.54 9.47 4.5 9.89 4.5L20.09 4.48C20.51 4.48 20.93 4.52 21.34 4.6C21.75 4=
.69 22.15 4.81 22.54 4.97C22.93 5.13 23.3 5.33 23.65 5.57C24 5.8 24.32 6.06=
 24.62 6.36C24.92 6.66 25.18 6.98 25.41 7.33C25.65 7.69 25.84 8.06 26.01 8.=
45C26.17 8.84 26.29 9.24 26.37 9.65C26.45 10.06 26.49 10.48 26.5 10.91L26.5=
 19.06C26.49 19.48 26.45 19.89 26.37 20.31C26.29 20.72 26.17 21.12 26.01 21=
.51C25.84 21.9 25.65 22.27 25.41 22.62C25.18 22.97 24.92 23.3 24.62 23.6C24=
.32 23.89 24 24.16 23.65 24.39C23.3 24.63 22.93 24.83 22.54 24.99C22.15 25.=
15 21.75 25.27 21.34 25.35C20.93 25.44 20.51 25.48 20.09 25.48ZM9.89 6.59C9=
.61 6.59 9.32 6.62 9.05 6.67C8.77 6.73 8.5 6.81 8.24 6.92C7.98 7.03 7.73 7.=
16 7.49 7.32C7.26 7.48 7.04 7.66 6.84 7.86C6.64 8.06 6.46 8.28 6.3 8.51C6.1=
4 8.75 6.01 9 5.9 9.26C5.79 9.52 5.71 9.8 5.66 10.07C5.6 10.35 5.57 10.63 5=
.57 10.92L5.57 19.07C5.57 19.36 5.6 19.64 5.66 19.92C5.71 20.19 5.79 20.47 =
5.9 20.73C6.01 20.99 6.14 21.24 6.3 21.48C6.46 21.71 6.64 21.93 6.84 22.13C=
7.04 22.33 7.26 22.51 7.49 22.67C7.73 22.83 7.98 22.96 8.24 23.07C8.5 23.18=
 8.77 23.26 9.05 23.32C9.32 23.37 9.61 23.4 9.89 23.4L20.09 23.39C20.38 23.=
39 20.66 23.36 20.94 23.3C21.21 23.25 21.48 23.17 21.75 23.06C22.01 22.95 2=
2.26 22.81 22.49 22.66C22.73 22.5 22.95 22.32 23.15 22.12C23.35 21.91 23.52=
 21.7 23.68 21.46C23.84 21.22 23.97 20.98 24.08 20.71C24.19 20.45 24.27 20.=
18 24.33 19.9C24.38 19.62 24.41 19.34 24.41 19.06L24.41 10.91C24.41 10.62 2=
4.38 10.34 24.33 10.06C24.27 9.78 24.19 9.51 24.08 9.25C23.97 8.98 23.84 8.=
74 23.68 8.5C23.52 8.26 23.35 8.04 23.15 7.84C22.95 7.64 22.73 7.46 22.49 7=
.3C22.26 7.15 22.01 7.01 21.75 6.9C21.48 6.79 21.21 6.71 20.94 6.66C20.66 6=
.6 20.38 6.57 20.09 6.57L9.89 6.59Z" fill=3D"currentColor" fill-opacity=3D"=
1.000000" fill-rule=3D"nonzero"></path><path id=3D"rect" d=3D"M8.49 5.5L10.=
53 5.5L10.59 24.41L8.54 24.41L8.49 5.5Z" fill=3D"currentColor" fill-opacity=
=3D"1.000000" fill-rule=3D"evenodd"></path></g></svg></div></div><div style=
=3D"margin-top: 38px; display: flex;"><div class=3D"ds-icon-button" tabinde=
x=3D"0" style=3D"--ds-icon-button-size: 28px;"><svg viewBox=3D"0 0 30 30" f=
ill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www=
.w3.org/1999/xlink"><defs><clipPath id=3D"clip1325_20400"><rect id=3D"=E6=
=96=B0=E5=BB=BA=E4=BC=9A=E8=AF=9D0730" width=3D"30.000000" height=3D"30.000=
000" fill=3D"white" fill-opacity=3D"0"></rect></clipPath></defs><g clip-pat=
h=3D"url(#clip1325_20400)"><path id=3D"path" d=3D"M10.51 26.52C10.35 26.52 =
10.19 26.49 10.04 26.43C9.89 26.37 9.76 26.28 9.64 26.17C9.53 26.06 9.44 25=
.93 9.37 25.78C9.31 25.63 9.28 25.48 9.28 25.32L9.25 22.87C8.89 22.82 8.53 =
22.74 8.19 22.62C7.84 22.5 7.51 22.36 7.19 22.19C6.86 22.01 6.56 21.81 6.28=
 21.58C5.99 21.36 5.73 21.11 5.49 20.83C5.25 20.56 5.04 20.27 4.85 19.96C4.=
67 19.65 4.51 19.33 4.38 18.99C4.25 18.65 4.16 18.3 4.09 17.95C4.03 17.6 4 =
17.24 4 16.88L4 10.38C4 9.99 4.03 9.6 4.11 9.21C4.19 8.82 4.31 8.45 4.46 8.=
08C4.61 7.72 4.8 7.37 5.03 7.04C5.25 6.72 5.5 6.41 5.78 6.13C6.07 5.86 6.38=
 5.61 6.71 5.39C7.04 5.17 7.4 4.98 7.77 4.83C8.14 4.68 8.52 4.57 8.91 4.49C=
9.31 4.41 9.7 4.38 10.11 4.38L14.35 4.38C14.5 4.38 14.63 4.4 14.77 4.46C14.=
9 4.51 15.02 4.59 15.12 4.69C15.22 4.79 15.3 4.9 15.35 5.03C15.41 5.16 15.4=
3 5.3 15.43 5.44C15.43 5.58 15.41 5.71 15.35 5.84C15.3 5.97 15.22 6.09 15.1=
2 6.19C15.02 6.29 14.9 6.37 14.77 6.42C14.63 6.47 14.5 6.5 14.35 6.5L10.11 =
6.5C9.85 6.5 9.59 6.53 9.34 6.58C9.08 6.62 8.83 6.7 8.6 6.8C8.36 6.89 8.13 =
7.01 7.91 7.15C7.7 7.3 7.5 7.46 7.31 7.64C7.13 7.82 6.97 8.01 6.82 8.22C6.6=
8 8.44 6.56 8.66 6.46 8.9C6.36 9.13 6.28 9.37 6.23 9.62C6.18 9.87 6.16 10.1=
2 6.16 10.38L6.16 16.88C6.16 17.14 6.18 17.39 6.23 17.65C6.29 17.9 6.36 18.=
15 6.46 18.39C6.56 18.62 6.69 18.85 6.83 19.07C6.98 19.28 7.15 19.48 7.33 1=
9.66C7.52 19.85 7.72 20.01 7.94 20.15C8.16 20.3 8.39 20.42 8.63 20.52C8.87 =
20.62 9.13 20.69 9.38 20.74C9.64 20.79 9.9 20.82 10.17 20.82C10.33 20.82 10=
.49 20.85 10.64 20.91C10.79 20.97 10.92 21.06 11.04 21.17C11.15 21.28 11.24=
 21.41 11.31 21.56C11.37 21.71 11.4 21.86 11.41 22.02L11.42 23.53L14.15 21.=
56C14.85 21.07 15.62 20.82 16.48 20.82L19.87 20.82C20.13 20.82 20.38 20.79 =
20.64 20.74C20.89 20.69 21.14 20.62 21.38 20.52C21.62 20.42 21.85 20.3 22.0=
6 20.16C22.28 20.02 22.48 19.86 22.66 19.68C22.84 19.5 23.01 19.3 23.15 19.=
09C23.29 18.88 23.42 18.66 23.52 18.42C23.61 18.19 23.69 17.94 23.74 17.69C=
23.79 17.44 23.82 17.19 23.82 16.94L23.82 13.58C23.82 13.44 23.84 13.3 23.9=
 13.17C23.95 13.04 24.03 12.93 24.13 12.83C24.23 12.73 24.35 12.65 24.48 12=
.6C24.62 12.54 24.75 12.52 24.9 12.52C25.04 12.52 25.18 12.54 25.31 12.6C25=
.44 12.65 25.56 12.73 25.66 12.83C25.76 12.93 25.84 13.04 25.9 13.17C25.95 =
13.3 25.98 13.44 25.98 13.58L25.98 16.94C25.98 17.33 25.94 17.72 25.86 18.1=
1C25.78 18.5 25.67 18.87 25.51 19.24C25.36 19.6 25.17 19.95 24.95 20.27C24.=
73 20.6 24.47 20.9 24.19 21.18C23.9 21.46 23.6 21.71 23.26 21.93C22.93 22.1=
5 22.58 22.33 22.21 22.48C21.83 22.63 21.45 22.75 21.06 22.83C20.67 22.9 20=
.27 22.94 19.87 22.94L17.19 22.94C16.33 22.94 15.56 23.19 14.86 23.69L11.24=
 26.29C11.02 26.44 10.78 26.52 10.51 26.52Z" fill=3D"currentColor" fill-opa=
city=3D"1.000000" fill-rule=3D"nonzero"></path><rect id=3D"rect" x=3D"17.77=
0508" y=3D"6.396484" rx=3D"1.062250" width=3D"8.060087" height=3D"2.124500"=
 fill=3D"currentColor" fill-opacity=3D"1.000000"></rect><rect id=3D"rect" x=
=3D"20.718750" y=3D"3.500000" rx=3D"1.081197" width=3D"2.162393" height=3D"=
7.918844" fill=3D"currentColor" fill-opacity=3D"1.000000"></rect></g></svg>=
</div></div><div style=3D"flex: 1 1 0%;"></div><div class=3D"_41b9122"><div=
 class=3D"ds-icon" style=3D"font-size: 28px; width: 28px; height: 28px;"><s=
vg viewBox=3D"0 0 1024 1024" xmlns=3D"http://www.w3.org/2000/svg" width=3D"=
300" height=3D"300"><path d=3D"M725.333 1024H298.667a128 128 0 0 1-128-128V=
128a128 128 0 0 1 128-128h426.666a128 128 0 0 1 128 128v768a128 128 0 0 1-1=
28 128zM298.667 85.333A42.667 42.667 0 0 0 256 128v768a42.667 42.667 0 0 0 =
42.667 42.667h426.666A42.667 42.667 0 0 0 768 896V128a42.667 42.667 0 0 0-4=
2.667-42.667z" fill=3D"currentColor"></path><path d=3D"M469.33299999999997 =
853.333a42.667 42.667 0 1 0 85.334 0 42.667 42.667 0 1 0-85.334 0zM554.667 =
213.333h-85.334a42.667 42.667 0 0 1 0-85.333h85.334a42.667 42.667 0 0 1 0 8=
5.333z" fill=3D"currentColor"></path></svg></div></div><div class=3D"ede5bc=
47"><img class=3D"fdf01f38" src=3D"https://static.deepseek.com/user-avatar/=
anWDO5_R6F-1-LsVW5YxcQz0" alt=3D"" aria-hidden=3D"true"></div></div><div cl=
ass=3D"b8812f16 a2f3d50e _70b689f"><div class=3D"_6969ec9"><div class=3D"a5=
967822"></div><div class=3D"e066abb8"><svg viewBox=3D"-2 0 175 32" fill=3D"=
none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org=
/1999/xlink"><defs></defs><path id=3D"path" d=3D"M75.32 25.23L72.83 25.23L7=
2.83 21.37L75.32 21.37C76.86 21.37 78.42 20.99 79.43 19.92C80.44 18.85 80.8=
1 17.2 80.81 15.57C80.81 13.94 80.44 12.3 79.43 11.23C78.42 10.16 76.86 9.7=
8 75.32 9.78C73.77 9.78 72.22 10.16 71.21 11.23C70.19 12.3 69.83 13.94 69.8=
3 15.57L69.83 31.44L65.46 31.44L65.46 5.92L69.83 5.92L69.83 7.54L70.63 7.54=
C70.71 7.45 70.8 7.36 70.9 7.27C71.99 6.27 73.66 5.92 75.32 5.92C77.89 5.92=
 80.48 6.56 82.17 8.34C83.85 10.12 84.46 12.86 84.46 15.58C84.46 18.29 83.8=
5 21.03 82.17 22.81C80.48 24.6 77.89 25.23 75.32 25.23Z" fill=3D"currentCol=
or" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"path=
" d=3D"M8.79 6.59L11.28 6.59L11.28 10.45L8.79 10.45C7.25 10.45 5.69 10.83 4=
.68 11.91C3.67 12.98 3.3 14.62 3.3 16.25C3.3 17.88 3.67 19.52 4.68 20.59C5.=
69 21.66 7.25 22.05 8.79 22.05C10.34 22.05 11.89 21.66 12.9 20.59C13.92 19.=
52 14.28 17.88 14.28 16.25L14.28 0.39L18.65 0.39L18.65 25.91L14.28 25.91L14=
.28 24.28L13.48 24.28C13.4 24.38 13.31 24.47 13.21 24.55C12.12 25.55 10.45 =
25.91 8.79 25.91C6.22 25.91 3.63 25.27 1.94 23.48C0.26 21.7 -0.35 18.97 -0.=
35 16.25C-0.35 13.53 0.26 10.8 1.94 9.01C3.63 7.23 6.22 6.59 8.79 6.59Z" fi=
ll=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path>=
<path id=3D"path" d=3D"M40.59 15.91L40.59 17.46L28.95 17.46L28.95 14.36L36.=
67 14.36C36.49 13.23 36.08 12.18 35.36 11.42C34.3 10.31 32.69 9.91 31.08 9.=
91C29.48 9.91 27.86 10.31 26.81 11.42C25.76 12.52 25.38 14.22 25.38 15.91C2=
5.38 17.6 25.76 19.3 26.81 20.41C27.86 21.52 29.48 21.91 31.08 21.91C32.69 =
21.91 34.3 21.52 35.36 20.41C35.5 20.25 35.64 20.08 35.76 19.9L40.08 19.9C3=
9.71 21.24 39.1 22.45 38.2 23.4C36.44 25.25 33.75 25.91 31.08 25.91C28.41 2=
5.91 25.72 25.25 23.97 23.4C22.21 21.55 21.58 18.72 21.58 15.91C21.58 13.1 =
22.21 10.27 23.97 8.42C25.72 6.58 28.41 5.92 31.08 5.92C33.75 5.92 36.44 6.=
58 38.2 8.42C39.96 10.27 40.59 13.1 40.59 15.91Z" fill=3D"currentColor" fil=
l-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"=
M62.52 15.91L62.52 17.46L50.88 17.46L50.88 14.36L58.61 14.36C58.43 13.23 58=
.02 12.18 57.29 11.42C56.24 10.31 54.63 9.91 53.02 9.91C51.42 9.91 49.8 10.=
31 48.75 11.42C47.7 12.52 47.32 14.22 47.32 15.91C47.32 17.6 47.7 19.3 48.7=
5 20.41C49.8 21.52 51.42 21.91 53.02 21.91C54.63 21.91 56.24 21.52 57.29 20=
.41C57.44 20.25 57.58 20.08 57.7 19.9L62.02 19.9C61.64 21.24 61.04 22.45 60=
.14 23.4C58.38 25.25 55.69 25.91 53.02 25.91C50.35 25.91 47.66 25.25 45.9 2=
3.4C44.15 21.55 43.52 18.72 43.52 15.91C43.52 13.1 44.15 10.27 45.9 8.42C47=
.66 6.58 50.35 5.92 53.02 5.92C55.69 5.92 58.38 6.58 60.14 8.42C61.89 10.27=
 62.52 13.1 62.52 15.91Z" fill=3D"currentColor" fill-opacity=3D"1.000000" f=
ill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M96.9 25.91C99.57 25.91 =
102.26 25.52 104.01 24.43C105.77 23.34 106.4 21.67 106.4 20.01C106.4 18.35 =
105.77 16.68 104.01 15.59C102.26 14.5 99.57 14.11 96.9 14.11L96.99 14.11C95=
.85 14.11 94.7 13.96 93.96 13.53C93.21 13.11 92.94 12.46 92.94 11.82C92.94 =
11.17 93.21 10.53 93.96 10.1C94.7 9.68 95.85 9.53 96.99 9.53C98.13 9.53 99.=
28 9.68 100.03 10.1C100.78 10.53 101.04 11.17 101.04 11.82L105.49 11.82C105=
.49 10.16 104.92 8.49 103.34 7.4C101.75 6.31 99.32 5.92 96.9 5.92C94.48 5.9=
2 92.05 6.31 90.46 7.4C88.87 8.49 88.3 10.16 88.3 11.82C88.3 13.48 88.87 15=
.15 90.46 16.24C92.05 17.33 94.48 17.72 96.9 17.72C98.16 17.72 99.53 17.87 =
100.36 18.29C101.19 18.71 101.48 19.36 101.48 20.01C101.48 20.65 101.19 21.=
3 100.36 21.72C99.53 22.14 98.26 22.3 97 22.3C95.74 22.3 94.47 22.14 93.65 =
21.72C92.82 21.3 92.52 20.65 92.52 20.01L87.4 20.01C87.4 21.67 88.03 23.34 =
89.78 24.43C91.54 25.52 94.22 25.91 96.9 25.91Z" fill=3D"currentColor" fill=
-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M=
128.33 15.91L128.33 17.46L116.69 17.46L116.69 14.36L124.42 14.36C124.24 13.=
23 123.83 12.18 123.1 11.42C122.05 10.31 120.44 9.91 118.83 9.91C117.23 9.9=
1 115.61 10.31 114.56 11.42C113.51 12.52 113.13 14.22 113.13 15.91C113.13 1=
7.6 113.51 19.3 114.56 20.41C115.61 21.52 117.23 21.91 118.83 21.91C120.44 =
21.91 122.05 21.52 123.1 20.41C123.25 20.25 123.39 20.08 123.51 19.9L127.83=
 19.9C127.45 21.24 126.85 22.45 125.95 23.4C124.19 25.25 121.5 25.91 118.83=
 25.91C116.16 25.91 113.47 25.25 111.71 23.4C109.96 21.55 109.33 18.72 109.=
33 15.91C109.33 13.1 109.96 10.27 111.71 8.42C113.47 6.58 116.16 5.92 118.8=
3 5.92C121.5 5.92 124.19 6.58 125.95 8.42C127.7 10.27 128.33 13.1 128.33 15=
.91Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"=
></path><path id=3D"path" d=3D"M150.27 15.91L150.27 17.46L138.63 17.46L138.=
63 14.36L146.36 14.36C146.17 13.23 145.77 12.18 145.04 11.42C143.99 10.31 1=
42.37 9.91 140.77 9.91C139.17 9.91 137.55 10.31 136.5 11.42C135.44 12.52 13=
5.07 14.22 135.07 15.91C135.07 17.6 135.44 19.3 136.5 20.41C137.55 21.52 13=
9.17 21.91 140.77 21.91C142.37 21.91 143.99 21.52 145.04 20.41C145.19 20.25=
 145.32 20.08 145.45 19.9L149.77 19.9C149.39 21.24 148.79 22.45 147.88 23.4=
C146.13 25.25 143.44 25.91 140.77 25.91C138.1 25.91 135.4 25.25 133.65 23.4=
C131.9 21.55 131.27 18.72 131.27 15.91C131.27 13.1 131.9 10.27 133.65 8.42C=
135.4 6.58 138.1 5.92 140.77 5.92C143.44 5.92 146.13 6.58 147.88 8.42C149.6=
4 10.27 150.27 13.1 150.27 15.91Z" fill=3D"currentColor" fill-opacity=3D"1.=
000000" fill-rule=3D"nonzero"></path><rect id=3D"rect" x=3D"153.211426" y=
=3D"-0.499512" width=3D"4.371000" height=3D"26.415646" fill=3D"currentColor=
" fill-opacity=3D"1.000000"></rect><path id=3D"polygon" d=3D"M165.04 15.31L=
172.21 25.91L166.79 25.91L159.62 15.31L166.79 6.81L172.21 6.81L165.04 15.31=
Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></=
path></svg></div><div class=3D"ds-icon _8a9564e" style=3D"font-size: 24px; =
width: 24px; height: 24px;"><svg width=3D"28" height=3D"28" viewBox=3D"0 0 =
28 28" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M4.277=
77 24.2888L23.7222 24.2888C24.4279 24.2888 25 23.7167 25 23.0111C25 22.3054=
 24.4279 21.7333 23.7222 21.7333L4.27777 21.7333C3.57208 21.7333 3 22.3054 =
3 23.0111C3 23.7167 3.57208 24.2888 4.27777 24.2888Z" fill=3D"currentColor"=
></path><path d=3D"M13.2407 15.4001L23.7222 15.4001C24.4279 15.4001 25 14.8=
281 25 14.1224C25 13.4167 24.4279 12.8446 23.7222 12.8446L13.2407 12.8446C1=
2.535 12.8446 11.963 13.4167 11.963 14.1224C11.963 14.8281 12.535 15.4001 1=
3.2407 15.4001Z" fill=3D"currentColor"></path><path d=3D"M4.27777 6.55542L2=
3.7222 6.55542C24.4279 6.55542 25 5.98334 25 5.27765C25 4.57197 24.4279 3.9=
9989 23.7222 3.99989L4.27777 3.99989C3.57208 3.99989 3 4.57197 3 5.27765C3 =
5.98334 3.57208 6.55542 4.27777 6.55542Z" fill=3D"currentColor"></path></sv=
g></div></div><div class=3D"ebaea5d2"><div class=3D"_5a8ac7a"><div class=3D=
"c7dddcde"><div class=3D"_1c42ad7"><svg width=3D"28" height=3D"28" viewBox=
=3D"0 0 28 28" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=
=3D"M9.10999 27C8.92999 27 8.76001 26.96 8.60001 26.9C8.43001 26.83 8.29 26=
.74 8.16 26.61C8.03 26.49 7.94 26.3499 7.87 26.1899C7.79999 26.0299 7.76001=
 25.8599 7.76001 25.6899L7.73001 23.04C7.34001 22.98 6.95001 22.8799 6.5700=
1 22.7599C6.19001 22.6299 5.83001 22.48 5.48001 22.29C5.13001 22.1 4.79999 =
21.88 4.48999 21.63C4.17999 21.39 3.89 21.1199 3.63 20.82C3.37 20.52 3.1399=
9 20.21 2.92999 19.87C2.72999 19.53 2.56001 19.18 2.42001 18.82C2.28001 18.=
45 2.17001 18.07 2.10001 17.69C2.03001 17.3 2 16.92 2 16.53V9.46995C2 9.039=
95 2.04 8.61995 2.12 8.19995C2.21 7.77995 2.34 7.36995 2.5 6.96995C2.67 6.5=
7995 2.88 6.19995 3.12 5.84995C3.36 5.48995 3.64001 5.15995 3.95001 4.85995=
C4.26001 4.55995 4.59999 4.28995 4.95999 4.04995C5.32999 3.80995 5.70999 3.=
60995 6.10999 3.44995C6.51999 3.27995 6.94 3.15995 7.37 3.07995C7.79999 2.9=
8995 8.23001 2.94995 8.67001 2.94995H13.3C13.46 2.94995 13.61 2.97995 13.76=
 3.03995C13.9 3.09995 14.03 3.17995 14.14 3.28995C14.25 3.39995 14.33 3.519=
95 14.39 3.65995C14.45 3.79995 14.48 3.94995 14.48 4.09995C14.48 4.25995 14=
.45 4.39995 14.39 4.54995C14.33 4.68995 14.25 4.80995 14.14 4.91995C14.03 5=
.02995 13.9 5.10995 13.76 5.16995C13.61 5.22995 13.46 5.25995 13.3 5.25995H=
8.67001C8.38001 5.25995 8.09999 5.27995 7.82999 5.33995C7.54999 5.38995 7.2=
7999 5.46995 7.01999 5.57995C6.75999 5.67995 6.50999 5.80995 6.26999 5.9699=
5C6.03999 6.11995 5.82 6.29995 5.62 6.48995C5.42 6.68995 5.23999 6.89995 5.=
07999 7.12995C4.92999 7.35995 4.78999 7.59995 4.67999 7.85995C4.57999 8.109=
95 4.49 8.37995 4.44 8.64995C4.38 8.91995 4.35999 9.18995 4.35999 9.46995V1=
6.53C4.35999 16.81 4.38 17.08 4.44 17.36C4.5 17.63 4.58 17.9 4.69 18.16C4.8=
 18.42 4.93 18.67 5.09 18.9C5.25 19.13 5.43001 19.3499 5.64001 19.5499C5.84=
001 19.75 6.05999 19.92 6.29999 20.08C6.53999 20.24 6.79 20.37 7.06 20.47C7=
.32 20.58 7.6 20.66 7.88 20.72C8.16001 20.77 8.44001 20.7999 8.73001 20.799=
9C8.91001 20.7999 9.08 20.83 9.25 20.9C9.41 20.97 9.55999 21.0599 9.67999 2=
1.18C9.80999 21.3099 9.91001 21.45 9.98001 21.61C10.05 21.77 10.08 21.94 10=
.09 22.11L10.1 23.74L13.08 21.61C13.84 21.07 14.69 20.7999 15.63 20.7999H19=
.32C19.61 20.7999 19.89 20.77 20.16 20.72C20.44 20.67 20.71 20.59 20.97 20.=
4799C21.23 20.3699 21.48 20.24 21.72 20.09C21.95 19.94 22.17 19.76 22.37 19=
.57C22.57 19.3699 22.75 19.16 22.91 18.93C23.07 18.7 23.2 18.46 23.31 18.2C=
23.41 17.95 23.5 17.68 23.55 17.41C23.61 17.14 23.63 16.87 23.63 16.59V12.9=
4C23.63 12.79 23.66 12.64 23.72 12.5C23.78 12.36 23.87 12.23 23.98 12.13C24=
.09 12.02 24.22 11.93 24.36 11.88C24.51 11.82 24.66 11.79 24.82 11.79C24.97=
 11.79 25.12 11.82 25.27 11.88C25.41 11.93 25.54 12.02 25.65 12.13C25.76 12=
.23 25.85 12.36 25.91 12.5C25.97 12.64 26 12.79 26 12.94V16.59C26 17.02 25.=
95 17.44 25.87 17.86C25.78 18.28 25.66 18.69 25.49 19.08C25.32 19.48 25.11 =
19.8499 24.87 20.2099C24.63 20.57 24.35 20.9 24.04 21.2C23.73 21.5 23.39 21=
.7699 23.03 22.0099C22.67 22.2499 22.28 22.45 21.88 22.61C21.47 22.77 21.06=
 22.9 20.63 22.9799C20.2 23.07 19.76 23.11 19.32 23.11H16.4C15.47 23.11 14.=
62 23.3799 13.86 23.9199L9.91 26.74C9.67 26.91 9.39999 27 9.10999 27Z" fill=
=3D"currentColor"></path><path d=3D"M24.6805 5.14453H18.1874C17.5505 5.1445=
3 17.0342 5.66086 17.0342 6.29778C17.0342 6.9347 17.5505 7.45102 18.1874 7.=
45102H24.6805C25.3175 7.45102 25.8338 6.9347 25.8338 6.29778C25.8338 5.6608=
6 25.3175 5.14453 24.6805 5.14453Z" fill=3D"currentColor"></path><path d=3D=
"M22.6137 3.1804C22.6137 2.52848 22.0852 2 21.4333 2C20.7814 2 20.2529 2.52=
848 20.2529 3.1804V9.4168C20.2529 10.0687 20.7814 10.5972 21.4333 10.5972C2=
2.0852 10.5972 22.6137 10.0687 22.6137 9.4168V3.1804Z" fill=3D"currentColor=
"></path></svg></div>New chat</div></div></div><div class=3D"_03210fb scrol=
lable"><div class=3D"_77cdc67 _8a693f3"><div class=3D"_5d4b535"><div class=
=3D"_48cdfc1">Today</div><div class=3D"_83421f9 b64fb9ae" tabindex=3D"0"><d=
iv class=3D"c08e6e93">Evaluating Semantic Segmentation Model for Weed Detec=
tion</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" sty=
le=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www=
.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"current=
Color" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2=
 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"even=
odd"></path></svg></div></div><div class=3D"_2f87737"></div><div class=3D"e=
aaaba55"></div></div><div class=3D"b9cb4a74"></div></div><div class=3D"_5d4=
b535"><div class=3D"_48cdfc1">Yesterday</div><div class=3D"_83421f9" tabind=
ex=3D"0"><div class=3D"c08e6e93">U-Net Training Script Code Review</div><di=
v class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-si=
ze: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/=
svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-r=
ule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 =
2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path><=
/svg></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></di=
v></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Fix =
ModuleNotFoundError for ptflops Installation</div><div class=3D"_2090548" t=
abindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px;=
 height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" vie=
wBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M=
3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 =
1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div =
class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"=
b9cb4a74"></div></div><div class=3D"_5d4b535"><div class=3D"_48cdfc1">7 Day=
s</div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Decod=
ing Leetspeak Challenge and Its Meaning</div><div class=3D"_2090548" tabind=
ex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; heig=
ht: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=
=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12=
a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 =
4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div clas=
s=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"b9cb=
4a74"></div></div><div class=3D"_5d4b535"><div class=3D"_48cdfc1">30 Days</=
div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Fix LTSp=
ice 12AU7 Subcircuit Pin Mismatch</div><div class=3D"_2090548" tabindex=3D"=
0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16=
px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0=
 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 =
1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2=
 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2=
f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" t=
abindex=3D"0"><div class=3D"c08e6e93">Python Function for Date Range String=
s</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=
=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w=
3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentCo=
lor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0=
 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenod=
d"></path></svg></div></div><div class=3D"_2f87737"></div><div class=3D"eaa=
aba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08=
e6e93">Modify Function to Return Pandas DataFrame</div><div class=3D"_20905=
48" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: =
16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none=
" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=
=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2=
 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div>=
<div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div clas=
s=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Refining Reply for Pr=
ofessional Tone</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"d=
s-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D=
"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-r=
ule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><div=
 class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div=
 class=3D"c08e6e93">Explode Dictionary Column into DataFrame</div><div clas=
s=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16=
px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" f=
ill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 =
1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg><=
/div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></di=
v><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Expand Nes=
ted JSON to DataFrame Columns</div><div class=3D"_2090548" tabindex=3D"0"><=
div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"=
><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 =
24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 =
4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0=
 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f877=
37"></div><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabin=
dex=3D"0"><div class=3D"c08e6e93">Modify Function to Return DataFrame</div>=
<div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font=
-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/20=
00/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></pat=
h></svg></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"><=
/div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">V=
isualize Canceled Trips Heatmap with Seaborn</div><div class=3D"_2090548" t=
abindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px;=
 height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" vie=
wBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M=
3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 =
1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div =
class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"=
_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Explaining pd.read_csv Par=
ameters in Code</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"d=
s-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D=
"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-r=
ule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><div=
 class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div=
 class=3D"c08e6e93">Fix Raspberry Pi apt upgrade lock issue</div><div class=
=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16p=
x; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fi=
ll=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"=
evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1=
-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></=
div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div=
><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Creating Vi=
olin Plot with Seaborn Explained</div><div class=3D"_2090548" tabindex=3D"0=
"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16p=
x;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 =
24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1=
 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 =
0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f=
87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" ta=
bindex=3D"0"><div class=3D"c08e6e93">Boxplot of Current by Hour Explained</=
div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"=
font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.or=
g/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor"=
 fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1=
 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"><=
/path></svg></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba5=
5"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e9=
3">Visualize AMR Battery Data by Hour</div><div class=3D"_2090548" tabindex=
=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height=
: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D=
"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 =
2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=
=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_8342=
1f9" tabindex=3D"0"><div class=3D"c08e6e93">Seaborn Visualization of AMR Ba=
ttery Data</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-ico=
n" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http=
://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"c=
urrentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7=
 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=
=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><div cl=
ass=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div cl=
ass=3D"c08e6e93">Handle datetime conversion errors and remove rows</div><di=
v class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-si=
ze: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/=
svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-r=
ule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 =
2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path><=
/svg></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></di=
v></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Modi=
fy code to skip CSV errors</div><div class=3D"_2090548" tabindex=3D"0"><div=
 class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><s=
vg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"=
></div><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=
=3D"0"><div class=3D"c08e6e93">Clean CSV with 6-column rows only</div><div =
class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size=
: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/sv=
g" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rul=
e=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 =
0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></s=
vg></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div>=
</div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Optimi=
ze Large CSV Import to Pandas DataFrame</div><div class=3D"_2090548" tabind=
ex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; heig=
ht: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=
=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12=
a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 =
4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div clas=
s=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_834=
21f9" tabindex=3D"0"><div class=3D"c08e6e93">Modify Script to Combine CSV t=
o DuckDB</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon"=
 style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http:/=
/www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"cur=
rentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0=
a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"=
evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><div class=
=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=
=3D"c08e6e93">Combine Battery Trend CSV Files by Date</div><div class=3D"_2=
090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; wid=
th: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"=
none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenod=
d" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7=
 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></=
div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div =
class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">FastAPI for PPC A=
nomaly Detection Analysis</div><div class=3D"_2090548" tabindex=3D"0"><div =
class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><sv=
g xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24">=
<path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 =
2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4=
 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737">=
</div><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=
=3D"0"><div class=3D"c08e6e93">Add Timing to API Testing Code</div><div cla=
ss=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 1=
6px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" =
fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0=
 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></sv=
g></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div><=
/div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Modify =
function to skip today's fetch condition</div><div class=3D"_2090548" tabin=
dex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; hei=
ght: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=
=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12=
a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 =
4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div clas=
s=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_834=
21f9" tabindex=3D"0"><div class=3D"c08e6e93">Refining Email for NDA Counter=
signature Request</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D=
"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=
=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path f=
ill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0=
 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" cli=
p-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><=
div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><=
div class=3D"c08e6e93">Fixing Plot Filenames in API Analysis</div><div clas=
s=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16=
px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" f=
ill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 =
1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg><=
/div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></di=
v><div class=3D"b9cb4a74"></div></div><div class=3D"_5d4b535"><div class=3D=
"_48cdfc1">2025-06</div><div class=3D"_83421f9" tabindex=3D"0"><div class=
=3D"c08e6e93">Fix Plot File Appending in Python Code</div><div class=3D"_20=
90548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; widt=
h: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"n=
one" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd=
" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 =
0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></d=
iv><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div c=
lass=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Modify Code to Use=
 Fixed Temp Directory</div><div class=3D"_2090548" tabindex=3D"0"><div clas=
s=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xm=
lns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><pat=
h fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 =
0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" =
clip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></di=
v><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0=
"><div class=3D"c08e6e93">Streamlit PPC Anomaly Detection Web App</div><div=
 class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-siz=
e: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/s=
vg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-ru=
le=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2=
 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></=
svg></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div=
></div><div class=3D"b9cb4a74"></div></div><div class=3D"_5d4b535"><div cla=
ss=3D"_48cdfc1">2025-05</div><div class=3D"_83421f9" tabindex=3D"0"><div cl=
ass=3D"c08e6e93">Eye Examination Results and Analysis Summary</div><div cla=
ss=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 1=
6px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" =
fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0=
 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></sv=
g></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div><=
/div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">On-site=
 Theia1000 training conflicts with automation.</div><div class=3D"_2090548"=
 tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16p=
x; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" v=
iewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D=
"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 =
0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><di=
v class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=
=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Request to Reconsider =
On-Site Training Schedule</div><div class=3D"_2090548" tabindex=3D"0"><div =
class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><sv=
g xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24">=
<path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 =
2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4=
 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737">=
</div><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=
=3D"0"><div class=3D"c08e6e93">Watch Repair Report Analysis and Recommendat=
ions</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" sty=
le=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www=
.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"current=
Color" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2=
 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"even=
odd"></path></svg></div></div><div class=3D"_2f87737"></div><div class=3D"e=
aaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c=
08e6e93">Change Date Format in Excel CSV</div><div class=3D"_2090548" tabin=
dex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; hei=
ght: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=
=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12=
a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 =
4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div clas=
s=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_834=
21f9" tabindex=3D"0"><div class=3D"c08e6e93">Daily Robot Utilization Visual=
ization by State</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"=
ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=
=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path f=
ill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0=
 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" cli=
p-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><=
div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><=
div class=3D"c08e6e93">Add Daily Robot Utilization Visualization</div><div =
class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size=
: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/sv=
g" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rul=
e=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 =
0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></s=
vg></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div>=
</div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Visual=
izing Task Data Excluding Requester Column</div><div class=3D"_2090548" tab=
index=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; h=
eight: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewB=
ox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 =
12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 =
1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div cl=
ass=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_8=
3421f9" tabindex=3D"0"><div class=3D"c08e6e93">Fix Date Parsing Warning in =
Python</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" s=
tyle=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://w=
ww.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"curre=
ntColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2=
 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"ev=
enodd"></path></svg></div></div><div class=3D"_2f87737"></div><div class=3D=
"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D=
"c08e6e93">Fix pandas datetime parsing warning</div><div class=3D"_2090548"=
 tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16p=
x; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" v=
iewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D=
"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 =
0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><di=
v class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=
=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Sort DataFrame columns=
 by SVID_1405 correlation</div><div class=3D"_2090548" tabindex=3D"0"><div =
class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><sv=
g xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24">=
<path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 =
2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4=
 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737">=
</div><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=
=3D"0"><div class=3D"c08e6e93">Python Code to Find Recipes with Anomaly Sco=
re 1</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" sty=
le=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www=
.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"current=
Color" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2=
 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"even=
odd"></path></svg></div></div><div class=3D"_2f87737"></div><div class=3D"e=
aaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c=
08e6e93">Sort DataFrame by AnomalyScore Descending</div><div class=3D"_2090=
548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width:=
 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"non=
e" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" =
d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a=
2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div=
><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div cla=
ss=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Python Code for Reci=
pe Row Count Sort</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D=
"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=
=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path f=
ill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0=
 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" cli=
p-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><=
div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><=
div class=3D"c08e6e93">Switch to Polars DataFrame for Lazy Processing</div>=
<div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font=
-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/20=
00/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></pat=
h></svg></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"><=
/div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">I=
nterpreting Seaborn Violin Plots Guide</div><div class=3D"_2090548" tabinde=
x=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; heigh=
t: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=
=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12=
a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 =
4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div clas=
s=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_834=
21f9" tabindex=3D"0"><div class=3D"c08e6e93">DuckDB SQL with Python List IN=
 Clause</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" =
style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://=
www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"curr=
entColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a=
2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"e=
venodd"></path></svg></div></div><div class=3D"_2f87737"></div><div class=
=3D"eaaaba55"></div></div><div class=3D"b9cb4a74"></div></div><div class=3D=
"_5d4b535"><div class=3D"_48cdfc1">2025-04</div><div class=3D"_83421f9" tab=
index=3D"0"><div class=3D"c08e6e93">Create Seaborn Trend Chart for Anomaly =
Score</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" st=
yle=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://ww=
w.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"curren=
tColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 =
2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"eve=
nodd"></path></svg></div></div><div class=3D"_2f87737"></div><div class=3D"=
eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"=
c08e6e93">Localization Solutions for Large Production Floors</div><div clas=
s=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16=
px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" f=
ill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 =
1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg><=
/div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></di=
v><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Collaborat=
ive Development of 3D Wire Bond Module</div><div class=3D"_2090548" tabinde=
x=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; heigh=
t: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=
=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12=
a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 =
4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div clas=
s=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_834=
21f9" tabindex=3D"0"><div class=3D"c08e6e93">Anomaly Detection with Isolati=
on Forest Code</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds=
-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"=
http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-r=
ule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><div=
 class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div=
 class=3D"c08e6e93">Request for NDA Review Assistance</div><div class=3D"_2=
090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; wid=
th: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"=
none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenod=
d" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7=
 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></=
div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div =
class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">pls revise below =
python code on </div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"d=
s-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D=
"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-r=
ule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><div=
 class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div=
 class=3D"c08e6e93">Modify Python Function to Return File Paths</div><div c=
lass=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size:=
 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg=
" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0=
 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></sv=
g></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div><=
/div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Python =
Code for Looping PPC Data Export</div><div class=3D"_2090548" tabindex=3D"0=
"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16p=
x;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 =
24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1=
 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 =
0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f=
87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" ta=
bindex=3D"0"><div class=3D"c08e6e93">Display Image in Jupyter Notebook Pyth=
on</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=
=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w=
3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentCo=
lor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0=
 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenod=
d"></path></svg></div></div><div class=3D"_2f87737"></div><div class=3D"eaa=
aba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08=
e6e93">Revising Data Mining for Business Insights</div><div class=3D"_20905=
48" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: =
16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none=
" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=
=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2=
 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div>=
<div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div clas=
s=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Diagnosing PC Blue Sc=
reen During Gaming</div><div class=3D"_2090548" tabindex=3D"0"><div class=
=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xml=
ns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path=
 fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0=
 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" c=
lip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div=
><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"=
><div class=3D"c08e6e93">Convert Code to Function with Error Handling</div>=
<div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font=
-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/20=
00/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></pat=
h></svg></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"><=
/div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">C=
onvert List to Pandas DataFrame in Python</div><div class=3D"_2090548" tabi=
ndex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; he=
ight: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBo=
x=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 1=
2a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1=
 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div cla=
ss=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_83=
421f9" tabindex=3D"0"><div class=3D"c08e6e93">Handling Large JSON Data in P=
ython</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" st=
yle=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://ww=
w.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"curren=
tColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 =
2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"eve=
nodd"></path></svg></div></div><div class=3D"_2f87737"></div><div class=3D"=
eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"=
c08e6e93">Optimizing DuckDB for Large Datasets</div><div class=3D"_2090548"=
 tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16p=
x; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" v=
iewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D=
"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 =
0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><di=
v class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=
=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Collaboration Plan for=
 AOI Solutions Enhancement</div><div class=3D"_2090548" tabindex=3D"0"><div=
 class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><s=
vg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"=
></div><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=
=3D"0"><div class=3D"c08e6e93">Code Review for Violin Plot Visualization</d=
iv><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"f=
ont-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org=
/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" =
fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 =
4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></=
path></svg></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55=
"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93=
">Python: Create and Append DuckDB Table with Polars</div><div class=3D"_20=
90548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; widt=
h: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"n=
one" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd=
" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 =
0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></d=
iv><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div c=
lass=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Modify Polars Code=
 for Categorical Anomaly Detection</div><div class=3D"_2090548" tabindex=3D=
"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 1=
6px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 =
0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0=
 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 =
2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_=
2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" =
tabindex=3D"0"><div class=3D"c08e6e93">Python Code for Program Processing T=
ime</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" styl=
e=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.=
w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentC=
olor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 =
0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"eveno=
dd"></path></svg></div></div><div class=3D"_2f87737"></div><div class=3D"ea=
aaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c0=
8e6e93">Convert Pandas DataFrame to Polars DataFrame</div><div class=3D"_20=
90548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; widt=
h: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"n=
one" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd=
" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 =
0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></d=
iv><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div c=
lass=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Using SQL with Pol=
ars Large DataFrames</div><div class=3D"_2090548" tabindex=3D"0"><div class=
=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xml=
ns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path=
 fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0=
 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" c=
lip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div=
><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"=
><div class=3D"c08e6e93">Convert Polars DataFrame to Pandas DataFrame</div>=
<div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font=
-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/20=
00/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></pat=
h></svg></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"><=
/div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">C=
reating Pandas DataFrame from List Guide</div><div class=3D"_2090548" tabin=
dex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; hei=
ght: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=
=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12=
a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 =
4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div clas=
s=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_834=
21f9" tabindex=3D"0"><div class=3D"c08e6e93">Python List Size and Memory Li=
mits Explained</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds=
-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"=
http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-r=
ule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><div=
 class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div=
 class=3D"c08e6e93">Fixing Schema Mismatch in DataFrame Concatenation</div>=
<div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font=
-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/20=
00/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></pat=
h></svg></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"><=
/div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">C=
onvert Polars DataFrame to Unix Time</div><div class=3D"_2090548" tabindex=
=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height=
: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D=
"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 =
2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=
=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_8342=
1f9" tabindex=3D"0"><div class=3D"c08e6e93">Polars DataFrame Operations in =
Python Guide</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-i=
con" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"ht=
tp://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D=
"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0=
m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=
=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><div cl=
ass=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div cl=
ass=3D"c08e6e93">Pls modify below code to use Pol</div><div class=3D"_20905=
48" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: =
16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none=
" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=
=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2=
 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div>=
<div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div clas=
s=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Convert Pandas Code t=
o Polars Library Usage</div><div class=3D"_2090548" tabindex=3D"0"><div cla=
ss=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg x=
mlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><pa=
th fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2=
 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0"=
 clip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></d=
iv><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"=
0"><div class=3D"c08e6e93">Convert Pandas to Polars Excel Code</div><div cl=
ass=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: =
16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg"=
 fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0=
 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></sv=
g></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div><=
/div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Visuali=
zing Anomaly Score Distribution by EquipID</div><div class=3D"_2090548" tab=
index=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; h=
eight: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewB=
ox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 =
12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 =
1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div cl=
ass=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_8=
3421f9" tabindex=3D"0"><div class=3D"c08e6e93">Fix SQL Syntax Error in Duck=
DB Query</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon"=
 style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http:/=
/www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"cur=
rentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0=
a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"=
evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><div class=
=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=
=3D"c08e6e93">Convert Python Code to Use Polars Library</div><div class=3D"=
_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; w=
idth: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=
=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"ev=
enodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4=
 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></di=
v></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><=
div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Creating Blan=
k Polars DataFrame with Specified Schema</div><div class=3D"_2090548" tabin=
dex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; hei=
ght: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=
=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12=
a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 =
4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div clas=
s=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_834=
21f9" tabindex=3D"0"><div class=3D"c08e6e93">Optimizing SQL with pandas for=
 large data</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-ic=
on" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"htt=
p://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"=
currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m=
7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=
=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><div cl=
ass=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div cl=
ass=3D"c08e6e93">Change DataFrame Column Dtype in Python</div><div class=3D=
"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; =
width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=
=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"ev=
enodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4=
 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></di=
v></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><=
div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Create New Pa=
ndas DataFrame from Existing Columns</div><div class=3D"_2090548" tabindex=
=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height=
: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D=
"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 =
2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=
=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_8342=
1f9" tabindex=3D"0"><div class=3D"c08e6e93">Adding Keys to Python Dictionar=
ies Guide</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon=
" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"cu=
rrentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 =
0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D=
"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><div class=
=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=
=3D"c08e6e93">Convert Dictionary Keys to Strings</div><div class=3D"_209054=
8" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 1=
6px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none"=
 viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=
=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2=
 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div>=
<div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div clas=
s=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Fix Python KeyError i=
n Dictionary Access</div><div class=3D"_2090548" tabindex=3D"0"><div class=
=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xml=
ns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path=
 fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0=
 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" c=
lip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div=
><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"=
><div class=3D"c08e6e93">Append Dictionary Data to Pandas DataFrames</div><=
div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-=
size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/200=
0/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill=
-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 =
2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path=
></svg></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></=
div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Sp=
lit Dictionary Data into Two Pandas DataFrames</div><div class=3D"_2090548"=
 tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16p=
x; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" v=
iewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D=
"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 =
0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><di=
v class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=
=3D"b9cb4a74"></div></div><div class=3D"_5d4b535"><div class=3D"_48cdfc1">2=
025-03</div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">=
Convert Pandas DateTime to Unix Time</div><div class=3D"_2090548" tabindex=
=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height=
: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D=
"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 =
2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=
=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"_8342=
1f9" tabindex=3D"0"><div class=3D"c08e6e93">Import Excel to Pandas DataFram=
e Guide</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" =
style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://=
www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"curr=
entColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a=
2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"e=
venodd"></path></svg></div></div><div class=3D"_2f87737"></div><div class=
=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div class=
=3D"c08e6e93">Isolation Forest with Mixed Data Types</div><div class=3D"_20=
90548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; widt=
h: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"n=
one" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd=
" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 =
0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></d=
iv><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div c=
lass=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">how create pandas =
blank datafram</div><div class=3D"_2090548" tabindex=3D"0"><div class=3D"ds=
-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg xmlns=3D"=
http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-r=
ule=3D"evenodd"></path></svg></div></div><div class=3D"_2f87737"></div><div=
 class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabindex=3D"0"><div=
 class=3D"c08e6e93">Understanding float32 in Python and Usage</div><div cla=
ss=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 1=
6px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" =
fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0=
 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></sv=
g></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div><=
/div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Birthda=
y Wishes for Sister Voranuch</div><div class=3D"_2090548" tabindex=3D"0"><d=
iv class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;">=
<svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 2=
4"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4=
 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 =
1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div class=3D"_2f8773=
7"></div><div class=3D"eaaaba55"></div></div><div class=3D"_83421f9" tabind=
ex=3D"0"><div class=3D"c08e6e93">Compare US Stock ETFs VT and O</div><div c=
lass=3D"_2090548" tabindex=3D"0"><div class=3D"ds-icon" style=3D"font-size:=
 16px; width: 16px; height: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg=
" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0=
 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></sv=
g></div></div><div class=3D"_2f87737"></div><div class=3D"eaaaba55"></div><=
/div><div class=3D"_83421f9" tabindex=3D"0"><div class=3D"c08e6e93">Replace=
 "System.Byte[]" with "10e6" in DataFrame</div><div class=3D"_2090548" tabi=
ndex=3D"0"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; he=
ight: 16px;"><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBo=
x=3D"0 0 24 24"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 1=
2a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1=
 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></div></div><div cla=
ss=3D"_2f87737"></div><div class=3D"eaaaba55"></div></div><div class=3D"b9c=
b4a74"></div></div></div><div class=3D"de3d058c"></div></div><div class=3D"=
c7f51894"><div class=3D"a1e75851"><div class=3D"ds-icon" style=3D"font-size=
: 20px; width: 20px; height: 20px; margin-right: 8px;"><svg viewBox=3D"0 0 =
1024 1024" xmlns=3D"http://www.w3.org/2000/svg" width=3D"300" height=3D"300=
"><path d=3D"M725.333 1024H298.667a128 128 0 0 1-128-128V128a128 128 0 0 1 =
128-128h426.666a128 128 0 0 1 128 128v768a128 128 0 0 1-128 128zM298.667 85=
.333A42.667 42.667 0 0 0 256 128v768a42.667 42.667 0 0 0 42.667 42.667h426.=
666A42.667 42.667 0 0 0 768 896V128a42.667 42.667 0 0 0-42.667-42.667z" fil=
l=3D"currentColor"></path><path d=3D"M469.33299999999997 853.333a42.667 42.=
667 0 1 0 85.334 0 42.667 42.667 0 1 0-85.334 0zM554.667 213.333h-85.334a42=
.667 42.667 0 0 1 0-85.333h85.334a42.667 42.667 0 0 1 0 85.333z" fill=3D"cu=
rrentColor"></path></svg></div>Get App<span class=3D"_106b9f9"><svg width=
=3D"36" height=3D"16" viewBox=3D"0 0 36 16" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg"><rect width=3D"36" height=3D"16" rx=3D"8" fill=3D"url(#=
paint0_linear_5707_2640)" fill-opacity=3D".85"></rect><path d=3D"M7.113 4.8=
6h1.1l3.65 5.31h.04V4.86h1.09V12h-1.06l-3.69-5.37h-.04V12h-1.09V4.86zm7.285=
 0h5.13v.93h-4.04v2.08h3.8v.93h-3.8v2.27h4.21V12h-5.3V4.86zm5.756 0h1.23l1.=
39 5.56h.04l1.46-5.56h1.14l1.46 5.56h.04l1.39-5.56h1.23L27.475 12h-1.16l-1.=
45-5.51h-.04L23.375 12h-1.17l-2.05-7.14z" fill=3D"#fff"></path><defs><linea=
rGradient id=3D"paint0_linear_5707_2640" y1=3D"8" x2=3D"36" y2=3D"8" gradie=
ntUnits=3D"userSpaceOnUse"><stop stop-color=3D"#4D6BFE"></stop><stop offset=
=3D"1" stop-color=3D"#6948D6"></stop></linearGradient></defs></svg></span><=
/div><div class=3D"c6ab9234"><div class=3D"ede5bc47"><img class=3D"fdf01f38=
" src=3D"https://static.deepseek.com/user-avatar/anWDO5_R6F-1-LsVW5YxcQz0" =
alt=3D"" aria-hidden=3D"true"></div><div class=3D"_7d65532">My Profile</div=
></div></div></div></div><div class=3D"_4cbcd96 _7d10bb1"></div><div class=
=3D"_7780f2e"><div class=3D"_765a5cd"><div class=3D"_2be88ba"><div class=3D=
"f8d1e4c0"><div style=3D"flex: 1 1 0%; min-width: 0px; display: flex; place=
-content: center; z-index: 12;"><div class=3D"d8ed659a" tabindex=3D"0" styl=
e=3D"outline: none;">Evaluating Semantic Segmentation Model for Weed Detect=
ion</div></div><div class=3D"_62b4800"></div></div><div class=3D"_0efe408">=
<div class=3D"ds-icon d7829b2f _2e7d873" style=3D"font-size: 24px; width: 2=
4px; height: 24px; color: rgb(139, 139, 139);"><svg width=3D"28" height=3D"=
28" viewBox=3D"0 0 28 28" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
"><path d=3D"M23.7222 4H4.27776C3.57207 4 3 4.57207 3 5.27776C3 5.98345 3.5=
7207 6.55553 4.27776 6.55553H23.7222C24.4279 6.55553 25 5.98345 25 5.27776C=
25 4.57207 24.4279 4 23.7222 4Z" fill=3D"currentColor"></path><path d=3D"M1=
4.7593 12.8887H4.27776C3.57207 12.8887 3 13.4607 3 14.1664C3 14.8721 3.5720=
7 15.4442 4.27776 15.4442H14.7593C15.465 15.4442 16.037 14.8721 16.037 14.1=
664C16.037 13.4607 15.465 12.8887 14.7593 12.8887Z" fill=3D"currentColor"><=
/path><path d=3D"M23.7222 21.7334H4.27776C3.57207 21.7334 3 22.3055 3 23.01=
12C3 23.7169 3.57207 24.2889 4.27776 24.2889H23.7222C24.4279 24.2889 25 23.=
7169 25 23.0112C25 22.3055 24.4279 21.7334 23.7222 21.7334Z" fill=3D"curren=
tColor"></path></svg></div><div class=3D"ds-icon d7829b2f _23ecf90" style=
=3D"font-size: 24px; width: 24px; height: 24px; color: rgb(139, 139, 139);"=
><svg width=3D"28" height=3D"28" viewBox=3D"0 0 28 28" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg"><path d=3D"M9.10999 27C8.92999 27 8.76001 2=
6.96 8.60001 26.9C8.43001 26.83 8.29 26.74 8.16 26.61C8.03 26.49 7.94 26.34=
99 7.87 26.1899C7.79999 26.0299 7.76001 25.8599 7.76001 25.6899L7.73001 23.=
04C7.34001 22.98 6.95001 22.8799 6.57001 22.7599C6.19001 22.6299 5.83001 22=
.48 5.48001 22.29C5.13001 22.1 4.79999 21.88 4.48999 21.63C4.17999 21.39 3.=
89 21.1199 3.63 20.82C3.37 20.52 3.13999 20.21 2.92999 19.87C2.72999 19.53 =
2.56001 19.18 2.42001 18.82C2.28001 18.45 2.17001 18.07 2.10001 17.69C2.030=
01 17.3 2 16.92 2 16.53V9.46995C2 9.03995 2.04 8.61995 2.12 8.19995C2.21 7.=
77995 2.34 7.36995 2.5 6.96995C2.67 6.57995 2.88 6.19995 3.12 5.84995C3.36 =
5.48995 3.64001 5.15995 3.95001 4.85995C4.26001 4.55995 4.59999 4.28995 4.9=
5999 4.04995C5.32999 3.80995 5.70999 3.60995 6.10999 3.44995C6.51999 3.2799=
5 6.94 3.15995 7.37 3.07995C7.79999 2.98995 8.23001 2.94995 8.67001 2.94995=
H13.3C13.46 2.94995 13.61 2.97995 13.76 3.03995C13.9 3.09995 14.03 3.17995 =
14.14 3.28995C14.25 3.39995 14.33 3.51995 14.39 3.65995C14.45 3.79995 14.48=
 3.94995 14.48 4.09995C14.48 4.25995 14.45 4.39995 14.39 4.54995C14.33 4.68=
995 14.25 4.80995 14.14 4.91995C14.03 5.02995 13.9 5.10995 13.76 5.16995C13=
.61 5.22995 13.46 5.25995 13.3 5.25995H8.67001C8.38001 5.25995 8.09999 5.27=
995 7.82999 5.33995C7.54999 5.38995 7.27999 5.46995 7.01999 5.57995C6.75999=
 5.67995 6.50999 5.80995 6.26999 5.96995C6.03999 6.11995 5.82 6.29995 5.62 =
6.48995C5.42 6.68995 5.23999 6.89995 5.07999 7.12995C4.92999 7.35995 4.7899=
9 7.59995 4.67999 7.85995C4.57999 8.10995 4.49 8.37995 4.44 8.64995C4.38 8.=
91995 4.35999 9.18995 4.35999 9.46995V16.53C4.35999 16.81 4.38 17.08 4.44 1=
7.36C4.5 17.63 4.58 17.9 4.69 18.16C4.8 18.42 4.93 18.67 5.09 18.9C5.25 19.=
13 5.43001 19.3499 5.64001 19.5499C5.84001 19.75 6.05999 19.92 6.29999 20.0=
8C6.53999 20.24 6.79 20.37 7.06 20.47C7.32 20.58 7.6 20.66 7.88 20.72C8.160=
01 20.77 8.44001 20.7999 8.73001 20.7999C8.91001 20.7999 9.08 20.83 9.25 20=
.9C9.41 20.97 9.55999 21.0599 9.67999 21.18C9.80999 21.3099 9.91001 21.45 9=
.98001 21.61C10.05 21.77 10.08 21.94 10.09 22.11L10.1 23.74L13.08 21.61C13.=
84 21.07 14.69 20.7999 15.63 20.7999H19.32C19.61 20.7999 19.89 20.77 20.16 =
20.72C20.44 20.67 20.71 20.59 20.97 20.4799C21.23 20.3699 21.48 20.24 21.72=
 20.09C21.95 19.94 22.17 19.76 22.37 19.57C22.57 19.3699 22.75 19.16 22.91 =
18.93C23.07 18.7 23.2 18.46 23.31 18.2C23.41 17.95 23.5 17.68 23.55 17.41C2=
3.61 17.14 23.63 16.87 23.63 16.59V12.94C23.63 12.79 23.66 12.64 23.72 12.5=
C23.78 12.36 23.87 12.23 23.98 12.13C24.09 12.02 24.22 11.93 24.36 11.88C24=
.51 11.82 24.66 11.79 24.82 11.79C24.97 11.79 25.12 11.82 25.27 11.88C25.41=
 11.93 25.54 12.02 25.65 12.13C25.76 12.23 25.85 12.36 25.91 12.5C25.97 12.=
64 26 12.79 26 12.94V16.59C26 17.02 25.95 17.44 25.87 17.86C25.78 18.28 25.=
66 18.69 25.49 19.08C25.32 19.48 25.11 19.8499 24.87 20.2099C24.63 20.57 24=
.35 20.9 24.04 21.2C23.73 21.5 23.39 21.7699 23.03 22.0099C22.67 22.2499 22=
.28 22.45 21.88 22.61C21.47 22.77 21.06 22.9 20.63 22.9799C20.2 23.07 19.76=
 23.11 19.32 23.11H16.4C15.47 23.11 14.62 23.3799 13.86 23.9199L9.91 26.74C=
9.67 26.91 9.39999 27 9.10999 27Z" fill=3D"currentColor"></path><path d=3D"=
M24.6805 5.14453H18.1874C17.5505 5.14453 17.0342 5.66086 17.0342 6.29778C17=
.0342 6.9347 17.5505 7.45102 18.1874 7.45102H24.6805C25.3175 7.45102 25.833=
8 6.9347 25.8338 6.29778C25.8338 5.66086 25.3175 5.14453 24.6805 5.14453Z" =
fill=3D"currentColor"></path><path d=3D"M22.6137 3.1804C22.6137 2.52848 22.=
0852 2 21.4333 2C20.7814 2 20.2529 2.52848 20.2529 3.1804V9.4168C20.2529 10=
.0687 20.7814 10.5972 21.4333 10.5972C22.0852 10.5972 22.6137 10.0687 22.61=
37 9.4168V3.1804Z" fill=3D"currentColor"></path></svg></div></div></div><di=
v class=3D"_3919b83"><div class=3D"_8f60047 scrollable"><div class=3D"_0f72=
b0b"><div class=3D"dad65929"><div class=3D"_9663006"><div class=3D"a4380d7b=
 _7a0c3ba" style=3D"margin-bottom: 0px; padding-left: 48px; max-height: non=
e; position: relative; overflow: visible; margin-top: 0px;"><div class=3D"_=
76cd190 _0004e59"><div class=3D"d2d04dae"><div class=3D"ds-icon b3a5d6c1" s=
tyle=3D"font-size: 32px; width: 32px; height: 32px;"><svg width=3D"32" heig=
ht=3D"32" viewBox=3D"0 0 32 32" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg"><path d=3D"M7 9C7 6.79086 8.79086 5 11 5L18.6383 5C19.1906 5 19.638=
3 5.44772 19.6383 6V6.92308C19.6383 9.13222 21.4292 10.9231 23.6383 10.9231=
H24C24.5523 10.9231 25 11.3708 25 11.9231V23C25 25.2091 23.2091 27 21 27H11=
C8.79086 27 7 25.2091 7 23V9Z" fill=3D"#F8CA27"></path><g filter=3D"url(#fi=
lter0_d_602_422)"><path d=3D"M19.6602 6.92458V5.84766L24.4126 10.9246H23.66=
02C21.451 10.9246 19.6602 9.13372 19.6602 6.92458Z" fill=3D"#F8EDC7"></path=
></g><path d=3D"M20.2557 12H11.7443C11.3332 12 11 12.3358 11 12.75C11 13.16=
42 11.3332 13.5 11.7443 13.5H20.2557C20.6668 13.5 21 13.1642 21 12.75C21 12=
.3358 20.6668 12 20.2557 12Z" fill=3D"#F8EDC7"></path><path d=3D"M20.2557 1=
6L11.7443 16.0017C11.3332 16.0017 11 16.3371 11 16.7509C11 17.1646 11.3332 =
17.5 11.7443 17.5L20.2557 17.4983C20.6668 17.4983 21 17.1629 21 16.7491C21 =
16.3354 20.6668 16 20.2557 16Z" fill=3D"#F8EDC7"></path><path d=3D"M15.3575=
 20H11.6425C11.2876 20 11 20.3358 11 20.75C11 21.1642 11.2876 21.5 11.6425 =
21.5H15.3575C15.7124 21.5 16 21.1642 16 20.75C16 20.3358 15.7124 20 15.3575=
 20Z" fill=3D"#F8EDC7"></path><defs><filter id=3D"filter0_d_602_422" x=3D"1=
9.1602" y=3D"5.34766" width=3D"7.75195" height=3D"8.07617" filterUnits=3D"u=
serSpaceOnUse" color-interpolation-filters=3D"sRGB"><feFlood flood-opacity=
=3D"0" result=3D"BackgroundImageFix"></feFlood><feColorMatrix in=3D"SourceA=
lpha" type=3D"matrix" values=3D"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" =
result=3D"hardAlpha"></feColorMatrix><feOffset dx=3D"1" dy=3D"1"></feOffset=
><feGaussianBlur stdDeviation=3D"0.75"></feGaussianBlur><feComposite in2=3D=
"hardAlpha" operator=3D"out"></feComposite><feColorMatrix type=3D"matrix" v=
alues=3D"0 0 0 0 0.591623 0 0 0 0 0.452482 0 0 0 0 0.0698445 0 0 0 0.25 0">=
</feColorMatrix><feBlend mode=3D"normal" in2=3D"BackgroundImageFix" result=
=3D"effect1_dropShadow_602_422"></feBlend><feBlend mode=3D"normal" in=3D"So=
urceGraphic" in2=3D"effect1_dropShadow_602_422" result=3D"shape"></feBlend>=
</filter></defs></svg></div><div class=3D"_789aea7"><div class=3D"f3a54b52"=
>test.py</div><div class=3D"_5119742">PY 5.02KB</div></div></div></div></di=
v><div class=3D"fbb737a4 _8271fc3">explain the attached python code</div><d=
iv class=3D"e13328ad b12bb222"><div class=3D"_425ea0b"><div class=3D"ds-fle=
x _78e0558" style=3D"align-items: flex-end; gap: 0px;"><div class=3D"ds-ico=
n-button" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #909090; --d=
s-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 20px;=
 width: 20px; height: 20px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0=
 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M3.65=
169 12.9243C3.68173 13.1045 3.74181 13.2748 3.80189 13.445C3.87198 13.6052 =
3.96211 13.7654 4.06225 13.9156C4.16238 14.0658 4.27253 14.206 4.4027 14.33=
62C4.52286 14.4663 4.66306 14.5765 4.81326 14.6766C4.96346 14.7768 5.11366 =
14.8569 5.28389 14.927C5.44411 14.9971 5.61434 15.0571 5.79459 15.0872C5.97=
483 15.1272 6.14506 15.1373 6.3253 15.1373V16.9196C6.30739 16.9196 6.28949 =
16.9195 6.27159 16.9193C5.9991 16.9158 5.72659 16.8859 5.4541 16.8295C5.163=
71 16.7694 4.88334 16.6893 4.61298 16.5692C4.3326 16.459 4.08226 16.3188 3.=
83193 16.1586C3.59161 15.9884 3.3613 15.7981 3.15102 15.5878C2.94074 15.377=
6 2.7605 15.1473 2.59027 14.9069C2.43006 14.6566 2.28986 14.3962 2.17972 14=
.1259C2.06957 13.8455 1.97944 13.5651 1.91936 13.2747C1.86929 12.9843 1.839=
26 12.684 1.83926 12.3936V6.26532C1.83926 5.96492 1.86929 5.67456 1.91936 5=
.38417C1.97944 5.09378 2.06957 4.80338 2.17972 4.53302C2.28986 4.26265 2.43=
006 4.0023 2.59027 3.75197C2.7605 3.50163 2.94074 3.27132 3.15102 3.06104C3=
.3613 2.85076 3.59161 2.67052 3.83193 2.50029C4.08226 2.33006 4.3326 2.1998=
7 4.61298 2.07971C4.88334 1.96956 5.16371 1.87943 5.4541 1.81935C5.74449 1.=
75927 6.03491 1.73926 6.3253 1.73926H12.3934C12.6838 1.73926 12.9842 1.7592=
7 13.2746 1.81935C13.555 1.87943 13.8354 1.96956 14.1158 2.07971C14.3861 2.=
19987 14.6465 2.33006 14.8868 2.50029C15.1371 2.67052 15.3574 2.85076 15.56=
77 3.06104C15.778 3.27132 15.9582 3.50163 16.1284 3.75197C16.2887 4.0023 16=
.4288 4.26265 16.539 4.53302C16.6592 4.80338 16.7393 5.09378 16.7994 5.3841=
7C16.8558 5.65722 16.8858 5.93024 16.8892 6.21161C16.8894 6.22948 16.8895 6=
.24739 16.8895 6.26532H15.1271C15.1271 6.08508 15.1071 5.90486 15.067 5.724=
62C15.037 5.55439 14.9869 5.38415 14.9168 5.21392C14.8467 5.04369 14.7566 4=
.88347 14.6665 4.73327C14.5664 4.58307 14.4462 4.45289 14.326 4.32271C14.19=
59 4.19254 14.0557 4.08239 13.9055 3.98226C13.7553 3.88212 13.6051 3.79202 =
13.4348 3.72193C13.2746 3.65184 13.1044 3.60174 12.9242 3.5717C12.7539 3.53=
165 12.5737 3.51163 12.3934 3.51163H6.3253C6.14506 3.51163 5.97483 3.53165 =
5.79459 3.5717C5.61434 3.60174 5.44411 3.65184 5.28389 3.72193C5.11366 3.79=
202 4.96346 3.88212 4.81326 3.98226C4.66306 4.08239 4.52286 4.19254 4.4027 =
4.32271C4.27253 4.45289 4.16238 4.58307 4.06225 4.73327C3.96211 4.88347 3.8=
7198 5.04369 3.80189 5.21392C3.74181 5.38415 3.68173 5.55439 3.65169 5.7246=
2C3.61164 5.90486 3.60164 6.08508 3.60164 6.26532V12.3936C3.60164 12.5638 3=
.61164 12.744 3.65169 12.9243Z" fill=3D"currentColor"></path><path fill-rul=
e=3D"evenodd" clip-rule=3D"evenodd" d=3D"M9.66972 21.6772C9.39936 21.567 9.=
13902 21.4268 8.8987 21.2566C8.64836 21.0964 8.42804 20.9061 8.21776 20.695=
9C8.00748 20.4856 7.81723 20.2553 7.65701 20.015C7.4968 19.7646 7.3566 19.5=
043 7.24646 19.2239C7.12629 18.9535 7.04621 18.6731 6.98613 18.3727C6.92605=
 18.0823 6.89601 17.792 6.89601 17.4915V11.3733C6.89601 11.0729 6.92605 10.=
7825 6.98613 10.4922C7.04621 10.1918 7.12629 9.91137 7.24646 9.64101C7.3566=
 9.36063 7.4968 9.10028 7.65701 8.85996C7.81723 8.60962 8.00748 8.37931 8.2=
1776 8.16903C8.42804 7.95875 8.64836 7.76849 8.8987 7.60828C9.13902 7.43805=
 9.39936 7.29785 9.66972 7.1877C9.94009 7.07755 10.2205 6.98745 10.5108 6.9=
2737C10.8012 6.86729 11.0916 6.83725 11.392 6.83725H17.4602C17.7506 6.83725=
 18.041 6.86729 18.3313 6.92737C18.6217 6.98745 18.9021 7.07755 19.1725 7.1=
877C19.4529 7.29785 19.7032 7.43805 19.9535 7.60828C20.1938 7.76849 20.4242=
 7.95875 20.6345 8.16903C20.8447 8.37931 21.025 8.60962 21.1952 8.85996C21.=
3554 9.10028 21.4956 9.36063 21.6058 9.64101C21.7159 9.91137 21.806 10.1918=
 21.8661 10.4922C21.9162 10.7825 21.9462 11.0729 21.9462 11.3733V17.4915C21=
.9462 17.792 21.9162 18.0823 21.8661 18.3727C21.806 18.6731 21.7159 18.9535=
 21.6058 19.2239C21.4956 19.5043 21.3554 19.7646 21.1952 20.015C21.025 20.2=
553 20.8447 20.4856 20.6345 20.6959C20.4242 20.9061 20.1938 21.0964 19.9535=
 21.2566C19.7032 21.4268 19.4529 21.567 19.1725 21.6772C18.9021 21.7973 18.=
6217 21.8774 18.3313 21.9375C18.041 21.9976 17.7506 22.0276 17.4602 22.0276=
H11.392C11.0916 22.0276 10.8012 21.9976 10.5108 21.9375C10.2205 21.8774 9.9=
4009 21.7973 9.66972 21.6772ZM10.8613 8.6697C11.0316 8.63966 11.2118 8.6196=
5 11.392 8.61965H17.4602C17.6404 8.61965 17.8107 8.63966 17.9909 8.6697C18.=
1611 8.70975 18.3314 8.75983 18.5016 8.82992C18.6618 8.90001 18.822 8.98012=
 18.9722 9.08026C19.1224 9.18039 19.2626 9.30055 19.3828 9.42071C19.513 9.5=
5088 19.6231 9.69109 19.7232 9.84129C19.8234 9.99149 19.9035 10.1517 19.973=
6 10.3219C20.0437 10.4821 20.0937 10.6624 20.1338 10.8326C20.1638 11.0129 2=
0.1838 11.1931 20.1838 11.3733V17.4915C20.1838 17.6718 20.1638 17.852 20.13=
38 18.0323C20.0937 18.2125 20.0437 18.3828 19.9736 18.543C19.9035 18.7132 1=
9.8234 18.8734 19.7232 19.0236C19.6231 19.1738 19.513 19.314 19.3828 19.434=
2C19.2626 19.5643 19.1224 19.6845 18.9722 19.7846C18.822 19.8848 18.6618 19=
.9649 18.5016 20.035C18.3314 20.1051 18.1611 20.1551 17.9909 20.1952C17.810=
7 20.2252 17.6404 20.2452 17.4602 20.2452H11.392C11.2118 20.2452 11.0316 20=
.2252 10.8613 20.1952C10.6811 20.1551 10.5108 20.1051 10.3506 20.035C10.180=
4 19.9649 10.0202 19.8848 9.87 19.7846C9.72982 19.6845 9.58962 19.5643 9.45=
945 19.4342C9.33929 19.314 9.21913 19.1738 9.119 19.0236C9.01886 18.8734 8.=
93875 18.7132 8.86866 18.543C8.79857 18.3828 8.74847 18.2125 8.71843 18.032=
3C8.67838 17.852 8.65836 17.6718 8.65836 17.4915V11.3733C8.65836 11.1931 8.=
67838 11.0129 8.71843 10.8326C8.74847 10.6624 8.79857 10.4821 8.86866 10.32=
19C8.93875 10.1517 9.01886 9.99149 9.119 9.84129C9.21913 9.69109 9.33929 9.=
55088 9.45945 9.42071C9.58962 9.30055 9.72982 9.18039 9.87 9.08026C10.0202 =
8.98012 10.1804 8.90001 10.3506 8.82992C10.5108 8.75983 10.6811 8.70975 10.=
8613 8.6697Z" fill=3D"currentColor"></path></svg></div></div><div class=3D"=
ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #90909=
0; --ds-icon-button-size: 20px; margin-left: 14px; opacity: 1;"><div class=
=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg wid=
th=3D"20" height=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http:/=
/www.w3.org/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M11.712 2.79a1.854 1.854 0 0 1 2.623 0l1.673 1.672a1.854 1.854 0 0 1 0 =
2.623l-9.714 9.714a2.91 2.91 0 0 1-2.058.853H1.945a.8.8 0 0 1-.8-.8v-2.29c0=
-.773.307-1.513.853-2.058l9.714-9.715zm1.492 1.13c-.1-.1-.261-.1-.361 0l-1.=
327 1.326 2.035 2.035 1.327-1.326c.1-.1.1-.262 0-.362L13.204 3.92zm-.783 4.=
491l-2.035-2.034-7.258 7.257a1.31 1.31 0 0 0-.384.927v1.492h1.492c.348 0 .6=
81-.138.927-.384l7.258-7.258z" fill=3D"currentColor"></path><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M17.772 17.608c.35 0 .633-.283.633-=
.633v-.492a.633.633 0 0 0-.633-.633H9.858L8.1 17.608h9.672z" fill=3D"curren=
tColor"></path></svg></div></div></div></div></div></div><div class=3D"_4f9=
bf79 _43c05b5"><div class=3D"_7eb2358 _58dfa60"><svg viewBox=3D"0 0 30 30" =
fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://ww=
w.w3.org/1999/xlink"><path id=3D"path" d=3D"M27.501 8.46875C27.249 8.3457 2=
7.1406 8.58008 26.9932 8.69922C26.9434 8.73828 26.9004 8.78906 26.8584 8.83=
398C26.4902 9.22852 26.0605 9.48633 25.5 9.45508C24.6787 9.41016 23.9785 9.=
66797 23.3594 10.2969C23.2275 9.52148 22.79 9.05859 22.125 8.76172C21.7764 =
8.60742 21.4238 8.45312 21.1807 8.11719C21.0098 7.87891 20.9639 7.61328 20.=
8779 7.35156C20.8242 7.19336 20.7695 7.03125 20.5879 7.00391C20.3906 6.9726=
6 20.3135 7.13867 20.2363 7.27734C19.9258 7.84375 19.8066 8.46875 19.8174 9=
.10156C19.8447 10.5234 20.4453 11.6562 21.6367 12.4629C21.7725 12.5547 21.8=
076 12.6484 21.7646 12.7832C21.6836 13.0605 21.5869 13.3301 21.501 13.6074C=
21.4473 13.7852 21.3662 13.8242 21.1768 13.7461C20.5225 13.4727 19.957 13.0=
684 19.458 12.5781C18.6104 11.7578 17.8438 10.8516 16.8877 10.1426C16.6631 =
9.97656 16.4395 9.82227 16.207 9.67578C15.2314 8.72656 16.335 7.94727 16.58=
98 7.85547C16.8574 7.75977 16.6826 7.42773 15.8193 7.43164C14.957 7.43555 1=
4.167 7.72461 13.1611 8.10938C13.0137 8.16797 12.8594 8.21094 12.7002 8.244=
14C11.7871 8.07227 10.8389 8.0332 9.84766 8.14453C7.98242 8.35352 6.49219 9=
.23633 5.39648 10.7441C4.08105 12.5547 3.77148 14.6133 4.15039 16.7617C4.54=
883 19.0234 5.70215 20.8984 7.47559 22.3633C9.31348 23.8809 11.4307 24.625 =
13.8457 24.4824C15.3125 24.3984 16.9463 24.2012 18.7881 22.6406C19.2529 22.=
8711 19.7402 22.9629 20.5498 23.0332C21.1729 23.0918 21.7725 23.002 22.2373=
 22.9062C22.9648 22.752 22.9141 22.0781 22.6514 21.9531C20.5186 20.959 20.9=
863 21.3633 20.5605 21.0371C21.6445 19.752 23.2783 18.418 23.917 14.0977C23=
.9668 13.7539 23.9238 13.5391 23.917 13.2598C23.9131 13.0918 23.9512 13.025=
4 24.1445 13.0059C24.6787 12.9453 25.1973 12.7988 25.6738 12.5352C27.0557 1=
1.7793 27.6123 10.5391 27.7441 9.05078C27.7637 8.82422 27.7402 8.58789 27.5=
01 8.46875ZM15.46 21.8613C13.3926 20.2344 12.3906 19.6992 11.9766 19.7227C1=
1.5898 19.7441 11.6592 20.1875 11.7441 20.4766C11.833 20.7617 11.9492 20.95=
9 12.1123 21.209C12.2246 21.375 12.3018 21.623 12 21.8066C11.334 22.2207 10=
.1768 21.668 10.1221 21.6406C8.77539 20.8477 7.64941 19.7988 6.85547 18.365=
2C6.08984 16.9844 5.64453 15.5039 5.57129 13.9238C5.55176 13.541 5.66406 13=
.4062 6.04297 13.3379C6.54199 13.2461 7.05762 13.2266 7.55664 13.2988C9.666=
02 13.6074 11.4619 14.5527 12.9668 16.0469C13.8262 16.9004 14.4766 17.918 1=
5.1465 18.9121C15.8584 19.9688 16.625 20.9746 17.6006 21.7988C17.9443 22.08=
79 18.2197 22.3086 18.4824 22.4707C17.6895 22.5586 16.3652 22.5781 15.46 21=
.8613ZM16.4502 15.4805C16.4502 15.3105 16.5859 15.1758 16.7568 15.1758C16.7=
949 15.1758 16.8301 15.1836 16.8613 15.1953C16.9033 15.2109 16.9424 15.2344=
 16.9727 15.2695C17.0273 15.3223 17.0586 15.4004 17.0586 15.4805C17.0586 15=
.6504 16.9229 15.7852 16.7529 15.7852C16.582 15.7852 16.4502 15.6504 16.450=
2 15.4805ZM19.5273 17.0625C19.3301 17.1426 19.1328 17.2129 18.9434 17.2207C=
18.6494 17.2344 18.3281 17.1152 18.1533 16.9688C17.8828 16.7422 17.6895 16.=
6152 17.6074 16.2168C17.5732 16.0469 17.5928 15.7852 17.623 15.6348C17.6934=
 15.3105 17.6152 15.1035 17.3877 14.9141C17.2012 14.7598 16.9658 14.7188 16=
.7061 14.7188C16.6094 14.7188 16.5205 14.6758 16.4541 14.6406C16.3457 14.58=
59 16.2568 14.4512 16.3418 14.2852C16.3691 14.2324 16.501 14.1016 16.5322 1=
4.0781C16.8838 13.877 17.29 13.9434 17.666 14.0938C18.0146 14.2363 18.2773 =
14.498 18.6562 14.8672C19.0439 15.3145 19.1133 15.4395 19.334 15.7734C19.50=
78 16.0371 19.667 16.3066 19.7754 16.6152C19.8408 16.8066 19.7559 16.9648 1=
9.5273 17.0625Z" fill-rule=3D"nonzero" fill=3D"#4D6BFE"></path></svg></div>=
<div class=3D"_48edb25"><div class=3D"_58a6d71 _19db599"><div class=3D"ds-i=
con _7580acb" style=3D"font-size: 12px; width: 12px; height: 12px;"><svg wi=
dth=3D"20" height=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http:=
//www.w3.org/2000/svg"><path d=3D"M2.656 17.344c-1.016-1.015-1.15-2.75-.313=
-4.925.325-.825.73-1.617 1.205-2.365L3.582 10l-.033-.054c-.5-.799-.91-1.596=
-1.206-2.365-.836-2.175-.703-3.91.313-4.926.56-.56 1.364-.86 2.335-.86 1.42=
5 0 3.168.636 4.957 1.756l.053.034.053-.034c1.79-1.12 3.532-1.757 4.957-1.7=
57.972 0 1.776.3 2.335.86 1.014 1.015 1.148 2.752.312 4.926a13.892 13.892 0=
 0 1-1.206 2.365l-.034.054.034.053c.5.8.91 1.596 1.205 2.365.837 2.175.704 =
3.911-.311 4.926-.56.56-1.364.861-2.335.861-1.425 0-3.168-.637-4.957-1.757L=
10 16.415l-.053.033c-1.79 1.12-3.532 1.757-4.957 1.757-.972 0-1.776-.3-2.33=
5-.86zm13.631-4.399c-.187-.488-.429-.988-.71-1.492l-.075-.132-.092.12a22.07=
5 22.075 0 0 1-3.968 3.968l-.12.093.132.074c1.308.734 2.559 1.162 3.556 1.1=
62.563 0 1.006-.138 1.298-.43.3-.3.436-.774.428-1.346-.008-.575-.159-1.264-=
.449-2.017zm-6.345 1.65l.058.042.058-.042a19.881 19.881 0 0 0 4.551-4.537l.=
043-.058-.043-.058a20.123 20.123 0 0 0-2.093-2.458 19.732 19.732 0 0 0-2.45=
8-2.08L10 5.364l-.058.042A19.883 19.883 0 0 0 5.39 9.942L5.348 10l.042.059c=
.631.874 1.332 1.695 2.094 2.457a19.74 19.74 0 0 0 2.458 2.08zm6.366-10.902=
c-.293-.293-.736-.431-1.298-.431-.998 0-2.248.429-3.556 1.163l-.132.074.12.=
092a21.938 21.938 0 0 1 3.968 3.968l.092.12.074-.132c.282-.504.524-1.004.71=
1-1.492.29-.753.442-1.442.45-2.017.007-.572-.129-1.045-.429-1.345zM3.712 7.=
055c.202.514.44 1.013.712 1.493l.074.13.092-.119a21.94 21.94 0 0 1 3.968-3.=
968l.12-.092-.132-.074C7.238 3.69 5.987 3.262 4.99 3.262c-.563 0-1.006.138-=
1.298.43-.3.301-.436.774-.428 1.346.007.575.159 1.264.448 2.017zm0 5.89c-.2=
9.753-.44 1.442-.448 2.017-.008.572.127 1.045.428 1.345.293.293.736.431 1.2=
98.431.997 0 2.247-.428 3.556-1.162l.131-.074-.12-.093a21.94 21.94 0 0 1-3.=
967-3.968l-.093-.12-.074.132a11.712 11.712 0 0 0-.71 1.492z" fill=3D"curren=
tColor" stroke=3D"currentColor" stroke-width=3D".1"></path><path d=3D"M10.7=
06 11.704A1.843 1.843 0 0 1 8.155 10a1.845 1.845 0 1 1 2.551 1.704z" fill=
=3D"currentColor" stroke=3D"currentColor" stroke-width=3D".2"></path></svg>=
</div>Thought for 98 seconds<div class=3D"ds-icon _54f4262" style=3D"font-s=
ize: 10px; width: 10px; height: 10px; transform: rotate(180deg);"><svg widt=
h=3D"10" height=3D"6" viewBox=3D"0 0 10 6" fill=3D"none" xmlns=3D"http://ww=
w.w3.org/2000/svg"><path d=3D"M5.786 4.167L2.765 1.259c-.416-.4-.985-.482-1=
.273-.183-.287.298-.183.864.233 1.264l3.021 2.908c.416.4.986.482 1.273.184.=
287-.299.183-.865-.233-1.265z" fill=3D"currentColor"></path><path d=3D"M8.1=
97 1.206L5.288 4.208c-.4.413-.484.982-.187 1.27.298.289.864.187 1.265-.227L=
9.274 2.25c.401-.414.485-.983.187-1.271-.297-.288-.863-.187-1.264.227z" fil=
l=3D"currentColor"></path></svg></div></div><div class=3D"e1675d8b"><div cl=
ass=3D"_9ecc93a"></div>We are given a Python script named `test.py` that ev=
aluates a U-Net model for semantic segmentation on a test dataset of images=
. The script computes several metrics (F1 score, Jaccard Index) for each cl=
ass and the overall mean, and also measures the model's inference speed in =
FPS (Frames Per Second). Additionally, it saves the original images, ground=
 truth masks, and predicted masks for visual comparison.<div style=3D"heigh=
t: 6px;"></div><div style=3D"height: 6px;"></div>Let's break down the code =
step by step:<div style=3D"height: 6px;"></div><div style=3D"height: 6px;">=
</div>### 1. **Imports**<div style=3D"height: 6px;"></div>The necessary lib=
raries are imported, including:<div style=3D"height: 6px;"></div>- `os`, `t=
ime`: for environment settings and timing.<div style=3D"height: 6px;"></div=
>- `numpy`, `cv2` (OpenCV): for image processing.<div style=3D"height: 6px;=
"></div>- `torch`: PyTorch for deep learning.<div style=3D"height: 6px;"></=
div>- `tqdm`: for progress bar.<div style=3D"height: 6px;"></div>- Function=
s from `sklearn.metrics` for computing evaluation metrics.<div style=3D"hei=
ght: 6px;"></div>- Custom modules: `build_unet` (model architecture), `crea=
te_dir`, `seeding` (utilities), and `load_data` (data loading).<div style=
=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>### 2. **Helper F=
unction: `index_to_rgb_mask`**<div style=3D"height: 6px;"></div>This functi=
on converts a mask (2D array where each entry is a class index) to an RGB m=
ask using a provided colormap. Each class index is mapped to a specific RGB=
 color.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>=
### 3. **Main Function: `evaluate`**<div style=3D"height: 6px;"></div>This =
function performs the evaluation on the test set. It takes the following ar=
guments:<div style=3D"height: 6px;"></div>- `model`: the trained model.<div=
 style=3D"height: 6px;"></div>- `save_path`: directory to save results.<div=
 style=3D"height: 6px;"></div>- `test_x`: list of paths to test images.<div=
 style=3D"height: 6px;"></div>- `test_y`: list of paths to test masks.<div =
style=3D"height: 6px;"></div>- `size`: tuple (width, height) to resize imag=
es and masks.<div style=3D"height: 6px;"></div>- `colormap`: list of RGB co=
lors for each class.<div style=3D"height: 6px;"></div>- `classes`: list of =
class names.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"><=
/div>#### Steps inside `evaluate`:<div style=3D"height: 6px;"></div>- **Ini=
tialization**: Lists to track inference time and scores.<div style=3D"heigh=
t: 6px;"></div>- **Loop over test images**:<div style=3D"height: 6px;"></di=
v>  - **Image Processing**:<div style=3D"height: 6px;"></div>    - Read and=
 resize the image.<div style=3D"height: 6px;"></div>    - Transpose dimensi=
ons to (channels, height, width) and normalize.<div style=3D"height: 6px;">=
</div>    - Convert to a PyTorch tensor and move to the device (GPU/CPU).<d=
iv style=3D"height: 6px;"></div>  - **Mask Processing**:<div style=3D"heigh=
t: 6px;"></div>    - Read and resize the ground truth mask.<div style=3D"he=
ight: 6px;"></div>    - Convert the mask from RGB to a 2D array of class in=
dices (using the colormap) by creating a binary mask for each class and the=
n taking the argmax.<div style=3D"height: 6px;"></div>  - **Model Predictio=
n**:<div style=3D"height: 6px;"></div>    - Measure the time taken for infe=
rence (start time before prediction, end time after).<div style=3D"height: =
6px;"></div>    - The model predicts the mask. The output is passed through=
 softmax to get probabilities, then argmax to get class indices per pixel.<=
div style=3D"height: 6px;"></div>    - The prediction is converted to a num=
py array on the CPU.<div style=3D"height: 6px;"></div>  - **Save Results**:=
<div style=3D"height: 6px;"></div>    - Create a concatenated image showing=
 the original image, ground truth mask, and predicted mask (with white line=
s in between) and save it in the "joint" folder.<div style=3D"height: 6px;"=
></div>    - Save the predicted mask (converted to RGB using the colormap) =
in the "mask" folder.<div style=3D"height: 6px;"></div>  - **Metrics Calcul=
ation**:<div style=3D"height: 6px;"></div>    - Flatten the ground truth an=
d predicted masks to 1D arrays.<div style=3D"height: 6px;"></div>    - Comp=
ute F1 score and Jaccard (IoU) score for each class (using `sklearn` functi=
ons). Note: `labels` are set to the class indices, and `average=3DNone` ret=
urns per-class scores. `zero_division=3D0` handles division by zero.<div st=
yle=3D"height: 6px;"></div>    - Append the per-class F1 and Jaccard scores=
 for this image to the `score` list.<div style=3D"height: 6px;"></div><div =
style=3D"height: 6px;"></div>- **Aggregate Metrics**:<div style=3D"height: =
6px;"></div>  - Average the scores across all images to get the mean per-cl=
ass F1 and Jaccard.<div style=3D"height: 6px;"></div>  - Write the per-clas=
s scores to a CSV file and also print them in a table.<div style=3D"height:=
 6px;"></div>  - Compute the overall mean of the per-class scores (for both=
 F1 and Jaccard) and write/print it.<div style=3D"height: 6px;"></div><div =
style=3D"height: 6px;"></div>- **Inference Speed**:<div style=3D"height: 6p=
x;"></div>  - Calculate the mean time taken per image and then the mean FPS=
 (1 / mean time).<div style=3D"height: 6px;"></div><div style=3D"height: 6p=
x;"></div>### 4. **Main Block**<div style=3D"height: 6px;"></div>- **Seedin=
g**: Sets the random seed for reproducibility.<div style=3D"height: 6px;"><=
/div>- **Hyperparameters**:<div style=3D"height: 6px;"></div>  - Image dime=
nsions: 256x256.<div style=3D"height: 6px;"></div>  - Dataset path: path to=
 the dataset.<div style=3D"height: 6px;"></div>  - Colormap: defines the RG=
B colors for each class (background, Weed-1, Weed-2).<div style=3D"height: =
6px;"></div>  - Number of classes: 3.<div style=3D"height: 6px;"></div>  - =
Class names.<div style=3D"height: 6px;"></div>- **Model Loading**:<div styl=
e=3D"height: 6px;"></div>  - Set device (GPU if available).<div style=3D"he=
ight: 6px;"></div>  - Build the U-Net model and move to the device.<div sty=
le=3D"height: 6px;"></div>  - Load the model weights from a checkpoint and =
set to evaluation mode.<div style=3D"height: 6px;"></div>- **Data Loading**=
:<div style=3D"height: 6px;"></div>  - Load the dataset using `load_data` (=
returns train, validation, and test splits). Only the test split is used.<d=
iv style=3D"height: 6px;"></div>- **Create Directories**:<div style=3D"heig=
ht: 6px;"></div>  - Create directories to save the predicted masks and the =
joint images.<div style=3D"height: 6px;"></div>- **Evaluation**:<div style=
=3D"height: 6px;"></div>  - Call the `evaluate` function.<div style=3D"heig=
ht: 6px;"></div><div style=3D"height: 6px;"></div>### Key Points:<div style=
=3D"height: 6px;"></div>- The dataset structure is assumed to be in `datase=
t_path` and the `load_data` function (from `train.py`) is used to load the =
paths for images and masks.<div style=3D"height: 6px;"></div>- The ground t=
ruth masks are stored as RGB images. The code converts them to class indice=
s by comparing each pixel to the colormap.<div style=3D"height: 6px;"></div=
>- The model outputs a tensor of shape (batch_size, num_classes, height, wi=
dth). After softmax and argmax, we get a 2D mask of class indices.<div styl=
e=3D"height: 6px;"></div>- The evaluation metrics are computed per class an=
d then averaged across the test set.<div style=3D"height: 6px;"></div>- The=
 script saves visual results for inspection and a CSV file with the scores.=
<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>### Pot=
ential Issues:<div style=3D"height: 6px;"></div>- **Mask Conversion**: The =
method used to convert the ground truth mask to class indices (by stacking =
binary masks and taking argmax) might be inefficient for many classes. Also=
, note that if a pixel matches multiple classes (which shouldn't happen) th=
e last class in the colormap list would take precedence. However, in practi=
ce, the masks should have exactly one class per pixel.<div style=3D"height:=
 6px;"></div>- **Mean Calculation**: The overall mean is computed as the me=
an of the per-class scores (excluding the background? Actually, the code us=
es `score[:,1:]` to exclude the background class? But note: the background =
is the first class). However, looking at the code:<div style=3D"height: 6px=
;"></div><div style=3D"height: 6px;"></div>  ```python<div style=3D"height:=
 6px;"></div>  class_mean =3D np.mean(score[:,1:], axis=3D-1)<div style=3D"=
height: 6px;"></div>  ```<div style=3D"height: 6px;"></div><div style=3D"he=
ight: 6px;"></div>  This line takes the mean over the last axis (axis=3D-1)=
 of the slice `score[:,1:]`, which is the per-class scores from index 1 to =
the end (i.e., excluding the background). Then it prints the mean of F1 and=
 Jaccard for the non-background classes.<div style=3D"height: 6px;"></div><=
div style=3D"height: 6px;"></div>  But note: the `score` array has shape (2=
, num_classes) because we have two metrics (F1 and Jaccard) and for each cl=
ass. The line `score =3D np.array(score)` in the loop results in an array o=
f shape (n_images, 2, num_classes). Then we take the mean over images: `sco=
re =3D np.mean(score, axis=3D0)`, so now shape (2, num_classes). Then:<div =
style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>  ```python<=
div style=3D"height: 6px;"></div>  class_mean =3D np.mean(score[:,1:], axis=
=3D-1)<div style=3D"height: 6px;"></div>  ```<div style=3D"height: 6px;"></=
div><div style=3D"height: 6px;"></div>  This takes the slice of all rows (b=
oth F1 and Jaccard) and from class index 1 onwards (so excluding background=
). Then we average over the classes (axis=3D-1, which is the columns). So `=
class_mean` will have two values: one for F1 (averaged over non-background =
classes) and one for Jaccard (averaged over non-background classes). Then w=
e print:<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div=
>  ```python<div style=3D"height: 6px;"></div>  f1 =3D class_mean[0]<div st=
yle=3D"height: 6px;"></div>  jac =3D class_mean[1]<div style=3D"height: 6px=
;"></div>  ```<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"=
></div>  This is the mean F1 over the non-background classes and the mean J=
accard over the non-background classes.<div style=3D"height: 6px;"></div><d=
iv style=3D"height: 6px;"></div>- **Background Exclusion**: The overall mea=
n excludes the background. This might be intentional because we care more a=
bout the weed classes.<div style=3D"height: 6px;"></div><div style=3D"heigh=
t: 6px;"></div>### Note on FPS Calculation:<div style=3D"height: 6px;"></di=
v>The FPS is calculated as the average of (1 / time_per_image) over the tes=
t set. Alternatively, we could compute the total time for all images and th=
en FPS =3D (number of images) / (total time). The current method (average o=
f per-image FPS) is also valid and gives the same result as the alternative=
 when the number of images is large.<div style=3D"height: 6px;"></div><div =
style=3D"height: 6px;"></div>### Summary:<div style=3D"height: 6px;"></div>=
This script is designed to evaluate a semantic segmentation model (U-Net) o=
n a test set of weed images. It computes per-class and mean F1 and Jaccard =
scores (excluding background for the overall mean) and the inference speed =
in FPS. It also saves visual results for qualitative assessment.</div></div=
><div class=3D"ds-markdown ds-markdown--block" style=3D"--ds-md-zoom: 1.143=
;"><p class=3D"ds-markdown-paragraph">The provided Python script is for eva=
luating a semantic segmentation model (U-Net) on a weed detection dataset. =
Here's a breakdown of its functionality:</p><h3>Key Components:</h3><ol sta=
rt=3D"1"><li><p class=3D"ds-markdown-paragraph"><strong>Imports &amp; Setup=
</strong></p><ul><li><p class=3D"ds-markdown-paragraph">Sets TensorFlow log=
ging level to suppress unnecessary logs</p></li><li><p class=3D"ds-markdown=
-paragraph">Imports libraries: OpenCV (image processing), PyTorch (deep lea=
rning), scikit-learn (metrics)</p></li><li><p class=3D"ds-markdown-paragrap=
h">Custom modules: U-Net model, utility functions, and data loader</p></li>=
</ul></li><li><p class=3D"ds-markdown-paragraph"><strong>Helper Function</s=
trong></p><ul><li><p class=3D"ds-markdown-paragraph"><code>index_to_rgb_mas=
k</code>: Converts class index masks to RGB using a colormap</p></li></ul><=
/li><li><p class=3D"ds-markdown-paragraph"><strong>Core Evaluation Function=
 (<code>evaluate</code>)</strong></p><ul><li><p class=3D"ds-markdown-paragr=
aph">Processes test images and masks:</p><ul><li><p class=3D"ds-markdown-pa=
ragraph">Reads/resizes images, normalizes, converts to PyTorch tensor</p></=
li><li><p class=3D"ds-markdown-paragraph">Converts ground truth masks to cl=
ass indices using colormap</p></li></ul></li><li><p class=3D"ds-markdown-pa=
ragraph">Performs inference:</p><ul><li><p class=3D"ds-markdown-paragraph">=
Measures inference time/FPS</p></li><li><p class=3D"ds-markdown-paragraph">=
Generates predictions using the trained model</p></li></ul></li><li><p clas=
s=3D"ds-markdown-paragraph">Saves visual results:</p><ul><li><p class=3D"ds=
-markdown-paragraph">Side-by-side comparisons (input + ground truth + predi=
ction)</p></li><li><p class=3D"ds-markdown-paragraph">Individual prediction=
 masks</p></li></ul></li><li><p class=3D"ds-markdown-paragraph">Calculates =
metrics:</p><ul><li><p class=3D"ds-markdown-paragraph">Per-class F1 score a=
nd Jaccard Index (IoU)</p></li><li><p class=3D"ds-markdown-paragraph">Overa=
ll mean metrics (excluding background)</p></li><li><p class=3D"ds-markdown-=
paragraph">Saves results to CSV file</p></li></ul></li></ul></li><li><p cla=
ss=3D"ds-markdown-paragraph"><strong>Main Execution</strong></p><ul><li><p =
class=3D"ds-markdown-paragraph">Initialization:</p><ul><li><p class=3D"ds-m=
arkdown-paragraph">Sets random seed for reproducibility</p></li><li><p clas=
s=3D"ds-markdown-paragraph">Defines hyperparameters (image size, dataset pa=
th, classes)</p></li><li><p class=3D"ds-markdown-paragraph">Specifies color=
map for 3 classes (background + 2 weed types)</p></li></ul></li><li><p clas=
s=3D"ds-markdown-paragraph">Model Loading:</p><ul><li><p class=3D"ds-markdo=
wn-paragraph">Builds U-Net model</p></li><li><p class=3D"ds-markdown-paragr=
aph">Loads trained weights from checkpoint</p></li></ul></li><li><p class=
=3D"ds-markdown-paragraph">Data Preparation:</p><ul><li><p class=3D"ds-mark=
down-paragraph">Loads test dataset paths</p></li><li><p class=3D"ds-markdow=
n-paragraph">Creates output directories</p></li></ul></li><li><p class=3D"d=
s-markdown-paragraph">Runs evaluation</p></li></ul></li></ol><h3>Workflow:<=
/h3><ol start=3D"1"><li><p class=3D"ds-markdown-paragraph"><strong>Data Flo=
w</strong>:</p><ul><li><p class=3D"ds-markdown-paragraph">Input: Test image=
s (RGB) and masks (RGB)</p></li><li><p class=3D"ds-markdown-paragraph">Prep=
rocessing: Resizing =E2=86=92 Normalization =E2=86=92 Tensor conversion</p>=
</li><li><p class=3D"ds-markdown-paragraph">Prediction: Model inference =E2=
=86=92 Softmax =E2=86=92 Argmax</p></li><li><p class=3D"ds-markdown-paragra=
ph">Postprocessing: Index-to-RGB conversion for visualization</p></li></ul>=
</li><li><p class=3D"ds-markdown-paragraph"><strong>Evaluation Metrics</str=
ong>:</p><ul><li><p class=3D"ds-markdown-paragraph"><strong>F1 Score</stron=
g>: Balance between precision and recall</p></li><li><p class=3D"ds-markdow=
n-paragraph"><strong>Jaccard Index</strong>: Intersection-over-Union (IoU)<=
/p></li><li><p class=3D"ds-markdown-paragraph">Calculated per-class and ave=
raged (non-background classes)</p></li></ul></li><li><p class=3D"ds-markdow=
n-paragraph"><strong>Outputs</strong>:</p><ul><li><p class=3D"ds-markdown-p=
aragraph">Visual comparison images (<code>results/joint/</code>)</p></li><l=
i><p class=3D"ds-markdown-paragraph">Predicted masks (<code>results/mask/</=
code>)</p></li><li><p class=3D"ds-markdown-paragraph">Metrics file (<code>f=
iles/score.csv</code>)</p></li><li><p class=3D"ds-markdown-paragraph">Conso=
le output of metrics and FPS</p></li></ul></li></ol><h3>Key Configurations:=
</h3><ul><li><p class=3D"ds-markdown-paragraph"><strong>Image Size</strong>=
: 256x256 pixels</p></li><li><p class=3D"ds-markdown-paragraph"><strong>Cla=
sses</strong>:</p><ul><li><p class=3D"ds-markdown-paragraph">Background: <c=
ode>[0, 0, 0]</code> (black)</p></li><li><p class=3D"ds-markdown-paragraph"=
>Weed-1: <code>[0, 0, 128]</code> (dark blue)</p></li><li><p class=3D"ds-ma=
rkdown-paragraph">Weed-2: <code>[0, 128, 0]</code> (green)</p></li></ul></l=
i><li><p class=3D"ds-markdown-paragraph"><strong>Device</strong>: Automatic=
ally uses GPU if available</p></li></ul><h3>Execution:</h3><p class=3D"ds-m=
arkdown-paragraph">Run the script directly to:</p><ol start=3D"1"><li><p cl=
ass=3D"ds-markdown-paragraph">Load trained model</p></li><li><p class=3D"ds=
-markdown-paragraph">Evaluate on test dataset</p></li><li><p class=3D"ds-ma=
rkdown-paragraph">Generate visual results</p></li><li><p class=3D"ds-markdo=
wn-paragraph">Output performance metrics</p></li></ol><h3>Potential Improve=
ments:</h3><ol start=3D"1"><li><p class=3D"ds-markdown-paragraph">Add more =
metrics (e.g., Dice coefficient, mIoU)</p></li><li><p class=3D"ds-markdown-=
paragraph">Include confusion matrix</p></li><li><p class=3D"ds-markdown-par=
agraph">Implement batch processing for faster inference</p></li><li><p clas=
s=3D"ds-markdown-paragraph">Add command-line arguments for paths/hyperparam=
eters</p></li></ol><p class=3D"ds-markdown-paragraph">This script provides =
a comprehensive evaluation pipeline for semantic segmentation models, parti=
cularly useful for agricultural applications like weed detection.</p></div>=
<div class=3D"ds-flex" style=3D"margin-top: 12px; height: 20px; margin-bott=
om: 20px; align-items: center; gap: 10px;"><div class=3D"ds-flex _965abe9" =
style=3D"align-items: center; gap: 16px;"><div class=3D"ds-icon-button" tab=
index=3D"0" style=3D"--ds-icon-button-text-color: #909090; --ds-icon-button=
-size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 20px; width: 20px;=
 height: 20px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M3.65169 12.9243C=
3.68173 13.1045 3.74181 13.2748 3.80189 13.445C3.87198 13.6052 3.96211 13.7=
654 4.06225 13.9156C4.16238 14.0658 4.27253 14.206 4.4027 14.3362C4.52286 1=
4.4663 4.66306 14.5765 4.81326 14.6766C4.96346 14.7768 5.11366 14.8569 5.28=
389 14.927C5.44411 14.9971 5.61434 15.0571 5.79459 15.0872C5.97483 15.1272 =
6.14506 15.1373 6.3253 15.1373V16.9196C6.30739 16.9196 6.28949 16.9195 6.27=
159 16.9193C5.9991 16.9158 5.72659 16.8859 5.4541 16.8295C5.16371 16.7694 4=
.88334 16.6893 4.61298 16.5692C4.3326 16.459 4.08226 16.3188 3.83193 16.158=
6C3.59161 15.9884 3.3613 15.7981 3.15102 15.5878C2.94074 15.3776 2.7605 15.=
1473 2.59027 14.9069C2.43006 14.6566 2.28986 14.3962 2.17972 14.1259C2.0695=
7 13.8455 1.97944 13.5651 1.91936 13.2747C1.86929 12.9843 1.83926 12.684 1.=
83926 12.3936V6.26532C1.83926 5.96492 1.86929 5.67456 1.91936 5.38417C1.979=
44 5.09378 2.06957 4.80338 2.17972 4.53302C2.28986 4.26265 2.43006 4.0023 2=
.59027 3.75197C2.7605 3.50163 2.94074 3.27132 3.15102 3.06104C3.3613 2.8507=
6 3.59161 2.67052 3.83193 2.50029C4.08226 2.33006 4.3326 2.19987 4.61298 2.=
07971C4.88334 1.96956 5.16371 1.87943 5.4541 1.81935C5.74449 1.75927 6.0349=
1 1.73926 6.3253 1.73926H12.3934C12.6838 1.73926 12.9842 1.75927 13.2746 1.=
81935C13.555 1.87943 13.8354 1.96956 14.1158 2.07971C14.3861 2.19987 14.646=
5 2.33006 14.8868 2.50029C15.1371 2.67052 15.3574 2.85076 15.5677 3.06104C1=
5.778 3.27132 15.9582 3.50163 16.1284 3.75197C16.2887 4.0023 16.4288 4.2626=
5 16.539 4.53302C16.6592 4.80338 16.7393 5.09378 16.7994 5.38417C16.8558 5.=
65722 16.8858 5.93024 16.8892 6.21161C16.8894 6.22948 16.8895 6.24739 16.88=
95 6.26532H15.1271C15.1271 6.08508 15.1071 5.90486 15.067 5.72462C15.037 5.=
55439 14.9869 5.38415 14.9168 5.21392C14.8467 5.04369 14.7566 4.88347 14.66=
65 4.73327C14.5664 4.58307 14.4462 4.45289 14.326 4.32271C14.1959 4.19254 1=
4.0557 4.08239 13.9055 3.98226C13.7553 3.88212 13.6051 3.79202 13.4348 3.72=
193C13.2746 3.65184 13.1044 3.60174 12.9242 3.5717C12.7539 3.53165 12.5737 =
3.51163 12.3934 3.51163H6.3253C6.14506 3.51163 5.97483 3.53165 5.79459 3.57=
17C5.61434 3.60174 5.44411 3.65184 5.28389 3.72193C5.11366 3.79202 4.96346 =
3.88212 4.81326 3.98226C4.66306 4.08239 4.52286 4.19254 4.4027 4.32271C4.27=
253 4.45289 4.16238 4.58307 4.06225 4.73327C3.96211 4.88347 3.87198 5.04369=
 3.80189 5.21392C3.74181 5.38415 3.68173 5.55439 3.65169 5.72462C3.61164 5.=
90486 3.60164 6.08508 3.60164 6.26532V12.3936C3.60164 12.5638 3.61164 12.74=
4 3.65169 12.9243Z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd=
" clip-rule=3D"evenodd" d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.426=
8 8.8987 21.2566C8.64836 21.0964 8.42804 20.9061 8.21776 20.6959C8.00748 20=
.4856 7.81723 20.2553 7.65701 20.015C7.4968 19.7646 7.3566 19.5043 7.24646 =
19.2239C7.12629 18.9535 7.04621 18.6731 6.98613 18.3727C6.92605 18.0823 6.8=
9601 17.792 6.89601 17.4915V11.3733C6.89601 11.0729 6.92605 10.7825 6.98613=
 10.4922C7.04621 10.1918 7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 7.4=
968 9.10028 7.65701 8.85996C7.81723 8.60962 8.00748 8.37931 8.21776 8.16903=
C8.42804 7.95875 8.64836 7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 7.2=
9785 9.66972 7.1877C9.94009 7.07755 10.2205 6.98745 10.5108 6.92737C10.8012=
 6.86729 11.0916 6.83725 11.392 6.83725H17.4602C17.7506 6.83725 18.041 6.86=
729 18.3313 6.92737C18.6217 6.98745 18.9021 7.07755 19.1725 7.1877C19.4529 =
7.29785 19.7032 7.43805 19.9535 7.60828C20.1938 7.76849 20.4242 7.95875 20.=
6345 8.16903C20.8447 8.37931 21.025 8.60962 21.1952 8.85996C21.3554 9.10028=
 21.4956 9.36063 21.6058 9.64101C21.7159 9.91137 21.806 10.1918 21.8661 10.=
4922C21.9162 10.7825 21.9462 11.0729 21.9462 11.3733V17.4915C21.9462 17.792=
 21.9162 18.0823 21.8661 18.3727C21.806 18.6731 21.7159 18.9535 21.6058 19.=
2239C21.4956 19.5043 21.3554 19.7646 21.1952 20.015C21.025 20.2553 20.8447 =
20.4856 20.6345 20.6959C20.4242 20.9061 20.1938 21.0964 19.9535 21.2566C19.=
7032 21.4268 19.4529 21.567 19.1725 21.6772C18.9021 21.7973 18.6217 21.8774=
 18.3313 21.9375C18.041 21.9976 17.7506 22.0276 17.4602 22.0276H11.392C11.0=
916 22.0276 10.8012 21.9976 10.5108 21.9375C10.2205 21.8774 9.94009 21.7973=
 9.66972 21.6772ZM10.8613 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 8.6=
1965H17.4602C17.6404 8.61965 17.8107 8.63966 17.9909 8.6697C18.1611 8.70975=
 18.3314 8.75983 18.5016 8.82992C18.6618 8.90001 18.822 8.98012 18.9722 9.0=
8026C19.1224 9.18039 19.2626 9.30055 19.3828 9.42071C19.513 9.55088 19.6231=
 9.69109 19.7232 9.84129C19.8234 9.99149 19.9035 10.1517 19.9736 10.3219C20=
.0437 10.4821 20.0937 10.6624 20.1338 10.8326C20.1638 11.0129 20.1838 11.19=
31 20.1838 11.3733V17.4915C20.1838 17.6718 20.1638 17.852 20.1338 18.0323C2=
0.0937 18.2125 20.0437 18.3828 19.9736 18.543C19.9035 18.7132 19.8234 18.87=
34 19.7232 19.0236C19.6231 19.1738 19.513 19.314 19.3828 19.4342C19.2626 19=
.5643 19.1224 19.6845 18.9722 19.7846C18.822 19.8848 18.6618 19.9649 18.501=
6 20.035C18.3314 20.1051 18.1611 20.1551 17.9909 20.1952C17.8107 20.2252 17=
.6404 20.2452 17.4602 20.2452H11.392C11.2118 20.2452 11.0316 20.2252 10.861=
3 20.1952C10.6811 20.1551 10.5108 20.1051 10.3506 20.035C10.1804 19.9649 10=
.0202 19.8848 9.87 19.7846C9.72982 19.6845 9.58962 19.5643 9.45945 19.4342C=
9.33929 19.314 9.21913 19.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.713=
2 8.86866 18.543C8.79857 18.3828 8.74847 18.2125 8.71843 18.0323C8.67838 17=
.852 8.65836 17.6718 8.65836 17.4915V11.3733C8.65836 11.1931 8.67838 11.012=
9 8.71843 10.8326C8.74847 10.6624 8.79857 10.4821 8.86866 10.3219C8.93875 1=
0.1517 9.01886 9.99149 9.119 9.84129C9.21913 9.69109 9.33929 9.55088 9.4594=
5 9.42071C9.58962 9.30055 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 10.1=
804 8.90001 10.3506 8.82992C10.5108 8.75983 10.6811 8.70975 10.8613 8.6697Z=
" fill=3D"currentColor"></path></svg></div></div><div class=3D"ds-icon-butt=
on" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #909090; --ds-icon=
-button-size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 20px; width=
: 20px; height: 20px; opacity: 1;"><svg viewBox=3D"0 0 20 20" fill=3D"none"=
 xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999=
/xlink"><defs><clipPath id=3D"clip1258_20811"><rect id=3D"=E9=87=8D=E6=96=
=B0=E7=94=9F=E6=88=90" width=3D"20.000000" height=3D"20.000000" fill=3D"whi=
te" fill-opacity=3D"0"></rect></clipPath></defs><rect id=3D"=E9=87=8D=E6=96=
=B0=E7=94=9F=E6=88=90" width=3D"20.000000" height=3D"20.000000" fill=3D"#FF=
FFFF" fill-opacity=3D"0"></rect><g clip-path=3D"url(#clip1258_20811)"><path=
 id=3D"path" d=3D"M17.01 7.63L13.98 7.62C13.88 7.62 13.79 7.6 13.7 7.56C13.=
62 7.52 13.54 7.47 13.47 7.4C13.4 7.33 13.35 7.25 13.32 7.16C13.28 7.07 13.=
26 6.98 13.26 6.88C13.26 6.79 13.28 6.69 13.32 6.6C13.35 6.51 13.4 6.43 13.=
47 6.36C13.54 6.3 13.62 6.24 13.7 6.21C13.79 6.17 13.88 6.15 13.98 6.15L15.=
57 6.16C15.67 6.16 15.76 6.14 15.85 6.1C15.94 6.06 16.01 6.01 16.08 5.94C16=
.15 5.87 16.2 5.79 16.23 5.7C16.27 5.61 16.29 5.52 16.29 5.42L16.3 3.89C16.=
3 3.79 16.32 3.7 16.36 3.61C16.39 3.52 16.44 3.44 16.51 3.37C16.58 3.3 16.6=
6 3.25 16.74 3.21C16.83 3.17 16.92 3.16 17.02 3.16C17.11 3.16 17.2 3.17 17.=
29 3.21C17.38 3.25 17.46 3.3 17.52 3.37C17.59 3.44 17.64 3.52 17.68 3.61C17=
.71 3.7 17.73 3.79 17.73 3.89L17.72 6.9C17.72 7 17.71 7.09 17.67 7.18C17.63=
 7.27 17.58 7.34 17.52 7.41C17.45 7.48 17.37 7.53 17.29 7.57C17.2 7.61 17.1=
1 7.63 17.01 7.63Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-ru=
le=3D"nonzero"></path><path id=3D"path" d=3D"M2.31 16.29L2.32 13.3C2.32 13.=
21 2.34 13.11 2.37 13.02C2.41 12.93 2.46 12.85 2.53 12.78C2.6 12.71 2.67 12=
.66 2.76 12.62C2.85 12.58 2.94 12.56 3.03 12.56L6.07 12.57C6.16 12.57 6.25 =
12.59 6.34 12.63C6.43 12.67 6.51 12.72 6.57 12.79C6.64 12.86 6.69 12.94 6.7=
3 13.03C6.76 13.12 6.78 13.22 6.78 13.32C6.78 13.41 6.76 13.51 6.73 13.6C6.=
69 13.69 6.64 13.77 6.57 13.84C6.51 13.91 6.43 13.96 6.34 14C6.25 14.04 6.1=
6 14.06 6.07 14.06L4.47 14.05C4.38 14.05 4.29 14.07 4.2 14.11C4.11 14.15 4.=
03 14.2 3.97 14.27C3.9 14.34 3.85 14.42 3.81 14.51C3.78 14.6 3.76 14.7 3.76=
 14.8L3.75 16.29C3.75 16.39 3.73 16.48 3.69 16.58C3.65 16.67 3.6 16.75 3.54=
 16.82C3.47 16.89 3.39 16.94 3.3 16.98C3.22 17.01 3.13 17.03 3.03 17.03C2.9=
4 17.03 2.85 17.02 2.76 16.98C2.67 16.94 2.59 16.89 2.52 16.82C2.46 16.75 2=
.4 16.67 2.37 16.58C2.33 16.49 2.31 16.39 2.31 16.29Z" fill=3D"currentColor=
" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"path" =
d=3D"M9.88 18.01C9.51 18.01 9.15 17.99 8.79 17.94C8.42 17.89 8.07 17.82 7.7=
1 17.73C7.36 17.63 7.02 17.51 6.68 17.37C6.34 17.23 6.02 17.07 5.7 16.89C5.=
39 16.7 5.09 16.5 4.8 16.28C4.52 16.05 4.25 15.81 3.99 15.55C3.74 15.29 3.5=
 15.02 3.29 14.73C3.07 14.44 2.88 14.13 2.7 13.82L4.15 13.05C4.32 13.35 4.5=
1 13.64 4.72 13.91C4.93 14.18 5.17 14.43 5.42 14.66C5.67 14.9 5.94 15.11 6.=
23 15.3C6.52 15.49 6.83 15.66 7.14 15.81C7.46 15.95 7.78 16.07 8.12 16.16C8=
.45 16.25 8.8 16.32 9.14 16.36C9.49 16.39 9.83 16.4 10.18 16.39C10.53 16.37=
 10.87 16.33 11.22 16.26C11.56 16.19 11.89 16.09 12.21 15.97C12.54 15.84 12=
.85 15.7 13.15 15.53C13.45 15.35 13.74 15.16 14.01 14.94C14.28 14.72 14.53 =
14.49 14.76 14.23C14.99 13.97 15.2 13.7 15.38 13.41C15.57 13.12 15.73 12.82=
 15.87 12.5C16 12.19 16.11 11.87 16.2 11.53C16.28 11.2 16.34 10.87 16.36 10=
.52C16.37 10.42 16.4 10.33 16.44 10.24C16.48 10.15 16.54 10.07 16.61 10C16.=
69 9.93 16.77 9.87 16.86 9.84C16.96 9.8 17.05 9.77 17.16 9.77C17.27 9.77 17=
.38 9.79 17.49 9.83C17.6 9.87 17.7 9.94 17.78 10.02C17.86 10.1 17.92 10.2 1=
7.96 10.3C18 10.41 18.01 10.52 18 10.64C17.98 10.89 17.95 11.13 17.91 11.38=
C17.86 11.62 17.81 11.87 17.74 12.11C17.68 12.35 17.6 12.58 17.51 12.82C17.=
42 13.05 17.32 13.28 17.21 13.5C17.1 13.73 16.98 13.95 16.85 14.16C16.71 14=
.37 16.57 14.58 16.42 14.78C16.27 14.98 16.11 15.17 15.94 15.36C15.77 15.54=
 15.59 15.72 15.41 15.89C15.22 16.06 15.03 16.22 14.83 16.37C14.63 16.52 14=
.42 16.66 14.2 16.79C13.99 16.93 13.77 17.05 13.54 17.16C13.31 17.27 13.08 =
17.37 12.85 17.46C12.61 17.55 12.37 17.63 12.13 17.7C11.88 17.77 11.64 17.8=
3 11.39 17.87C11.14 17.92 10.89 17.96 10.63 17.98C10.38 18 10.13 18.01 9.88=
 18.01Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonze=
ro"></path><path id=3D"path" d=3D"M2.85 10.27C2.73 10.28 2.62 10.26 2.51 10=
.22C2.4 10.17 2.31 10.11 2.23 10.03C2.14 9.95 2.08 9.85 2.04 9.74C2 9.63 1.=
99 9.52 2 9.41C2.03 8.98 2.1 8.56 2.2 8.15C2.3 7.73 2.43 7.33 2.6 6.94C2.76=
 6.54 2.96 6.16 3.19 5.8C3.41 5.44 3.67 5.1 3.95 4.77C4.24 4.45 4.54 4.15 4=
.88 3.88C5.21 3.6 5.56 3.35 5.93 3.13C6.3 2.91 6.69 2.73 7.09 2.57C7.5 2.41=
 7.91 2.28 8.33 2.19C8.75 2.09 9.18 2.03 9.62 2.01C10.05 1.98 10.48 1.99 10=
.91 2.03C11.35 2.07 11.77 2.14 12.19 2.25C12.61 2.36 13.02 2.5 13.42 2.67C1=
3.81 2.84 14.19 3.04 14.56 3.28C14.92 3.51 15.27 3.77 15.59 4.05C15.91 4.34=
 16.21 4.64 16.48 4.98C16.75 5.31 17 5.66 17.21 6.03L15.78 6.83C15.61 6.54 =
15.42 6.25 15.2 5.99C14.98 5.73 14.74 5.48 14.49 5.25C14.23 5.02 13.96 4.82=
 13.66 4.63C13.37 4.45 13.07 4.29 12.75 4.15C12.44 4.01 12.11 3.9 11.77 3.8=
2C11.44 3.73 11.1 3.67 10.76 3.64C10.41 3.61 10.07 3.6 9.72 3.62C9.37 3.64 =
9.03 3.69 8.69 3.77C8.36 3.84 8.03 3.94 7.71 4.07C7.38 4.2 7.08 4.35 6.78 4=
.52C6.48 4.7 6.2 4.89 5.94 5.11C5.67 5.33 5.43 5.57 5.2 5.83C4.97 6.08 4.77=
 6.36 4.59 6.65C4.41 6.94 4.25 7.24 4.12 7.55C3.98 7.87 3.88 8.19 3.8 8.52C=
3.72 8.85 3.66 9.19 3.64 9.53C3.63 9.62 3.6 9.72 3.56 9.81C3.52 9.9 3.46 9.=
98 3.39 10.05C3.32 10.12 3.23 10.17 3.14 10.21C3.05 10.25 2.95 10.27 2.85 1=
0.27Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero=
"></path></g></svg></div></div><div class=3D"ds-icon-button" tabindex=3D"0"=
 style=3D"--ds-icon-button-text-color: #909090; --ds-icon-button-size: 20px=
;"><div class=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: 20=
px;"><svg width=3D"20" height=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xm=
lns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D=
"evenodd" d=3D"M18.14 9.428l-.003.019L17.114 15a3.774 3.774 0 0 1-1.313 2.2=
7 3.673 3.673 0 0 1-2.438.894H3.895c-.57 0-1.055-.205-1.458-.614a2.033 2.03=
3 0 0 1-.604-1.48v-5.438c0-.578.201-1.071.604-1.48.402-.41.888-.614 1.458-.=
614h1.932l2.317-5.293c.24-.548.6-.948 1.083-1.2.599-.312 1.156-.278 1.672.1=
03.782.577 1.172 1.355 1.172 2.334V6.997h3.994c.638-.007 1.167.235 1.588.72=
6.421.492.584 1.06.488 1.705zm-2.076-2.6c.686-.007 1.262.256 1.714.785.453.=
529.63 1.146.527 1.84v.004l-.005.02v.003l-1.022 5.552a3.943 3.943 0 0 1-1.3=
7 2.368 3.838 3.838 0 0 1-2.545.933H3.895a2.137 2.137 0 0 1-1.576-.663 2.20=
3 2.203 0 0 1-.652-1.6v-5.437c0-.622.218-1.159.652-1.6.434-.44.962-.663 1.5=
76-.663H5.72l2.273-5.192c.254-.58.64-1.01 1.159-1.282.32-.167.64-.246.953-.=
227.315.02.613.137.893.344.824.608 1.24 1.437 1.24 2.47v2.345h3.827zM9.741 =
3.063c-.247.128-.437.344-.57.647L6.708 9.34v7.683h6.655a2.59 2.59 0 0 0 1.7=
2-.63c.498-.42.807-.955.926-1.601l1.02-5.544a.936.936 0 0 0-.225-.773.917.9=
17 0 0 0-.739-.335h-4.557a.567.567 0 0 1-.562-.571V4.483c0-.591-.236-1.061-=
.708-1.41-.143-.105-.309-.109-.497-.01zm7.124 6.157a.766.766 0 0 0-.186-.63=
6.753.753 0 0 0-.612-.276h-4.559a.734.734 0 0 1-.728-.74V4.483c0-.537-.21-.=
956-.64-1.273a.233.233 0 0 0-.137-.05.387.387 0 0 0-.185.053c-.208.108-.374=
.291-.495.566m0 0L6.874 9.375v7.479h6.489c.609 0 1.145-.197 1.614-.592.468-=
.396.757-.894.869-1.502l1.02-5.54M3.35 16.623c.152.155.33.23.545.23h1.522V9=
.85H3.895a.732.732 0 0 0-.545.23.755.755 0 0 0-.226.553v5.437c0 .218.074.4.=
226.553zm.545-6.941a.897.897 0 0 0-.663.278.924.924 0 0 0-.274.673v5.437c0 =
.263.091.487.274.673.183.186.404.28.663.28h1.688V9.681H3.895z" fill=3D"curr=
entColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M18=
.137 9.447l.004-.02a2.044 2.044 0 0 0-.488-1.704c-.421-.491-.95-.733-1.588-=
.726h-2.282l1.584 1.142h.698a.917.917 0 0 1 .739.335.936.936 0 0 1 .225.773=
l-1.02 5.543a2.663 2.663 0 0 1-.926 1.602 2.59 2.59 0 0 1-1.72.63H6.708V9.3=
4L9.171 3.71c.133-.303.323-.519.57-.647.188-.099.354-.095.497.01.472.349.70=
8.819.708 1.41v.467l1.125.811V4.483c0-.98-.39-1.757-1.171-2.334-.517-.38-1.=
074-.415-1.673-.103-.482.252-.843.652-1.083 1.2L5.827 8.54H3.895c-.57 0-1.0=
56.205-1.458.614a2.033 2.033 0 0 0-.604 1.48v5.437c0 .578.201 1.072.604 1.4=
8.403.41.889.615 1.458.615h9.468c.918 0 1.731-.299 2.438-.895A3.774 3.774 0=
 0 0 17.114 15l1.023-5.553zm-14.242.235a.897.897 0 0 0-.663.278.924.924 0 0=
 0-.274.673v5.437c0 .263.091.487.274.673.183.186.404.28.663.28h1.688V9.681H=
3.895z" fill=3D"currentColor"></path><path d=3D"M10.946 7.568c0 .316.252.57=
1.563.571h3.858l-1.584-1.142h-1.712V5.76l-1.125-.811v2.618z" fill=3D"curren=
tColor"></path></svg></div></div><div class=3D"ds-icon-button" tabindex=3D"=
0" style=3D"--ds-icon-button-text-color: #909090; --ds-icon-button-size: 20=
px;"><div class=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: =
20px;"><svg width=3D"20" height=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" =
xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M18.304 10.543v.004a2.214 2.214 0 0 1-.526 1.84c-.452.528=
-1.028.792-1.714.784h-3.827v2.345c0 1.034-.416 1.863-1.24 2.471-.28.207-.57=
8.324-.893.343-.314.02-.632-.06-.953-.226-.519-.271-.905-.702-1.159-1.282l-=
2.273-5.193H3.895a2.136 2.136 0 0 1-1.576-.663 2.203 2.203 0 0 1-.652-1.6V3=
.93c0-.623.218-1.16.652-1.6.434-.441.963-.663 1.576-.663h9.468c.957 0 1.807=
.311 2.544.933a3.943 3.943 0 0 1 1.37 2.368L18.3 10.52v.002l.004.02zm-1.19-=
5.544a3.774 3.774 0 0 0-1.313-2.27 3.673 3.673 0 0 0-2.438-.894H3.895c-.57 =
0-1.055.205-1.458.614a2.033 2.033 0 0 0-.604 1.48v5.437c0 .578.201 1.072.60=
4 1.48.402.41.888.615 1.458.615h1.932l2.317 5.292c.24.549.6.949 1.083 1.2.5=
99.313 1.156.279 1.672-.102.782-.577 1.172-1.355 1.172-2.335v-2.513h3.994c.=
638.007 1.167-.235 1.588-.727.421-.491.584-1.06.488-1.704l-.004-.02L17.114 =
5zM9.819 16.787c.076.04.137.053.185.052a.233.233 0 0 0 .137-.05c.43-.316.64=
-.735.64-1.273v-3.084c0-.41.327-.74.729-.74h4.558a.752.752 0 0 0 .612-.277.=
766.766 0 0 0 .186-.635l-1.02-5.54a2.495 2.495 0 0 0-.869-1.502 2.426 2.426=
 0 0 0-1.613-.592H6.874v7.48l2.449 5.595m-2.615-5.56V2.978h6.655c.648 0 1.2=
21.21 1.72.63.498.42.807.954.926 1.601l1.02 5.543a.936.936 0 0 1-.225.774.9=
17.917 0 0 1-.739.335h-4.557a.567.567 0 0 0-.562.57v3.085c0 .592-.236 1.062=
-.708 1.41-.143.106-.309.11-.497.01-.247-.128-.437-.343-.57-.647l-2.463-5.6=
28zM3.35 3.376a.754.754 0 0 0-.226.554v5.436c0 .218.074.4.226.554.152.154.3=
3.23.545.23h1.522V3.146H3.895a.731.731 0 0 0-.545.23zm2.233-.398v7.34H3.895=
a.897.897 0 0 1-.663-.279.925.925 0 0 1-.274-.673V3.93c0-.263.091-.487.274-=
.673a.895.895 0 0 1 .663-.28h1.688zm4.235 13.809c-.208-.108-.375-.292-.495-=
.566l.495.566z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd" cl=
ip-rule=3D"evenodd" d=3D"M15.801 2.73a3.774 3.774 0 0 1 1.313 2.269l1.023 5=
.554.004.019a2.044 2.044 0 0 1-.488 1.704c-.421.492-.95.734-1.588.727h-3.99=
4v2.513c0 .98-.39 1.758-1.171 2.335-.517.38-1.074.415-1.673.102-.482-.251-.=
843-.651-1.083-1.2l-2.317-5.292H3.895c-.57 0-1.056-.205-1.458-.614a2.033 2.=
033 0 0 1-.604-1.48V3.93c0-.579.201-1.072.604-1.481.403-.41.889-.614 1.458-=
.614h9.468c.918 0 1.731.298 2.438.894zm-2.438.248c.648 0 1.221.21 1.72.63.4=
98.42.807.954.926 1.601l1.02 5.543a.936.936 0 0 1-.225.774.917.917 0 0 1-.7=
39.335h-4.557a.567.567 0 0 0-.562.57v3.085c0 .592-.236 1.062-.708 1.41-.143=
.106-.309.11-.497.01-.247-.128-.437-.343-.57-.647l-2.463-5.628V2.978h6.655z=
m-9.468 7.34a.897.897 0 0 1-.663-.279.925.925 0 0 1-.274-.673V3.93c0-.263.0=
91-.487.274-.673a.895.895 0 0 1 .663-.28h1.688v7.341H3.895z" fill=3D"curren=
tColor"></path></svg></div></div></div><div style=3D"flex: 1 1 0%;"></div><=
/div></div><div class=3D"_9663006"><div class=3D"fbb737a4">I have the image=
s and how to inference them and show the results.</div><div class=3D"e13328=
ad _3a26104"><div class=3D"_425ea0b"><div class=3D"ds-flex _78e0558" style=
=3D"align-items: flex-end; gap: 0px;"><div class=3D"ds-icon-button" tabinde=
x=3D"0" style=3D"--ds-icon-button-text-color: #909090; --ds-icon-button-siz=
e: 20px;"><div class=3D"ds-icon" style=3D"font-size: 20px; width: 20px; hei=
ght: 20px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M3.65169 12.9243C3.681=
73 13.1045 3.74181 13.2748 3.80189 13.445C3.87198 13.6052 3.96211 13.7654 4=
.06225 13.9156C4.16238 14.0658 4.27253 14.206 4.4027 14.3362C4.52286 14.466=
3 4.66306 14.5765 4.81326 14.6766C4.96346 14.7768 5.11366 14.8569 5.28389 1=
4.927C5.44411 14.9971 5.61434 15.0571 5.79459 15.0872C5.97483 15.1272 6.145=
06 15.1373 6.3253 15.1373V16.9196C6.30739 16.9196 6.28949 16.9195 6.27159 1=
6.9193C5.9991 16.9158 5.72659 16.8859 5.4541 16.8295C5.16371 16.7694 4.8833=
4 16.6893 4.61298 16.5692C4.3326 16.459 4.08226 16.3188 3.83193 16.1586C3.5=
9161 15.9884 3.3613 15.7981 3.15102 15.5878C2.94074 15.3776 2.7605 15.1473 =
2.59027 14.9069C2.43006 14.6566 2.28986 14.3962 2.17972 14.1259C2.06957 13.=
8455 1.97944 13.5651 1.91936 13.2747C1.86929 12.9843 1.83926 12.684 1.83926=
 12.3936V6.26532C1.83926 5.96492 1.86929 5.67456 1.91936 5.38417C1.97944 5.=
09378 2.06957 4.80338 2.17972 4.53302C2.28986 4.26265 2.43006 4.0023 2.5902=
7 3.75197C2.7605 3.50163 2.94074 3.27132 3.15102 3.06104C3.3613 2.85076 3.5=
9161 2.67052 3.83193 2.50029C4.08226 2.33006 4.3326 2.19987 4.61298 2.07971=
C4.88334 1.96956 5.16371 1.87943 5.4541 1.81935C5.74449 1.75927 6.03491 1.7=
3926 6.3253 1.73926H12.3934C12.6838 1.73926 12.9842 1.75927 13.2746 1.81935=
C13.555 1.87943 13.8354 1.96956 14.1158 2.07971C14.3861 2.19987 14.6465 2.3=
3006 14.8868 2.50029C15.1371 2.67052 15.3574 2.85076 15.5677 3.06104C15.778=
 3.27132 15.9582 3.50163 16.1284 3.75197C16.2887 4.0023 16.4288 4.26265 16.=
539 4.53302C16.6592 4.80338 16.7393 5.09378 16.7994 5.38417C16.8558 5.65722=
 16.8858 5.93024 16.8892 6.21161C16.8894 6.22948 16.8895 6.24739 16.8895 6.=
26532H15.1271C15.1271 6.08508 15.1071 5.90486 15.067 5.72462C15.037 5.55439=
 14.9869 5.38415 14.9168 5.21392C14.8467 5.04369 14.7566 4.88347 14.6665 4.=
73327C14.5664 4.58307 14.4462 4.45289 14.326 4.32271C14.1959 4.19254 14.055=
7 4.08239 13.9055 3.98226C13.7553 3.88212 13.6051 3.79202 13.4348 3.72193C1=
3.2746 3.65184 13.1044 3.60174 12.9242 3.5717C12.7539 3.53165 12.5737 3.511=
63 12.3934 3.51163H6.3253C6.14506 3.51163 5.97483 3.53165 5.79459 3.5717C5.=
61434 3.60174 5.44411 3.65184 5.28389 3.72193C5.11366 3.79202 4.96346 3.882=
12 4.81326 3.98226C4.66306 4.08239 4.52286 4.19254 4.4027 4.32271C4.27253 4=
.45289 4.16238 4.58307 4.06225 4.73327C3.96211 4.88347 3.87198 5.04369 3.80=
189 5.21392C3.74181 5.38415 3.68173 5.55439 3.65169 5.72462C3.61164 5.90486=
 3.60164 6.08508 3.60164 6.26532V12.3936C3.60164 12.5638 3.61164 12.744 3.6=
5169 12.9243Z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.4268 8.8=
987 21.2566C8.64836 21.0964 8.42804 20.9061 8.21776 20.6959C8.00748 20.4856=
 7.81723 20.2553 7.65701 20.015C7.4968 19.7646 7.3566 19.5043 7.24646 19.22=
39C7.12629 18.9535 7.04621 18.6731 6.98613 18.3727C6.92605 18.0823 6.89601 =
17.792 6.89601 17.4915V11.3733C6.89601 11.0729 6.92605 10.7825 6.98613 10.4=
922C7.04621 10.1918 7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 7.4968 9=
.10028 7.65701 8.85996C7.81723 8.60962 8.00748 8.37931 8.21776 8.16903C8.42=
804 7.95875 8.64836 7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 7.29785 =
9.66972 7.1877C9.94009 7.07755 10.2205 6.98745 10.5108 6.92737C10.8012 6.86=
729 11.0916 6.83725 11.392 6.83725H17.4602C17.7506 6.83725 18.041 6.86729 1=
8.3313 6.92737C18.6217 6.98745 18.9021 7.07755 19.1725 7.1877C19.4529 7.297=
85 19.7032 7.43805 19.9535 7.60828C20.1938 7.76849 20.4242 7.95875 20.6345 =
8.16903C20.8447 8.37931 21.025 8.60962 21.1952 8.85996C21.3554 9.10028 21.4=
956 9.36063 21.6058 9.64101C21.7159 9.91137 21.806 10.1918 21.8661 10.4922C=
21.9162 10.7825 21.9462 11.0729 21.9462 11.3733V17.4915C21.9462 17.792 21.9=
162 18.0823 21.8661 18.3727C21.806 18.6731 21.7159 18.9535 21.6058 19.2239C=
21.4956 19.5043 21.3554 19.7646 21.1952 20.015C21.025 20.2553 20.8447 20.48=
56 20.6345 20.6959C20.4242 20.9061 20.1938 21.0964 19.9535 21.2566C19.7032 =
21.4268 19.4529 21.567 19.1725 21.6772C18.9021 21.7973 18.6217 21.8774 18.3=
313 21.9375C18.041 21.9976 17.7506 22.0276 17.4602 22.0276H11.392C11.0916 2=
2.0276 10.8012 21.9976 10.5108 21.9375C10.2205 21.8774 9.94009 21.7973 9.66=
972 21.6772ZM10.8613 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 8.61965H=
17.4602C17.6404 8.61965 17.8107 8.63966 17.9909 8.6697C18.1611 8.70975 18.3=
314 8.75983 18.5016 8.82992C18.6618 8.90001 18.822 8.98012 18.9722 9.08026C=
19.1224 9.18039 19.2626 9.30055 19.3828 9.42071C19.513 9.55088 19.6231 9.69=
109 19.7232 9.84129C19.8234 9.99149 19.9035 10.1517 19.9736 10.3219C20.0437=
 10.4821 20.0937 10.6624 20.1338 10.8326C20.1638 11.0129 20.1838 11.1931 20=
.1838 11.3733V17.4915C20.1838 17.6718 20.1638 17.852 20.1338 18.0323C20.093=
7 18.2125 20.0437 18.3828 19.9736 18.543C19.9035 18.7132 19.8234 18.8734 19=
.7232 19.0236C19.6231 19.1738 19.513 19.314 19.3828 19.4342C19.2626 19.5643=
 19.1224 19.6845 18.9722 19.7846C18.822 19.8848 18.6618 19.9649 18.5016 20.=
035C18.3314 20.1051 18.1611 20.1551 17.9909 20.1952C17.8107 20.2252 17.6404=
 20.2452 17.4602 20.2452H11.392C11.2118 20.2452 11.0316 20.2252 10.8613 20.=
1952C10.6811 20.1551 10.5108 20.1051 10.3506 20.035C10.1804 19.9649 10.0202=
 19.8848 9.87 19.7846C9.72982 19.6845 9.58962 19.5643 9.45945 19.4342C9.339=
29 19.314 9.21913 19.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.7132 8.8=
6866 18.543C8.79857 18.3828 8.74847 18.2125 8.71843 18.0323C8.67838 17.852 =
8.65836 17.6718 8.65836 17.4915V11.3733C8.65836 11.1931 8.67838 11.0129 8.7=
1843 10.8326C8.74847 10.6624 8.79857 10.4821 8.86866 10.3219C8.93875 10.151=
7 9.01886 9.99149 9.119 9.84129C9.21913 9.69109 9.33929 9.55088 9.45945 9.4=
2071C9.58962 9.30055 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 10.1804 8=
.90001 10.3506 8.82992C10.5108 8.75983 10.6811 8.70975 10.8613 8.6697Z" fil=
l=3D"currentColor"></path></svg></div></div><div class=3D"ds-icon-button" t=
abindex=3D"0" style=3D"--ds-icon-button-text-color: #909090; --ds-icon-butt=
on-size: 20px; margin-left: 14px; opacity: 1;"><div class=3D"ds-icon" style=
=3D"font-size: 20px; width: 20px; height: 20px;"><svg width=3D"20" height=
=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.712 2.79a1=
.854 1.854 0 0 1 2.623 0l1.673 1.672a1.854 1.854 0 0 1 0 2.623l-9.714 9.714=
a2.91 2.91 0 0 1-2.058.853H1.945a.8.8 0 0 1-.8-.8v-2.29c0-.773.307-1.513.85=
3-2.058l9.714-9.715zm1.492 1.13c-.1-.1-.261-.1-.361 0l-1.327 1.326 2.035 2.=
035 1.327-1.326c.1-.1.1-.262 0-.362L13.204 3.92zm-.783 4.491l-2.035-2.034-7=
.258 7.257a1.31 1.31 0 0 0-.384.927v1.492h1.492c.348 0 .681-.138.927-.384l7=
.258-7.258z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-=
rule=3D"evenodd" d=3D"M17.772 17.608c.35 0 .633-.283.633-.633v-.492a.633.63=
3 0 0 0-.633-.633H9.858L8.1 17.608h9.672z" fill=3D"currentColor"></path></s=
vg></div></div></div></div></div></div><div class=3D"_4f9bf79 _43c05b5"><di=
v class=3D"_7eb2358 _58dfa60"><svg viewBox=3D"0 0 30 30" fill=3D"none" xmln=
s=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlin=
k"><path id=3D"path" d=3D"M27.501 8.46875C27.249 8.3457 27.1406 8.58008 26.=
9932 8.69922C26.9434 8.73828 26.9004 8.78906 26.8584 8.83398C26.4902 9.2285=
2 26.0605 9.48633 25.5 9.45508C24.6787 9.41016 23.9785 9.66797 23.3594 10.2=
969C23.2275 9.52148 22.79 9.05859 22.125 8.76172C21.7764 8.60742 21.4238 8.=
45312 21.1807 8.11719C21.0098 7.87891 20.9639 7.61328 20.8779 7.35156C20.82=
42 7.19336 20.7695 7.03125 20.5879 7.00391C20.3906 6.97266 20.3135 7.13867 =
20.2363 7.27734C19.9258 7.84375 19.8066 8.46875 19.8174 9.10156C19.8447 10.=
5234 20.4453 11.6562 21.6367 12.4629C21.7725 12.5547 21.8076 12.6484 21.764=
6 12.7832C21.6836 13.0605 21.5869 13.3301 21.501 13.6074C21.4473 13.7852 21=
.3662 13.8242 21.1768 13.7461C20.5225 13.4727 19.957 13.0684 19.458 12.5781=
C18.6104 11.7578 17.8438 10.8516 16.8877 10.1426C16.6631 9.97656 16.4395 9.=
82227 16.207 9.67578C15.2314 8.72656 16.335 7.94727 16.5898 7.85547C16.8574=
 7.75977 16.6826 7.42773 15.8193 7.43164C14.957 7.43555 14.167 7.72461 13.1=
611 8.10938C13.0137 8.16797 12.8594 8.21094 12.7002 8.24414C11.7871 8.07227=
 10.8389 8.0332 9.84766 8.14453C7.98242 8.35352 6.49219 9.23633 5.39648 10.=
7441C4.08105 12.5547 3.77148 14.6133 4.15039 16.7617C4.54883 19.0234 5.7021=
5 20.8984 7.47559 22.3633C9.31348 23.8809 11.4307 24.625 13.8457 24.4824C15=
.3125 24.3984 16.9463 24.2012 18.7881 22.6406C19.2529 22.8711 19.7402 22.96=
29 20.5498 23.0332C21.1729 23.0918 21.7725 23.002 22.2373 22.9062C22.9648 2=
2.752 22.9141 22.0781 22.6514 21.9531C20.5186 20.959 20.9863 21.3633 20.560=
5 21.0371C21.6445 19.752 23.2783 18.418 23.917 14.0977C23.9668 13.7539 23.9=
238 13.5391 23.917 13.2598C23.9131 13.0918 23.9512 13.0254 24.1445 13.0059C=
24.6787 12.9453 25.1973 12.7988 25.6738 12.5352C27.0557 11.7793 27.6123 10.=
5391 27.7441 9.05078C27.7637 8.82422 27.7402 8.58789 27.501 8.46875ZM15.46 =
21.8613C13.3926 20.2344 12.3906 19.6992 11.9766 19.7227C11.5898 19.7441 11.=
6592 20.1875 11.7441 20.4766C11.833 20.7617 11.9492 20.959 12.1123 21.209C1=
2.2246 21.375 12.3018 21.623 12 21.8066C11.334 22.2207 10.1768 21.668 10.12=
21 21.6406C8.77539 20.8477 7.64941 19.7988 6.85547 18.3652C6.08984 16.9844 =
5.64453 15.5039 5.57129 13.9238C5.55176 13.541 5.66406 13.4062 6.04297 13.3=
379C6.54199 13.2461 7.05762 13.2266 7.55664 13.2988C9.66602 13.6074 11.4619=
 14.5527 12.9668 16.0469C13.8262 16.9004 14.4766 17.918 15.1465 18.9121C15.=
8584 19.9688 16.625 20.9746 17.6006 21.7988C17.9443 22.0879 18.2197 22.3086=
 18.4824 22.4707C17.6895 22.5586 16.3652 22.5781 15.46 21.8613ZM16.4502 15.=
4805C16.4502 15.3105 16.5859 15.1758 16.7568 15.1758C16.7949 15.1758 16.830=
1 15.1836 16.8613 15.1953C16.9033 15.2109 16.9424 15.2344 16.9727 15.2695C1=
7.0273 15.3223 17.0586 15.4004 17.0586 15.4805C17.0586 15.6504 16.9229 15.7=
852 16.7529 15.7852C16.582 15.7852 16.4502 15.6504 16.4502 15.4805ZM19.5273=
 17.0625C19.3301 17.1426 19.1328 17.2129 18.9434 17.2207C18.6494 17.2344 18=
.3281 17.1152 18.1533 16.9688C17.8828 16.7422 17.6895 16.6152 17.6074 16.21=
68C17.5732 16.0469 17.5928 15.7852 17.623 15.6348C17.6934 15.3105 17.6152 1=
5.1035 17.3877 14.9141C17.2012 14.7598 16.9658 14.7188 16.7061 14.7188C16.6=
094 14.7188 16.5205 14.6758 16.4541 14.6406C16.3457 14.5859 16.2568 14.4512=
 16.3418 14.2852C16.3691 14.2324 16.501 14.1016 16.5322 14.0781C16.8838 13.=
877 17.29 13.9434 17.666 14.0938C18.0146 14.2363 18.2773 14.498 18.6562 14.=
8672C19.0439 15.3145 19.1133 15.4395 19.334 15.7734C19.5078 16.0371 19.667 =
16.3066 19.7754 16.6152C19.8408 16.8066 19.7559 16.9648 19.5273 17.0625Z" f=
ill-rule=3D"nonzero" fill=3D"#4D6BFE"></path></svg></div><div class=3D"_48e=
db25"><div class=3D"_58a6d71 _19db599"><div class=3D"ds-icon _7580acb" styl=
e=3D"font-size: 12px; width: 12px; height: 12px;"><svg width=3D"20" height=
=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg"><path d=3D"M2.656 17.344c-1.016-1.015-1.15-2.75-.313-4.925.325-.825.7=
3-1.617 1.205-2.365L3.582 10l-.033-.054c-.5-.799-.91-1.596-1.206-2.365-.836=
-2.175-.703-3.91.313-4.926.56-.56 1.364-.86 2.335-.86 1.425 0 3.168.636 4.9=
57 1.756l.053.034.053-.034c1.79-1.12 3.532-1.757 4.957-1.757.972 0 1.776.3 =
2.335.86 1.014 1.015 1.148 2.752.312 4.926a13.892 13.892 0 0 1-1.206 2.365l=
-.034.054.034.053c.5.8.91 1.596 1.205 2.365.837 2.175.704 3.911-.311 4.926-=
.56.56-1.364.861-2.335.861-1.425 0-3.168-.637-4.957-1.757L10 16.415l-.053.0=
33c-1.79 1.12-3.532 1.757-4.957 1.757-.972 0-1.776-.3-2.335-.86zm13.631-4.3=
99c-.187-.488-.429-.988-.71-1.492l-.075-.132-.092.12a22.075 22.075 0 0 1-3.=
968 3.968l-.12.093.132.074c1.308.734 2.559 1.162 3.556 1.162.563 0 1.006-.1=
38 1.298-.43.3-.3.436-.774.428-1.346-.008-.575-.159-1.264-.449-2.017zm-6.34=
5 1.65l.058.042.058-.042a19.881 19.881 0 0 0 4.551-4.537l.043-.058-.043-.05=
8a20.123 20.123 0 0 0-2.093-2.458 19.732 19.732 0 0 0-2.458-2.08L10 5.364l-=
.058.042A19.883 19.883 0 0 0 5.39 9.942L5.348 10l.042.059c.631.874 1.332 1.=
695 2.094 2.457a19.74 19.74 0 0 0 2.458 2.08zm6.366-10.902c-.293-.293-.736-=
.431-1.298-.431-.998 0-2.248.429-3.556 1.163l-.132.074.12.092a21.938 21.938=
 0 0 1 3.968 3.968l.092.12.074-.132c.282-.504.524-1.004.711-1.492.29-.753.4=
42-1.442.45-2.017.007-.572-.129-1.045-.429-1.345zM3.712 7.055c.202.514.44 1=
.013.712 1.493l.074.13.092-.119a21.94 21.94 0 0 1 3.968-3.968l.12-.092-.132=
-.074C7.238 3.69 5.987 3.262 4.99 3.262c-.563 0-1.006.138-1.298.43-.3.301-.=
436.774-.428 1.346.007.575.159 1.264.448 2.017zm0 5.89c-.29.753-.44 1.442-.=
448 2.017-.008.572.127 1.045.428 1.345.293.293.736.431 1.298.431.997 0 2.24=
7-.428 3.556-1.162l.131-.074-.12-.093a21.94 21.94 0 0 1-3.967-3.968l-.093-.=
12-.074.132a11.712 11.712 0 0 0-.71 1.492z" fill=3D"currentColor" stroke=3D=
"currentColor" stroke-width=3D".1"></path><path d=3D"M10.706 11.704A1.843 1=
.843 0 0 1 8.155 10a1.845 1.845 0 1 1 2.551 1.704z" fill=3D"currentColor" s=
troke=3D"currentColor" stroke-width=3D".2"></path></svg></div>Thought for 1=
79 seconds<div class=3D"ds-icon _54f4262" style=3D"font-size: 10px; width: =
10px; height: 10px; transform: rotate(180deg);"><svg width=3D"10" height=3D=
"6" viewBox=3D"0 0 10 6" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
><path d=3D"M5.786 4.167L2.765 1.259c-.416-.4-.985-.482-1.273-.183-.287.298=
-.183.864.233 1.264l3.021 2.908c.416.4.986.482 1.273.184.287-.299.183-.865-=
.233-1.265z" fill=3D"currentColor"></path><path d=3D"M8.197 1.206L5.288 4.2=
08c-.4.413-.484.982-.187 1.27.298.289.864.187 1.265-.227L9.274 2.25c.401-.4=
14.485-.983.187-1.271-.297-.288-.863-.187-1.264.227z" fill=3D"currentColor"=
></path></svg></div></div><div class=3D"e1675d8b"><div class=3D"_9ecc93a"><=
/div>We are going to write a script that uses the trained model to perform =
inference on a set of images and display the results.<div style=3D"height: =
6px;"></div> Steps:<div style=3D"height: 6px;"></div> 1. Load the model and=
 the checkpoint.<div style=3D"height: 6px;"></div> 2. Preprocess the input =
image (resize, normalize, convert to tensor, etc.).<div style=3D"height: 6p=
x;"></div> 3. Run the model to get the prediction.<div style=3D"height: 6px=
;"></div> 4. Convert the prediction (which is a tensor of class indices) to=
 an RGB mask using the colormap.<div style=3D"height: 6px;"></div> 5. Displ=
ay the original image and the predicted mask side by side.<div style=3D"hei=
ght: 6px;"></div><div style=3D"height: 6px;"></div> We will use the same se=
tup (hyperparameters, colormap, etc.) as in the evaluation script.<div styl=
e=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> However, note t=
hat the evaluation script was designed for a specific dataset. We are adapt=
ing it for inference on arbitrary images.<div style=3D"height: 6px;"></div>=
<div style=3D"height: 6px;"></div> We assume that the images are in a folde=
r and we will process each image in that folder.<div style=3D"height: 6px;"=
></div><div style=3D"height: 6px;"></div> We'll create a simple script that=
:<div style=3D"height: 6px;"></div>   - Takes a folder of images as input (=
via command line or hard-coded path)<div style=3D"height: 6px;"></div>   - =
Processes each image<div style=3D"height: 6px;"></div>   - Displays the ori=
ginal and the prediction, and also saves the results.<div style=3D"height: =
6px;"></div><div style=3D"height: 6px;"></div> Let's write the code accordi=
ngly.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> W=
e'll structure the script as follows:<div style=3D"height: 6px;"></div><div=
 style=3D"height: 6px;"></div>  1. Imports (same as before, plus maybe argp=
arse for command line)<div style=3D"height: 6px;"></div>  2. Define the sam=
e parameters (image size, colormap, etc.)<div style=3D"height: 6px;"></div>=
  3. Load the model<div style=3D"height: 6px;"></div>  4. Define a function=
 to process a single image and return the prediction mask (as RGB)<div styl=
e=3D"height: 6px;"></div>  5. Loop over images in the input folder, process=
, and display/save.<div style=3D"height: 6px;"></div><div style=3D"height: =
6px;"></div> Since we want to show the results, we can use OpenCV to displa=
y or we can save the images and then view them.<div style=3D"height: 6px;">=
</div><div style=3D"height: 6px;"></div> We'll save the results in an outpu=
t folder.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></di=
v> Steps for one image:<div style=3D"height: 6px;"></div><div style=3D"heig=
ht: 6px;"></div>   - Read the image (using OpenCV, in color: cv2.IMREAD_COL=
OR)<div style=3D"height: 6px;"></div>   - Resize to (256,256) as in the eva=
luation<div style=3D"height: 6px;"></div>   - Preprocess: transpose to (C, =
H, W), normalize by 255.0, convert to float32, then convert to tensor and a=
dd batch dimension.<div style=3D"height: 6px;"></div>   - Move tensor to de=
vice (GPU if available)<div style=3D"height: 6px;"></div>   - Run the model=
: model(image)<div style=3D"height: 6px;"></div>   - Apply softmax and then=
 take argmax to get the class per pixel.<div style=3D"height: 6px;"></div> =
  - Convert the prediction tensor to a numpy array (on CPU) and then to uin=
t8.<div style=3D"height: 6px;"></div>   - Convert this index mask to RGB us=
ing the colormap (using the provided function `index_to_rgb_mask`)<div styl=
e=3D"height: 6px;"></div>   - Resize the prediction back to the original si=
ze? (But note: the model expects 256x256 and outputs 256x256. If we want to=
 see in original size, we can resize the prediction to the original image s=
ize. However, the original image was resized to 256x256. If we have the ori=
ginal image at a different size, we might want to resize the prediction to =
that original size. But in this script, we are reading the image and resizi=
ng to 256x256. So the prediction is for the resized image.<div style=3D"hei=
ght: 6px;"></div><div style=3D"height: 6px;"></div>   We can either:<div st=
yle=3D"height: 6px;"></div>        Option 1: Work at 256x256 and then when =
displaying, we can resize the original and the prediction to a larger size =
for viewing? Or just show at 256x256.<div style=3D"height: 6px;"></div>    =
    Option 2: Resize the prediction to the original image size (if we read =
the original without resizing? But the model expects 256x256). So we must r=
esize the input to 256x256. Then we can resize the prediction back to the o=
riginal size.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;">=
</div>   How to handle arbitrary input size?<div style=3D"height: 6px;"></d=
iv><div style=3D"height: 6px;"></div>   Let's do:<div style=3D"height: 6px;=
"></div><div style=3D"height: 6px;"></div>        original_image =3D cv2.im=
read(image_path)<div style=3D"height: 6px;"></div>        original_size =3D=
 original_image.shape[:2]   # (height, width)<div style=3D"height: 6px;"></=
div><div style=3D"height: 6px;"></div>        image =3D cv2.resize(original=
_image, (256,256))<div style=3D"height: 6px;"></div><div style=3D"height: 6=
px;"></div>        ... process ...<div style=3D"height: 6px;"></div><div st=
yle=3D"height: 6px;"></div>        Then, we can resize the prediction (whic=
h is 256x256) to the original_size? But note: the prediction is a mask of c=
lass indices. If we resize with nearest neighbor to avoid blending.<div sty=
le=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   We'll add an=
 option to resize the prediction back to the original size.<div style=3D"he=
ight: 6px;"></div><div style=3D"height: 6px;"></div>   However, the model w=
as trained on 256x256, so the quality might be better if we work at that re=
solution.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></di=
v>   For now, we'll output the mask at 256x256. If we want to save in origi=
nal size, we can resize the mask to the original.<div style=3D"height: 6px;=
"></div><div style=3D"height: 6px;"></div>   But note: the script above in =
evaluation did not resize back. It saved at 256x256.<div style=3D"height: 6=
px;"></div><div style=3D"height: 6px;"></div>   We'll do the same: work at =
256x256.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div=
> 6. Then, we can display the original (resized) and the prediction side by=
 side, or save them.<div style=3D"height: 6px;"></div><div style=3D"height:=
 6px;"></div> Let's write the code accordingly.<div style=3D"height: 6px;">=
</div><div style=3D"height: 6px;"></div> We are going to:<div style=3D"heig=
ht: 6px;"></div><div style=3D"height: 6px;"></div>   - Create an output fol=
der for the predictions (masks) and for the side-by-side images.<div style=
=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   - For each ima=
ge in the input folder:<div style=3D"height: 6px;"></div><div style=3D"heig=
ht: 6px;"></div>        original =3D cv2.imread(image_path)<div style=3D"he=
ight: 6px;"></div>        resized_original =3D cv2.resize(original, (256,25=
6))<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>    =
    # Preprocess and predict<div style=3D"height: 6px;"></div>        mask_=
index =3D model_predict(resized_original, model, device)   # returns (256,2=
56) uint8 array of indices<div style=3D"height: 6px;"></div><div style=3D"h=
eight: 6px;"></div>        mask_rgb =3D index_to_rgb_mask(mask_index, color=
map)<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   =
     # Create a side-by-side image: original (resized) and mask_rgb<div sty=
le=3D"height: 6px;"></div>        combined =3D np.concatenate([resized_orig=
inal, mask_rgb], axis=3D1)<div style=3D"height: 6px;"></div><div style=3D"h=
eight: 6px;"></div>        # Save the combined image and the mask separatel=
y<div style=3D"height: 6px;"></div>        Save combined and mask_rgb.<div =
style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> 7. We might=
 also want to overlay the mask on the original? But that's optional.<div st=
yle=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> Implementatio=
n:<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   We=
'll define the same colormap and classes as in the evaluation.<div style=3D=
"height: 6px;"></div><div style=3D"height: 6px;"></div>   We'll load the mo=
del from the checkpoint.<div style=3D"height: 6px;"></div><div style=3D"hei=
ght: 6px;"></div>   We'll create a function `predict` that takes an image (=
numpy array in BGR, because OpenCV reads in BGR) and returns the mask as in=
dex array and then we convert to RGB.<div style=3D"height: 6px;"></div><div=
 style=3D"height: 6px;"></div>   Note: the model was trained on RGB images?=
 But OpenCV reads in BGR. So we need to convert the image to RGB? Or did th=
e training use BGR?<div style=3D"height: 6px;"></div><div style=3D"height: =
6px;"></div>   In the evaluation script, they did:<div style=3D"height: 6px=
;"></div><div style=3D"height: 6px;"></div>        image =3D cv2.imread(x, =
cv2.IMREAD_COLOR)   # This is BGR<div style=3D"height: 6px;"></div>        =
Then they resized and then transposed to (2,0,1) -&gt; (C, H, W) without co=
nverting to RGB.<div style=3D"height: 6px;"></div><div style=3D"height: 6px=
;"></div>   So the model expects BGR? Because during training they used the=
 same.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> =
  Therefore, we don't convert to RGB.<div style=3D"height: 6px;"></div><div=
 style=3D"height: 6px;"></div>   However, note that the model doesn't care =
about the color format as long as it's consistent with training.<div style=
=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   So we'll do th=
e same: use BGR.<div style=3D"height: 6px;"></div><div style=3D"height: 6px=
;"></div>   But when we display, OpenCV expects BGR, so we are safe.<div st=
yle=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   Steps for o=
ne image in the function:<div style=3D"height: 6px;"></div><div style=3D"he=
ight: 6px;"></div>        image =3D cv2.imread(path)  # shape (H, W, 3) in =
BGR<div style=3D"height: 6px;"></div>        image =3D cv2.resize(image, (2=
56,256))   # (H, W, 3)<div style=3D"height: 6px;"></div><div style=3D"heigh=
t: 6px;"></div>        # Preprocess: normalize and convert to tensor<div st=
yle=3D"height: 6px;"></div>        x =3D image.transpose(2,0,1)   # (3, H, =
W)<div style=3D"height: 6px;"></div>        x =3D x / 255.0<div style=3D"he=
ight: 6px;"></div>        x =3D np.expand_dims(x, axis=3D0)   # (1, 3, H, W=
)<div style=3D"height: 6px;"></div>        x =3D torch.from_numpy(x).float(=
).to(device)<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"><=
/div>        with torch.no_grad():<div style=3D"height: 6px;"></div>       =
     y_pred =3D model(x)   # (1, num_classes, H, W)<div style=3D"height: 6p=
x;"></div>            y_pred =3D torch.softmax(y_pred, dim=3D1)<div style=
=3D"height: 6px;"></div>            y_pred =3D torch.argmax(y_pred, dim=3D1=
)   # (1, H, W)<div style=3D"height: 6px;"></div>            y_pred =3D y_p=
red.cpu().numpy()   # (1, H, W)<div style=3D"height: 6px;"></div>          =
  y_pred =3D np.squeeze(y_pred, axis=3D0)   # (H, W) of type int64 (or long=
)<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>      =
  y_pred =3D y_pred.astype(np.uint8)<div style=3D"height: 6px;"></div><div =
style=3D"height: 6px;"></div>        return y_pred<div style=3D"height: 6px=
;"></div><div style=3D"height: 6px;"></div>   Then, we convert y_pred to RG=
B using the colormap.<div style=3D"height: 6px;"></div><div style=3D"height=
: 6px;"></div>   We'll also allow the input to be a numpy array so we can u=
se it in a loop.<div style=3D"height: 6px;"></div><div style=3D"height: 6px=
;"></div>   We'll create two output folders: one for the masks and one for =
the side-by-side.<div style=3D"height: 6px;"></div><div style=3D"height: 6p=
x;"></div>   We'll use the same structure as the evaluation script for outp=
ut.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   W=
e'll create:<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"><=
/div>        output_dir =3D "inference_results"<div style=3D"height: 6px;">=
</div>        inside: "masks", "side_by_side"<div style=3D"height: 6px;"></=
div><div style=3D"height: 6px;"></div>   We'll use argparse for:<div style=
=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>        --input: =
path to the input folder (or image)<div style=3D"height: 6px;"></div>      =
  --output: output folder (optional, default: "inference_results")<div styl=
e=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   But for simpl=
icity, we can also hardcode the input folder.<div style=3D"height: 6px;"></=
div><div style=3D"height: 6px;"></div>   Alternatively, we can make it take=
 a folder and process all images in that folder.<div style=3D"height: 6px;"=
></div><div style=3D"height: 6px;"></div>   Let's do:<div style=3D"height: =
6px;"></div><div style=3D"height: 6px;"></div>        if not provided, use =
a default input folder.<div style=3D"height: 6px;"></div><div style=3D"heig=
ht: 6px;"></div>   We'll write the code accordingly.<div style=3D"height: 6=
px;"></div><div style=3D"height: 6px;"></div>   We'll also print the time t=
aken per image and FPS.<div style=3D"height: 6px;"></div><div style=3D"heig=
ht: 6px;"></div>   We'll use the same device setup.<div style=3D"height: 6p=
x;"></div><div style=3D"height: 6px;"></div>   We'll seed for reproducibili=
ty.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   W=
e'll use the same model building function.<div style=3D"height: 6px;"></div=
><div style=3D"height: 6px;"></div>   We'll load the checkpoint.<div style=
=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   We'll set the =
model to eval mode.<div style=3D"height: 6px;"></div><div style=3D"height: =
6px;"></div>   Code structure:<div style=3D"height: 6px;"></div><div style=
=3D"height: 6px;"></div>        import ...<div style=3D"height: 6px;"></div=
>        from model import build_unet<div style=3D"height: 6px;"></div>    =
    from utils import create_dir<div style=3D"height: 6px;"></div><div styl=
e=3D"height: 6px;"></div>        # Parameters (same as in the evaluation sc=
ript)<div style=3D"height: 6px;"></div>        image_w =3D 256<div style=3D=
"height: 6px;"></div>        image_h =3D 256<div style=3D"height: 6px;"></d=
iv>        size =3D (image_w, image_h)<div style=3D"height: 6px;"></div>   =
     colormap =3D [<div style=3D"height: 6px;"></div>            [0, 0, 0],=
      # Background<div style=3D"height: 6px;"></div>            [0, 0, 128]=
,    # Class 1<div style=3D"height: 6px;"></div>            [0, 128, 0]    =
 # Class 2<div style=3D"height: 6px;"></div>        ]<div style=3D"height: =
6px;"></div>        num_classes =3D len(colormap)<div style=3D"height: 6px;=
"></div>        classes =3D ["background", "Weed-1", "Weed-2"]<div style=3D=
"height: 6px;"></div><div style=3D"height: 6px;"></div>        checkpoint_p=
ath =3D "files/checkpoint.pth"<div style=3D"height: 6px;"></div><div style=
=3D"height: 6px;"></div>        # Parse arguments<div style=3D"height: 6px;=
"></div>        import argparse<div style=3D"height: 6px;"></div>        pa=
rser =3D argparse.ArgumentParser()<div style=3D"height: 6px;"></div>       =
 parser.add_argument("--input", type=3Dstr, required=3DTrue, help=3D"Path t=
o input image or folder")<div style=3D"height: 6px;"></div>        parser.a=
dd_argument("--output", type=3Dstr, default=3D"inference_results", help=3D"=
Output directory")<div style=3D"height: 6px;"></div>        args =3D parser=
.parse_args()<div style=3D"height: 6px;"></div><div style=3D"height: 6px;">=
</div>        # Create output directories<div style=3D"height: 6px;"></div>=
        create_dir(args.output)<div style=3D"height: 6px;"></div>        ma=
sk_dir =3D os.path.join(args.output, "masks")<div style=3D"height: 6px;"></=
div>        side_by_side_dir =3D os.path.join(args.output, "side_by_side")<=
div style=3D"height: 6px;"></div>        create_dir(mask_dir)<div style=3D"=
height: 6px;"></div>        create_dir(side_by_side_dir)<div style=3D"heigh=
t: 6px;"></div><div style=3D"height: 6px;"></div>        # Device<div style=
=3D"height: 6px;"></div>        device =3D torch.device('cuda' if torch.cud=
a.is_available() else 'cpu')<div style=3D"height: 6px;"></div><div style=3D=
"height: 6px;"></div>        # Load model<div style=3D"height: 6px;"></div>=
        model =3D build_unet(num_classes=3Dnum_classes)<div style=3D"height=
: 6px;"></div>        model =3D model.to(device)<div style=3D"height: 6px;"=
></div>        model.load_state_dict(torch.load(checkpoint_path, map_locati=
on=3Ddevice)["model_state_dict"])<div style=3D"height: 6px;"></div>        =
model.eval()<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"><=
/div>        # Get image paths<div style=3D"height: 6px;"></div>        if =
os.path.isfile(args.input):<div style=3D"height: 6px;"></div>            im=
age_paths =3D [args.input]<div style=3D"height: 6px;"></div>        elif os=
.path.isdir(args.input):<div style=3D"height: 6px;"></div>            image=
_paths =3D glob(os.path.join(args.input, "*"))<div style=3D"height: 6px;"><=
/div>            # Filter for images? (jpg, png, etc.)<div style=3D"height:=
 6px;"></div>            image_paths =3D [x for x in image_paths if x.endsw=
ith((".jpg", ".png", ".jpeg"))]<div style=3D"height: 6px;"></div>        el=
se:<div style=3D"height: 6px;"></div>            raise Exception("Input pat=
h is not valid")<div style=3D"height: 6px;"></div><div style=3D"height: 6px=
;"></div>        # Process each image<div style=3D"height: 6px;"></div>    =
    for path in tqdm(image_paths, total=3Dlen(image_paths)):<div style=3D"h=
eight: 6px;"></div>            # Read image<div style=3D"height: 6px;"></di=
v>            original_image =3D cv2.imread(path, cv2.IMREAD_COLOR)   # BGR=
<div style=3D"height: 6px;"></div>            if original_image is None:<di=
v style=3D"height: 6px;"></div>                print(f"Could not read image=
: {path}")<div style=3D"height: 6px;"></div>                continue<div st=
yle=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>            # =
Get the resized image for the model<div style=3D"height: 6px;"></div>      =
      resized_image =3D cv2.resize(original_image, size)<div style=3D"heigh=
t: 6px;"></div><div style=3D"height: 6px;"></div>            # Predict<div =
style=3D"height: 6px;"></div>            mask_index =3D predict(resized_ima=
ge, model, device, size)   # we don't need size? because we already resized=
<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>       =
     # Convert mask_index to RGB mask<div style=3D"height: 6px;"></div>    =
        mask_rgb =3D index_to_rgb_mask(mask_index, colormap)<div style=3D"h=
eight: 6px;"></div><div style=3D"height: 6px;"></div>            # Also, we=
 want to see the mask on the original? but note: the mask is for the resize=
d image.<div style=3D"height: 6px;"></div>            # So we only have the=
 mask at 256x256.<div style=3D"height: 6px;"></div><div style=3D"height: 6p=
x;"></div>            # Create side-by-side of resized original and mask_rg=
b<div style=3D"height: 6px;"></div>            combined =3D np.concatenate(=
[resized_image, mask_rgb], axis=3D1)<div style=3D"height: 6px;"></div><div =
style=3D"height: 6px;"></div>            # Save<div style=3D"height: 6px;">=
</div>            name =3D os.path.basename(path).split(".")[0]<div style=
=3D"height: 6px;"></div>            cv2.imwrite(os.path.join(mask_dir, f"{n=
ame}.jpg"), mask_rgb)<div style=3D"height: 6px;"></div>            cv2.imwr=
ite(os.path.join(side_by_side_dir, f"{name}.jpg"), combined)<div style=3D"h=
eight: 6px;"></div><div style=3D"height: 6px;"></div>        print("Inferen=
ce completed.")<div style=3D"height: 6px;"></div><div style=3D"height: 6px;=
"></div>   We define the predict function:<div style=3D"height: 6px;"></div=
><div style=3D"height: 6px;"></div>        def predict(image, model, device=
, size=3DNone):<div style=3D"height: 6px;"></div>            # image: alrea=
dy resized to (256,256) and in BGR, shape (H, W, 3)<div style=3D"height: 6p=
x;"></div>            x =3D image.transpose(2,0,1)   # (3, H, W)<div style=
=3D"height: 6px;"></div>            x =3D x / 255.0<div style=3D"height: 6p=
x;"></div>            x =3D np.expand_dims(x, axis=3D0)   # (1,3,H,W)<div s=
tyle=3D"height: 6px;"></div>            x =3D torch.from_numpy(x).float().t=
o(device)<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></di=
v>            with torch.no_grad():<div style=3D"height: 6px;"></div>      =
          y_pred =3D model(x)<div style=3D"height: 6px;"></div>            =
    y_pred =3D torch.softmax(y_pred, dim=3D1)<div style=3D"height: 6px;"></=
div>                y_pred =3D torch.argmax(y_pred, dim=3D1)   # (1, H, W)<=
div style=3D"height: 6px;"></div>                y_pred =3D y_pred.cpu().nu=
mpy()          # (1, H, W)<div style=3D"height: 6px;"></div>               =
 y_pred =3D np.squeeze(y_pred, axis=3D0)    # (H, W) -&gt; uint8? but it's =
integer indices<div style=3D"height: 6px;"></div><div style=3D"height: 6px;=
"></div>            return y_pred.astype(np.uint8)<div style=3D"height: 6px=
;"></div><div style=3D"height: 6px;"></div>   We are not resizing the mask =
to the original because we don't have the original in the function. If we w=
ant that, we can do:<div style=3D"height: 6px;"></div><div style=3D"height:=
 6px;"></div>        mask_index_original_size =3D cv2.resize(mask_index, (o=
riginal_width, original_height), interpolation=3Dcv2.INTER_NEAREST)<div sty=
le=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   Then convert=
 that to RGB.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;">=
</div>   But for now, we are saving the mask at 256x256.<div style=3D"heigh=
t: 6px;"></div><div style=3D"height: 6px;"></div>   Let's write the code ac=
cordingly.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></d=
iv>   We'll also note: the original image we are saving in the side-by-side=
 is the resized one.<div style=3D"height: 6px;"></div><div style=3D"height:=
 6px;"></div>   If we want to save the mask in the original size, we can do=
:<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>      =
  original_height, original_width =3D original_image.shape[:2]<div style=3D=
"height: 6px;"></div>        mask_index_original =3D cv2.resize(mask_index,=
 (original_width, original_height), interpolation=3Dcv2.INTER_NEAREST)<div =
style=3D"height: 6px;"></div>        mask_rgb_original =3D index_to_rgb_mas=
k(mask_index_original, colormap)<div style=3D"height: 6px;"></div><div styl=
e=3D"height: 6px;"></div>   Then we can also create a side-by-side with the=
 original (full size) and the mask_original? But that would be very large i=
f the original is large. Alternatively, we can save two versions: one at 25=
6x256 and one at original.<div style=3D"height: 6px;"></div><div style=3D"h=
eight: 6px;"></div>   We'll stick to 256x256 for now.<div style=3D"height: =
6px;"></div><div style=3D"height: 6px;"></div>   We'll add an option for th=
e user to choose if they want the mask in original size? But let's not comp=
licate.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>=
   We are going to output:<div style=3D"height: 6px;"></div><div style=3D"h=
eight: 6px;"></div>        - The mask at 256x256 (in the masks folder)<div =
style=3D"height: 6px;"></div>        - The side-by-side (resized original a=
nd mask at 256x256) in the side_by_side folder.<div style=3D"height: 6px;">=
</div><div style=3D"height: 6px;"></div>   We can also add an option to sav=
e the mask in the original size. We'll leave that as an enhancement.<div st=
yle=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   Let's code =
accordingly.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"><=
/div>   Note: We are not measuring time in this inference script? We can if=
 we want.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></di=
v>   We'll add a simple timing to report FPS.<div style=3D"height: 6px;"></=
div><div style=3D"height: 6px;"></div>   We'll modify the predict function =
to also return the time taken.<div style=3D"height: 6px;"></div><div style=
=3D"height: 6px;"></div>   But for simplicity, we are just going to run and=
 save.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> =
  We'll run the code.<div style=3D"height: 6px;"></div><div style=3D"height=
: 6px;"></div>   We assume the checkpoint is at "files/checkpoint.pth"<div =
style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   We assume=
 the model architecture is defined in model.py and available.<div style=3D"=
height: 6px;"></div><div style=3D"height: 6px;"></div>   We also need the u=
tils.py for create_dir.<div style=3D"height: 6px;"></div><div style=3D"heig=
ht: 6px;"></div>   We'll write the code accordingly.<div style=3D"height: 6=
px;"></div><div style=3D"height: 6px;"></div>   Let's write the full script=
.</div></div><div class=3D"ds-markdown ds-markdown--block" style=3D"--ds-md=
-zoom: 1.143;"><p class=3D"ds-markdown-paragraph">To perform inference on y=
our images using the provided U-Net model and visualize the results, follow=
 this step-by-step guide. The script will load the trained model, process y=
our images, generate segmentation masks, and display/save the results.</p><=
h3>Inference Script</h3><div class=3D"md-code-block md-code-block-light"><d=
iv class=3D"md-code-block-banner-wrap"><div class=3D"md-code-block-banner m=
d-code-block-banner-lite"><div class=3D"_121d384"><div class=3D"d2a24f03"><=
span class=3D"d813de27">python</span></div><div class=3D"d2a24f03"><div cla=
ss=3D"efa13877"><div role=3D"button" class=3D"ds-button ds-button--secondar=
y ds-button--borderless ds-button--rect ds-button--m _7db3914" tabindex=3D"=
0" style=3D"margin-right: 8px; font-size: 13px; height: 28px; padding: 0px =
4px; --button-text-color: var(--dsr-text-2);"><div class=3D"ds-button__icon=
"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16p=
x;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xml=
ns=3D"http://www.w3.org/2000/svg"><path d=3D"M3.65169 12.9243C3.68173 13.10=
45 3.74181 13.2748 3.80189 13.445C3.87198 13.6052 3.96211 13.7654 4.06225 1=
3.9156C4.16238 14.0658 4.27253 14.206 4.4027 14.3362C4.52286 14.4663 4.6630=
6 14.5765 4.81326 14.6766C4.96346 14.7768 5.11366 14.8569 5.28389 14.927C5.=
44411 14.9971 5.61434 15.0571 5.79459 15.0872C5.97483 15.1272 6.14506 15.13=
73 6.3253 15.1373V16.9196C6.30739 16.9196 6.28949 16.9195 6.27159 16.9193C5=
.9991 16.9158 5.72659 16.8859 5.4541 16.8295C5.16371 16.7694 4.88334 16.689=
3 4.61298 16.5692C4.3326 16.459 4.08226 16.3188 3.83193 16.1586C3.59161 15.=
9884 3.3613 15.7981 3.15102 15.5878C2.94074 15.3776 2.7605 15.1473 2.59027 =
14.9069C2.43006 14.6566 2.28986 14.3962 2.17972 14.1259C2.06957 13.8455 1.9=
7944 13.5651 1.91936 13.2747C1.86929 12.9843 1.83926 12.684 1.83926 12.3936=
V6.26532C1.83926 5.96492 1.86929 5.67456 1.91936 5.38417C1.97944 5.09378 2.=
06957 4.80338 2.17972 4.53302C2.28986 4.26265 2.43006 4.0023 2.59027 3.7519=
7C2.7605 3.50163 2.94074 3.27132 3.15102 3.06104C3.3613 2.85076 3.59161 2.6=
7052 3.83193 2.50029C4.08226 2.33006 4.3326 2.19987 4.61298 2.07971C4.88334=
 1.96956 5.16371 1.87943 5.4541 1.81935C5.74449 1.75927 6.03491 1.73926 6.3=
253 1.73926H12.3934C12.6838 1.73926 12.9842 1.75927 13.2746 1.81935C13.555 =
1.87943 13.8354 1.96956 14.1158 2.07971C14.3861 2.19987 14.6465 2.33006 14.=
8868 2.50029C15.1371 2.67052 15.3574 2.85076 15.5677 3.06104C15.778 3.27132=
 15.9582 3.50163 16.1284 3.75197C16.2887 4.0023 16.4288 4.26265 16.539 4.53=
302C16.6592 4.80338 16.7393 5.09378 16.7994 5.38417C16.8558 5.65722 16.8858=
 5.93024 16.8892 6.21161C16.8894 6.22948 16.8895 6.24739 16.8895 6.26532H15=
.1271C15.1271 6.08508 15.1071 5.90486 15.067 5.72462C15.037 5.55439 14.9869=
 5.38415 14.9168 5.21392C14.8467 5.04369 14.7566 4.88347 14.6665 4.73327C14=
.5664 4.58307 14.4462 4.45289 14.326 4.32271C14.1959 4.19254 14.0557 4.0823=
9 13.9055 3.98226C13.7553 3.88212 13.6051 3.79202 13.4348 3.72193C13.2746 3=
.65184 13.1044 3.60174 12.9242 3.5717C12.7539 3.53165 12.5737 3.51163 12.39=
34 3.51163H6.3253C6.14506 3.51163 5.97483 3.53165 5.79459 3.5717C5.61434 3.=
60174 5.44411 3.65184 5.28389 3.72193C5.11366 3.79202 4.96346 3.88212 4.813=
26 3.98226C4.66306 4.08239 4.52286 4.19254 4.4027 4.32271C4.27253 4.45289 4=
.16238 4.58307 4.06225 4.73327C3.96211 4.88347 3.87198 5.04369 3.80189 5.21=
392C3.74181 5.38415 3.68173 5.55439 3.65169 5.72462C3.61164 5.90486 3.60164=
 6.08508 3.60164 6.26532V12.3936C3.60164 12.5638 3.61164 12.744 3.65169 12.=
9243Z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.4268 8.8987 21=
.2566C8.64836 21.0964 8.42804 20.9061 8.21776 20.6959C8.00748 20.4856 7.817=
23 20.2553 7.65701 20.015C7.4968 19.7646 7.3566 19.5043 7.24646 19.2239C7.1=
2629 18.9535 7.04621 18.6731 6.98613 18.3727C6.92605 18.0823 6.89601 17.792=
 6.89601 17.4915V11.3733C6.89601 11.0729 6.92605 10.7825 6.98613 10.4922C7.=
04621 10.1918 7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 7.4968 9.10028=
 7.65701 8.85996C7.81723 8.60962 8.00748 8.37931 8.21776 8.16903C8.42804 7.=
95875 8.64836 7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 7.29785 9.6697=
2 7.1877C9.94009 7.07755 10.2205 6.98745 10.5108 6.92737C10.8012 6.86729 11=
.0916 6.83725 11.392 6.83725H17.4602C17.7506 6.83725 18.041 6.86729 18.3313=
 6.92737C18.6217 6.98745 18.9021 7.07755 19.1725 7.1877C19.4529 7.29785 19.=
7032 7.43805 19.9535 7.60828C20.1938 7.76849 20.4242 7.95875 20.6345 8.1690=
3C20.8447 8.37931 21.025 8.60962 21.1952 8.85996C21.3554 9.10028 21.4956 9.=
36063 21.6058 9.64101C21.7159 9.91137 21.806 10.1918 21.8661 10.4922C21.916=
2 10.7825 21.9462 11.0729 21.9462 11.3733V17.4915C21.9462 17.792 21.9162 18=
.0823 21.8661 18.3727C21.806 18.6731 21.7159 18.9535 21.6058 19.2239C21.495=
6 19.5043 21.3554 19.7646 21.1952 20.015C21.025 20.2553 20.8447 20.4856 20.=
6345 20.6959C20.4242 20.9061 20.1938 21.0964 19.9535 21.2566C19.7032 21.426=
8 19.4529 21.567 19.1725 21.6772C18.9021 21.7973 18.6217 21.8774 18.3313 21=
.9375C18.041 21.9976 17.7506 22.0276 17.4602 22.0276H11.392C11.0916 22.0276=
 10.8012 21.9976 10.5108 21.9375C10.2205 21.8774 9.94009 21.7973 9.66972 21=
.6772ZM10.8613 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 8.61965H17.460=
2C17.6404 8.61965 17.8107 8.63966 17.9909 8.6697C18.1611 8.70975 18.3314 8.=
75983 18.5016 8.82992C18.6618 8.90001 18.822 8.98012 18.9722 9.08026C19.122=
4 9.18039 19.2626 9.30055 19.3828 9.42071C19.513 9.55088 19.6231 9.69109 19=
.7232 9.84129C19.8234 9.99149 19.9035 10.1517 19.9736 10.3219C20.0437 10.48=
21 20.0937 10.6624 20.1338 10.8326C20.1638 11.0129 20.1838 11.1931 20.1838 =
11.3733V17.4915C20.1838 17.6718 20.1638 17.852 20.1338 18.0323C20.0937 18.2=
125 20.0437 18.3828 19.9736 18.543C19.9035 18.7132 19.8234 18.8734 19.7232 =
19.0236C19.6231 19.1738 19.513 19.314 19.3828 19.4342C19.2626 19.5643 19.12=
24 19.6845 18.9722 19.7846C18.822 19.8848 18.6618 19.9649 18.5016 20.035C18=
.3314 20.1051 18.1611 20.1551 17.9909 20.1952C17.8107 20.2252 17.6404 20.24=
52 17.4602 20.2452H11.392C11.2118 20.2452 11.0316 20.2252 10.8613 20.1952C1=
0.6811 20.1551 10.5108 20.1051 10.3506 20.035C10.1804 19.9649 10.0202 19.88=
48 9.87 19.7846C9.72982 19.6845 9.58962 19.5643 9.45945 19.4342C9.33929 19.=
314 9.21913 19.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.7132 8.86866 1=
8.543C8.79857 18.3828 8.74847 18.2125 8.71843 18.0323C8.67838 17.852 8.6583=
6 17.6718 8.65836 17.4915V11.3733C8.65836 11.1931 8.67838 11.0129 8.71843 1=
0.8326C8.74847 10.6624 8.79857 10.4821 8.86866 10.3219C8.93875 10.1517 9.01=
886 9.99149 9.119 9.84129C9.21913 9.69109 9.33929 9.55088 9.45945 9.42071C9=
.58962 9.30055 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 10.1804 8.90001=
 10.3506 8.82992C10.5108 8.75983 10.6811 8.70975 10.8613 8.6697Z" fill=3D"c=
urrentColor"></path></svg></div></div><span class=3D"code-info-button-text"=
>Copy</span></div><div role=3D"button" class=3D"ds-button ds-button--second=
ary ds-button--borderless ds-button--rect ds-button--s _7db3914" tabindex=
=3D"0" style=3D"padding: 0px 4px; height: 28px; --button-text-color: var(--=
dsr-text-2); --button-font-size: 13px;"><div class=3D"ds-button__icon"><div=
 class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><s=
vg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"=
http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"evenod=
d" d=3D"M12 2.55a.97.97 0 0 1 .982.956v13.04a.97.97 0 0 1-.982.957.97.97 0 =
0 1-.982-.956V3.507A.97.97 0 0 1 12 2.55z" fill=3D"currentColor"></path><pa=
th fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M19.418 9.808c.382.375.=
37.971-.027 1.332l-6.7 6.085a1.04 1.04 0 0 1-1.41-.025.905.905 0 0 1 .027-1=
.332l6.7-6.085a1.04 1.04 0 0 1 1.41.025z" fill=3D"currentColor"></path><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M4.582 9.808a1.04 1.04 0=
 0 1 1.41-.025l6.7 6.085c.397.361.409.957.027 1.332a1.04 1.04 0 0 1-1.41.02=
5l-6.7-6.085a.905.905 0 0 1-.027-1.332z" fill=3D"currentColor"></path><path=
 fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3.068 16.46a.97.97 0 0 1=
 .983.956v1.739c0 .432.36.782.803.782h14.291c.445 0 .804-.35.804-.782v-1.73=
9a.97.97 0 0 1 .983-.956.97.97 0 0 1 .982.956v1.739c0 1.488-1.24 2.695-2.76=
9 2.695H4.855c-1.53 0-2.77-1.207-2.77-2.695v-1.739a.97.97 0 0 1 .983-.956z"=
 fill=3D"currentColor"></path></svg></div></div><span class=3D"code-info-bu=
tton-text">Download</span></div></div></div></div></div></div><pre><span cl=
ass=3D"token keyword">import</span> os
<span class=3D"token keyword">import</span> cv2
<span class=3D"token keyword">import</span> numpy <span class=3D"token keyw=
ord">as</span> np
<span class=3D"token keyword">import</span> torch
<span class=3D"token keyword">from</span> model <span class=3D"token keywor=
d">import</span> build_unet
<span class=3D"token keyword">from</span> utils <span class=3D"token keywor=
d">import</span> create_dir

<span class=3D"token comment"># Configuration (same as evaluation setup)</s=
pan>
IMAGE_SIZE <span class=3D"token operator">=3D</span> <span class=3D"token p=
unctuation">(</span><span class=3D"token number">256</span><span class=3D"t=
oken punctuation">,</span> <span class=3D"token number">256</span><span cla=
ss=3D"token punctuation">)</span>
COLORMAP <span class=3D"token operator">=3D</span> <span class=3D"token pun=
ctuation">[</span>
    <span class=3D"token punctuation">[</span><span class=3D"token number">=
0</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">0</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">0</span><span class=3D"token punctuation">]</span><span class=3D"=
token punctuation">,</span>      <span class=3D"token comment"># Background=
</span>
    <span class=3D"token punctuation">[</span><span class=3D"token number">=
0</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">0</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">128</span><span class=3D"token punctuation">]</span><span class=
=3D"token punctuation">,</span>    <span class=3D"token comment"># Weed-1</=
span>
    <span class=3D"token punctuation">[</span><span class=3D"token number">=
0</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">128</span><span class=3D"token punctuation">,</span> <span class=3D"to=
ken number">0</span><span class=3D"token punctuation">]</span>     <span cl=
ass=3D"token comment"># Weed-2</span>
<span class=3D"token punctuation">]</span>
CHECKPOINT_PATH <span class=3D"token operator">=3D</span> <span class=3D"to=
ken string">"files/checkpoint.pth"</span>
INPUT_DIR <span class=3D"token operator">=3D</span> <span class=3D"token st=
ring">"your_images/"</span>          <span class=3D"token comment"># Folder=
 with input images</span>
OUTPUT_DIR <span class=3D"token operator">=3D</span> <span class=3D"token s=
tring">"inference_results/"</span>   <span class=3D"token comment"># Folder=
 to save results</span>

<span class=3D"token comment"># Helper function to convert index mask to RG=
B</span>
<span class=3D"token keyword">def</span> <span class=3D"token function">ind=
ex_to_rgb_mask</span><span class=3D"token punctuation">(</span>mask<span cl=
ass=3D"token punctuation">,</span> colormap<span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">:</span>
    height<span class=3D"token punctuation">,</span> width <span class=3D"t=
oken operator">=3D</span> mask<span class=3D"token punctuation">.</span>sha=
pe
    rgb_mask <span class=3D"token operator">=3D</span> np<span class=3D"tok=
en punctuation">.</span>zeros<span class=3D"token punctuation">(</span><spa=
n class=3D"token punctuation">(</span>height<span class=3D"token punctuatio=
n">,</span> width<span class=3D"token punctuation">,</span> <span class=3D"=
token number">3</span><span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">,</span> dtype<span class=3D"token operator">=3D</sp=
an>np<span class=3D"token punctuation">.</span>uint8<span class=3D"token pu=
nctuation">)</span>
    <span class=3D"token keyword">for</span> class_id<span class=3D"token p=
unctuation">,</span> rgb <span class=3D"token keyword">in</span> <span clas=
s=3D"token builtin">enumerate</span><span class=3D"token punctuation">(</sp=
an>colormap<span class=3D"token punctuation">)</span><span class=3D"token p=
unctuation">:</span>
        rgb_mask<span class=3D"token punctuation">[</span>mask <span class=
=3D"token operator">=3D=3D</span> class_id<span class=3D"token punctuation"=
>]</span> <span class=3D"token operator">=3D</span> rgb
    <span class=3D"token keyword">return</span> rgb_mask

<span class=3D"token comment"># Load the trained model</span>
device <span class=3D"token operator">=3D</span> torch<span class=3D"token =
punctuation">.</span>device<span class=3D"token punctuation">(</span><span =
class=3D"token string">'cuda'</span> <span class=3D"token keyword">if</span=
> torch<span class=3D"token punctuation">.</span>cuda<span class=3D"token p=
unctuation">.</span>is_available<span class=3D"token punctuation">(</span><=
span class=3D"token punctuation">)</span> <span class=3D"token keyword">els=
e</span> <span class=3D"token string">'cpu'</span><span class=3D"token punc=
tuation">)</span>
model <span class=3D"token operator">=3D</span> build_unet<span class=3D"to=
ken punctuation">(</span>num_classes<span class=3D"token operator">=3D</spa=
n><span class=3D"token builtin">len</span><span class=3D"token punctuation"=
>(</span>COLORMAP<span class=3D"token punctuation">)</span><span class=3D"t=
oken punctuation">)</span><span class=3D"token punctuation">.</span>to<span=
 class=3D"token punctuation">(</span>device<span class=3D"token punctuation=
">)</span>
model<span class=3D"token punctuation">.</span>load_state_dict<span class=
=3D"token punctuation">(</span>torch<span class=3D"token punctuation">.</sp=
an>load<span class=3D"token punctuation">(</span>CHECKPOINT_PATH<span class=
=3D"token punctuation">,</span> map_location<span class=3D"token operator">=
=3D</span>device<span class=3D"token punctuation">)</span><span class=3D"to=
ken punctuation">[</span><span class=3D"token string">"model_state_dict"</s=
pan><span class=3D"token punctuation">]</span><span class=3D"token punctuat=
ion">)</span>
model<span class=3D"token punctuation">.</span><span class=3D"token builtin=
">eval</span><span class=3D"token punctuation">(</span><span class=3D"token=
 punctuation">)</span>

<span class=3D"token comment"># Create output directories</span>
create_dir<span class=3D"token punctuation">(</span><span class=3D"token st=
ring-interpolation"><span class=3D"token string">f"</span><span class=3D"to=
ken interpolation"><span class=3D"token punctuation">{</span>OUTPUT_DIR<spa=
n class=3D"token punctuation">}</span></span><span class=3D"token string">/=
overlays"</span></span><span class=3D"token punctuation">)</span>
create_dir<span class=3D"token punctuation">(</span><span class=3D"token st=
ring-interpolation"><span class=3D"token string">f"</span><span class=3D"to=
ken interpolation"><span class=3D"token punctuation">{</span>OUTPUT_DIR<spa=
n class=3D"token punctuation">}</span></span><span class=3D"token string">/=
masks"</span></span><span class=3D"token punctuation">)</span>

<span class=3D"token comment"># Process each image in the input directory</=
span>
<span class=3D"token keyword">for</span> image_path <span class=3D"token ke=
yword">in</span> os<span class=3D"token punctuation">.</span>listdir<span c=
lass=3D"token punctuation">(</span>INPUT_DIR<span class=3D"token punctuatio=
n">)</span><span class=3D"token punctuation">:</span>
    <span class=3D"token keyword">if</span> <span class=3D"token keyword">n=
ot</span> image_path<span class=3D"token punctuation">.</span>lower<span cl=
ass=3D"token punctuation">(</span><span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">.</span>endswith<span class=3D"token pun=
ctuation">(</span><span class=3D"token punctuation">(</span><span class=3D"=
token string">'.png'</span><span class=3D"token punctuation">,</span> <span=
 class=3D"token string">'.jpg'</span><span class=3D"token punctuation">,</s=
pan> <span class=3D"token string">'.jpeg'</span><span class=3D"token punctu=
ation">)</span><span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">:</span>
        <span class=3D"token keyword">continue</span>

    <span class=3D"token comment"># Load and preprocess image</span>
    image <span class=3D"token operator">=3D</span> cv2<span class=3D"token=
 punctuation">.</span>imread<span class=3D"token punctuation">(</span>os<sp=
an class=3D"token punctuation">.</span>path<span class=3D"token punctuation=
">.</span>join<span class=3D"token punctuation">(</span>INPUT_DIR<span clas=
s=3D"token punctuation">,</span> image_path<span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">)</span>
    original_image <span class=3D"token operator">=3D</span> image<span cla=
ss=3D"token punctuation">.</span>copy<span class=3D"token punctuation">(</s=
pan><span class=3D"token punctuation">)</span>
    image <span class=3D"token operator">=3D</span> cv2<span class=3D"token=
 punctuation">.</span>resize<span class=3D"token punctuation">(</span>image=
<span class=3D"token punctuation">,</span> IMAGE_SIZE<span class=3D"token p=
unctuation">)</span>
    x <span class=3D"token operator">=3D</span> image <span class=3D"token =
operator">/</span> <span class=3D"token number">255.0</span>
    x <span class=3D"token operator">=3D</span> np<span class=3D"token punc=
tuation">.</span>transpose<span class=3D"token punctuation">(</span>x<span =
class=3D"token punctuation">,</span> <span class=3D"token punctuation">(</s=
pan><span class=3D"token number">2</span><span class=3D"token punctuation">=
,</span> <span class=3D"token number">0</span><span class=3D"token punctuat=
ion">,</span> <span class=3D"token number">1</span><span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">)</span>            <sp=
an class=3D"token comment"># HWC to CHW</span>
    x <span class=3D"token operator">=3D</span> torch<span class=3D"token p=
unctuation">.</span>from_numpy<span class=3D"token punctuation">(</span>x<s=
pan class=3D"token punctuation">)</span><span class=3D"token punctuation">.=
</span>unsqueeze<span class=3D"token punctuation">(</span><span class=3D"to=
ken number">0</span><span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">.</span><span class=3D"token builtin">float</span><s=
pan class=3D"token punctuation">(</span><span class=3D"token punctuation">)=
</span><span class=3D"token punctuation">.</span>to<span class=3D"token pun=
ctuation">(</span>device<span class=3D"token punctuation">)</span>  <span c=
lass=3D"token comment"># Add batch dim</span>

    <span class=3D"token comment"># Run inference</span>
    <span class=3D"token keyword">with</span> torch<span class=3D"token pun=
ctuation">.</span>no_grad<span class=3D"token punctuation">(</span><span cl=
ass=3D"token punctuation">)</span><span class=3D"token punctuation">:</span=
>
        pred <span class=3D"token operator">=3D</span> model<span class=3D"=
token punctuation">(</span>x<span class=3D"token punctuation">)</span>
        pred <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>softmax<span class=3D"token punctuation">(</span=
>pred<span class=3D"token punctuation">,</span> dim<span class=3D"token ope=
rator">=3D</span><span class=3D"token number">1</span><span class=3D"token =
punctuation">)</span>
        pred <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>argmax<span class=3D"token punctuation">(</span>=
pred<span class=3D"token punctuation">,</span> dim<span class=3D"token oper=
ator">=3D</span><span class=3D"token number">1</span><span class=3D"token p=
unctuation">)</span>      <span class=3D"token comment"># Get class indices=
</span>
        pred <span class=3D"token operator">=3D</span> pred<span class=3D"t=
oken punctuation">.</span>squeeze<span class=3D"token punctuation">(</span>=
<span class=3D"token punctuation">)</span><span class=3D"token punctuation"=
>.</span>cpu<span class=3D"token punctuation">(</span><span class=3D"token =
punctuation">)</span><span class=3D"token punctuation">.</span>numpy<span c=
lass=3D"token punctuation">(</span><span class=3D"token punctuation">)</spa=
n><span class=3D"token punctuation">.</span>astype<span class=3D"token punc=
tuation">(</span>np<span class=3D"token punctuation">.</span>uint8<span cla=
ss=3D"token punctuation">)</span>

    <span class=3D"token comment"># Convert prediction to RGB mask</span>
    pred_mask <span class=3D"token operator">=3D</span> index_to_rgb_mask<s=
pan class=3D"token punctuation">(</span>pred<span class=3D"token punctuatio=
n">,</span> COLORMAP<span class=3D"token punctuation">)</span>
    pred_mask_resized <span class=3D"token operator">=3D</span> cv2<span cl=
ass=3D"token punctuation">.</span>resize<span class=3D"token punctuation">(=
</span>pred_mask<span class=3D"token punctuation">,</span>=20
                                  <span class=3D"token punctuation">(</span=
>original_image<span class=3D"token punctuation">.</span>shape<span class=
=3D"token punctuation">[</span><span class=3D"token number">1</span><span c=
lass=3D"token punctuation">]</span><span class=3D"token punctuation">,</spa=
n>=20
                                   original_image<span class=3D"token punct=
uation">.</span>shape<span class=3D"token punctuation">[</span><span class=
=3D"token number">0</span><span class=3D"token punctuation">]</span><span c=
lass=3D"token punctuation">)</span><span class=3D"token punctuation">,</spa=
n>
                                  interpolation<span class=3D"token operato=
r">=3D</span>cv2<span class=3D"token punctuation">.</span>INTER_NEAREST<spa=
n class=3D"token punctuation">)</span>

    <span class=3D"token comment"># Create overlay (transparent mask on ori=
ginal image)</span>
    overlay <span class=3D"token operator">=3D</span> original_image<span c=
lass=3D"token punctuation">.</span>copy<span class=3D"token punctuation">(<=
/span><span class=3D"token punctuation">)</span>
    alpha <span class=3D"token operator">=3D</span> <span class=3D"token nu=
mber">0.5</span>  <span class=3D"token comment"># Transparency factor</span=
>
    <span class=3D"token keyword">for</span> i<span class=3D"token punctuat=
ion">,</span> color <span class=3D"token keyword">in</span> <span class=3D"=
token builtin">enumerate</span><span class=3D"token punctuation">(</span>CO=
LORMAP<span class=3D"token punctuation">[</span><span class=3D"token number=
">1</span><span class=3D"token punctuation">:</span><span class=3D"token pu=
nctuation">]</span><span class=3D"token punctuation">,</span> start<span cl=
ass=3D"token operator">=3D</span><span class=3D"token number">1</span><span=
 class=3D"token punctuation">)</span><span class=3D"token punctuation">:</s=
pan>  <span class=3D"token comment"># Skip background</span>
        class_mask <span class=3D"token operator">=3D</span> np<span class=
=3D"token punctuation">.</span><span class=3D"token builtin">all</span><spa=
n class=3D"token punctuation">(</span>pred_mask_resized <span class=3D"toke=
n operator">=3D=3D</span> color<span class=3D"token punctuation">,</span> a=
xis<span class=3D"token operator">=3D</span><span class=3D"token operator">=
-</span><span class=3D"token number">1</span><span class=3D"token punctuati=
on">)</span>
        overlay<span class=3D"token punctuation">[</span>class_mask<span cl=
ass=3D"token punctuation">]</span> <span class=3D"token operator">=3D</span=
> cv2<span class=3D"token punctuation">.</span>addWeighted<span class=3D"to=
ken punctuation">(</span>overlay<span class=3D"token punctuation">[</span>c=
lass_mask<span class=3D"token punctuation">]</span><span class=3D"token pun=
ctuation">,</span> <span class=3D"token number">1</span><span class=3D"toke=
n operator">-</span>alpha<span class=3D"token punctuation">,</span>
                                             np<span class=3D"token punctua=
tion">.</span>array<span class=3D"token punctuation">(</span>color<span cla=
ss=3D"token punctuation">)</span><span class=3D"token punctuation">,</span>=
 alpha<span class=3D"token punctuation">,</span> <span class=3D"token numbe=
r">0</span><span class=3D"token punctuation">)</span>

    <span class=3D"token comment"># Display results</span>
    cv2<span class=3D"token punctuation">.</span>imshow<span class=3D"token=
 punctuation">(</span><span class=3D"token string">"Original Image"</span><=
span class=3D"token punctuation">,</span> original_image<span class=3D"toke=
n punctuation">)</span>
    cv2<span class=3D"token punctuation">.</span>imshow<span class=3D"token=
 punctuation">(</span><span class=3D"token string">"Predicted Mask"</span><=
span class=3D"token punctuation">,</span> pred_mask_resized<span class=3D"t=
oken punctuation">)</span>
    cv2<span class=3D"token punctuation">.</span>imshow<span class=3D"token=
 punctuation">(</span><span class=3D"token string">"Segmentation Overlay"</=
span><span class=3D"token punctuation">,</span> overlay<span class=3D"token=
 punctuation">)</span>
    cv2<span class=3D"token punctuation">.</span>waitKey<span class=3D"toke=
n punctuation">(</span><span class=3D"token number">0</span><span class=3D"=
token punctuation">)</span>  <span class=3D"token comment"># Press any key =
to advance to next image</span>
   =20
    <span class=3D"token comment"># Save results</span>
    base_name <span class=3D"token operator">=3D</span> os<span class=3D"to=
ken punctuation">.</span>path<span class=3D"token punctuation">.</span>spli=
text<span class=3D"token punctuation">(</span>image_path<span class=3D"toke=
n punctuation">)</span><span class=3D"token punctuation">[</span><span clas=
s=3D"token number">0</span><span class=3D"token punctuation">]</span>
    cv2<span class=3D"token punctuation">.</span>imwrite<span class=3D"toke=
n punctuation">(</span><span class=3D"token string-interpolation"><span cla=
ss=3D"token string">f"</span><span class=3D"token interpolation"><span clas=
s=3D"token punctuation">{</span>OUTPUT_DIR<span class=3D"token punctuation"=
>}</span></span><span class=3D"token string">/masks/</span><span class=3D"t=
oken interpolation"><span class=3D"token punctuation">{</span>base_name<spa=
n class=3D"token punctuation">}</span></span><span class=3D"token string">_=
mask.png"</span></span><span class=3D"token punctuation">,</span> pred_mask=
_resized<span class=3D"token punctuation">)</span>
    cv2<span class=3D"token punctuation">.</span>imwrite<span class=3D"toke=
n punctuation">(</span><span class=3D"token string-interpolation"><span cla=
ss=3D"token string">f"</span><span class=3D"token interpolation"><span clas=
s=3D"token punctuation">{</span>OUTPUT_DIR<span class=3D"token punctuation"=
>}</span></span><span class=3D"token string">/overlays/</span><span class=
=3D"token interpolation"><span class=3D"token punctuation">{</span>base_nam=
e<span class=3D"token punctuation">}</span></span><span class=3D"token stri=
ng">_overlay.png"</span></span><span class=3D"token punctuation">,</span> o=
verlay<span class=3D"token punctuation">)</span>

cv2<span class=3D"token punctuation">.</span>destroyAllWindows<span class=
=3D"token punctuation">(</span><span class=3D"token punctuation">)</span></=
pre></div><h3>Key Steps Explained:</h3><ol start=3D"1"><li><p class=3D"ds-m=
arkdown-paragraph"><strong>Setup Configuration</strong>:</p><ul><li><p clas=
s=3D"ds-markdown-paragraph">Uses same image size (256x256) and colormap as =
training</p></li><li><p class=3D"ds-markdown-paragraph">Point to your train=
ed model checkpoint (<code>files/checkpoint.pth</code>)</p></li><li><p clas=
s=3D"ds-markdown-paragraph">Set input/output directories</p></li></ul></li>=
<li><p class=3D"ds-markdown-paragraph"><strong>Image Processing</strong>:</=
p><ul><li><p class=3D"ds-markdown-paragraph">Resizes images to match model =
input size</p></li><li><p class=3D"ds-markdown-paragraph">Normalizes pixel =
values (0-1 range)</p></li><li><p class=3D"ds-markdown-paragraph">Converts =
to PyTorch tensor format</p></li></ul></li><li><p class=3D"ds-markdown-para=
graph"><strong>Model Inference</strong>:</p><ul><li><p class=3D"ds-markdown=
-paragraph">Runs images through the U-Net model</p></li><li><p class=3D"ds-=
markdown-paragraph">Applies softmax to get class probabilities</p></li><li>=
<p class=3D"ds-markdown-paragraph">Selects class with highest probability p=
er pixel</p></li></ul></li><li><p class=3D"ds-markdown-paragraph"><strong>R=
esult Visualization</strong>:</p><ul><li><p class=3D"ds-markdown-paragraph"=
><strong>Original Image</strong>: Input image</p></li><li><p class=3D"ds-ma=
rkdown-paragraph"><strong>Predicted Mask</strong>: Colored segmentation mas=
k</p></li><li><p class=3D"ds-markdown-paragraph"><strong>Overlay</strong>: =
Semi-transparent mask over original image</p></li><li><p class=3D"ds-markdo=
wn-paragraph">Press any key to cycle through images</p></li></ul></li><li><=
p class=3D"ds-markdown-paragraph"><strong>Output Saving</strong>:</p><ul><l=
i><p class=3D"ds-markdown-paragraph">Saves masks as PNG files in <code>infe=
rence_results/masks/</code></p></li><li><p class=3D"ds-markdown-paragraph">=
Saves overlays in <code>inference_results/overlays/</code></p></li></ul></l=
i></ol><h3>Requirements:</h3><ol start=3D"1"><li><p class=3D"ds-markdown-pa=
ragraph">Directory structure:</p><div class=3D"md-code-block md-code-block-=
light"><div class=3D"md-code-block-banner-wrap"><div class=3D"md-code-block=
-banner md-code-block-banner-lite"><div class=3D"_121d384"><div class=3D"d2=
a24f03"><span class=3D"d813de27">text</span></div><div class=3D"d2a24f03"><=
div class=3D"efa13877"><div role=3D"button" class=3D"ds-button ds-button--s=
econdary ds-button--borderless ds-button--rect ds-button--m _7db3914" tabin=
dex=3D"0" style=3D"margin-right: 8px; font-size: 13px; height: 28px; paddin=
g: 0px 4px; --button-text-color: var(--dsr-text-2);"><div class=3D"ds-butto=
n__icon"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; heig=
ht: 16px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"no=
ne" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M3.65169 12.9243C3.6817=
3 13.1045 3.74181 13.2748 3.80189 13.445C3.87198 13.6052 3.96211 13.7654 4.=
06225 13.9156C4.16238 14.0658 4.27253 14.206 4.4027 14.3362C4.52286 14.4663=
 4.66306 14.5765 4.81326 14.6766C4.96346 14.7768 5.11366 14.8569 5.28389 14=
.927C5.44411 14.9971 5.61434 15.0571 5.79459 15.0872C5.97483 15.1272 6.1450=
6 15.1373 6.3253 15.1373V16.9196C6.30739 16.9196 6.28949 16.9195 6.27159 16=
.9193C5.9991 16.9158 5.72659 16.8859 5.4541 16.8295C5.16371 16.7694 4.88334=
 16.6893 4.61298 16.5692C4.3326 16.459 4.08226 16.3188 3.83193 16.1586C3.59=
161 15.9884 3.3613 15.7981 3.15102 15.5878C2.94074 15.3776 2.7605 15.1473 2=
.59027 14.9069C2.43006 14.6566 2.28986 14.3962 2.17972 14.1259C2.06957 13.8=
455 1.97944 13.5651 1.91936 13.2747C1.86929 12.9843 1.83926 12.684 1.83926 =
12.3936V6.26532C1.83926 5.96492 1.86929 5.67456 1.91936 5.38417C1.97944 5.0=
9378 2.06957 4.80338 2.17972 4.53302C2.28986 4.26265 2.43006 4.0023 2.59027=
 3.75197C2.7605 3.50163 2.94074 3.27132 3.15102 3.06104C3.3613 2.85076 3.59=
161 2.67052 3.83193 2.50029C4.08226 2.33006 4.3326 2.19987 4.61298 2.07971C=
4.88334 1.96956 5.16371 1.87943 5.4541 1.81935C5.74449 1.75927 6.03491 1.73=
926 6.3253 1.73926H12.3934C12.6838 1.73926 12.9842 1.75927 13.2746 1.81935C=
13.555 1.87943 13.8354 1.96956 14.1158 2.07971C14.3861 2.19987 14.6465 2.33=
006 14.8868 2.50029C15.1371 2.67052 15.3574 2.85076 15.5677 3.06104C15.778 =
3.27132 15.9582 3.50163 16.1284 3.75197C16.2887 4.0023 16.4288 4.26265 16.5=
39 4.53302C16.6592 4.80338 16.7393 5.09378 16.7994 5.38417C16.8558 5.65722 =
16.8858 5.93024 16.8892 6.21161C16.8894 6.22948 16.8895 6.24739 16.8895 6.2=
6532H15.1271C15.1271 6.08508 15.1071 5.90486 15.067 5.72462C15.037 5.55439 =
14.9869 5.38415 14.9168 5.21392C14.8467 5.04369 14.7566 4.88347 14.6665 4.7=
3327C14.5664 4.58307 14.4462 4.45289 14.326 4.32271C14.1959 4.19254 14.0557=
 4.08239 13.9055 3.98226C13.7553 3.88212 13.6051 3.79202 13.4348 3.72193C13=
.2746 3.65184 13.1044 3.60174 12.9242 3.5717C12.7539 3.53165 12.5737 3.5116=
3 12.3934 3.51163H6.3253C6.14506 3.51163 5.97483 3.53165 5.79459 3.5717C5.6=
1434 3.60174 5.44411 3.65184 5.28389 3.72193C5.11366 3.79202 4.96346 3.8821=
2 4.81326 3.98226C4.66306 4.08239 4.52286 4.19254 4.4027 4.32271C4.27253 4.=
45289 4.16238 4.58307 4.06225 4.73327C3.96211 4.88347 3.87198 5.04369 3.801=
89 5.21392C3.74181 5.38415 3.68173 5.55439 3.65169 5.72462C3.61164 5.90486 =
3.60164 6.08508 3.60164 6.26532V12.3936C3.60164 12.5638 3.61164 12.744 3.65=
169 12.9243Z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd" clip=
-rule=3D"evenodd" d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.4268 8.89=
87 21.2566C8.64836 21.0964 8.42804 20.9061 8.21776 20.6959C8.00748 20.4856 =
7.81723 20.2553 7.65701 20.015C7.4968 19.7646 7.3566 19.5043 7.24646 19.223=
9C7.12629 18.9535 7.04621 18.6731 6.98613 18.3727C6.92605 18.0823 6.89601 1=
7.792 6.89601 17.4915V11.3733C6.89601 11.0729 6.92605 10.7825 6.98613 10.49=
22C7.04621 10.1918 7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 7.4968 9.=
10028 7.65701 8.85996C7.81723 8.60962 8.00748 8.37931 8.21776 8.16903C8.428=
04 7.95875 8.64836 7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 7.29785 9=
.66972 7.1877C9.94009 7.07755 10.2205 6.98745 10.5108 6.92737C10.8012 6.867=
29 11.0916 6.83725 11.392 6.83725H17.4602C17.7506 6.83725 18.041 6.86729 18=
.3313 6.92737C18.6217 6.98745 18.9021 7.07755 19.1725 7.1877C19.4529 7.2978=
5 19.7032 7.43805 19.9535 7.60828C20.1938 7.76849 20.4242 7.95875 20.6345 8=
.16903C20.8447 8.37931 21.025 8.60962 21.1952 8.85996C21.3554 9.10028 21.49=
56 9.36063 21.6058 9.64101C21.7159 9.91137 21.806 10.1918 21.8661 10.4922C2=
1.9162 10.7825 21.9462 11.0729 21.9462 11.3733V17.4915C21.9462 17.792 21.91=
62 18.0823 21.8661 18.3727C21.806 18.6731 21.7159 18.9535 21.6058 19.2239C2=
1.4956 19.5043 21.3554 19.7646 21.1952 20.015C21.025 20.2553 20.8447 20.485=
6 20.6345 20.6959C20.4242 20.9061 20.1938 21.0964 19.9535 21.2566C19.7032 2=
1.4268 19.4529 21.567 19.1725 21.6772C18.9021 21.7973 18.6217 21.8774 18.33=
13 21.9375C18.041 21.9976 17.7506 22.0276 17.4602 22.0276H11.392C11.0916 22=
.0276 10.8012 21.9976 10.5108 21.9375C10.2205 21.8774 9.94009 21.7973 9.669=
72 21.6772ZM10.8613 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 8.61965H1=
7.4602C17.6404 8.61965 17.8107 8.63966 17.9909 8.6697C18.1611 8.70975 18.33=
14 8.75983 18.5016 8.82992C18.6618 8.90001 18.822 8.98012 18.9722 9.08026C1=
9.1224 9.18039 19.2626 9.30055 19.3828 9.42071C19.513 9.55088 19.6231 9.691=
09 19.7232 9.84129C19.8234 9.99149 19.9035 10.1517 19.9736 10.3219C20.0437 =
10.4821 20.0937 10.6624 20.1338 10.8326C20.1638 11.0129 20.1838 11.1931 20.=
1838 11.3733V17.4915C20.1838 17.6718 20.1638 17.852 20.1338 18.0323C20.0937=
 18.2125 20.0437 18.3828 19.9736 18.543C19.9035 18.7132 19.8234 18.8734 19.=
7232 19.0236C19.6231 19.1738 19.513 19.314 19.3828 19.4342C19.2626 19.5643 =
19.1224 19.6845 18.9722 19.7846C18.822 19.8848 18.6618 19.9649 18.5016 20.0=
35C18.3314 20.1051 18.1611 20.1551 17.9909 20.1952C17.8107 20.2252 17.6404 =
20.2452 17.4602 20.2452H11.392C11.2118 20.2452 11.0316 20.2252 10.8613 20.1=
952C10.6811 20.1551 10.5108 20.1051 10.3506 20.035C10.1804 19.9649 10.0202 =
19.8848 9.87 19.7846C9.72982 19.6845 9.58962 19.5643 9.45945 19.4342C9.3392=
9 19.314 9.21913 19.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.7132 8.86=
866 18.543C8.79857 18.3828 8.74847 18.2125 8.71843 18.0323C8.67838 17.852 8=
.65836 17.6718 8.65836 17.4915V11.3733C8.65836 11.1931 8.67838 11.0129 8.71=
843 10.8326C8.74847 10.6624 8.79857 10.4821 8.86866 10.3219C8.93875 10.1517=
 9.01886 9.99149 9.119 9.84129C9.21913 9.69109 9.33929 9.55088 9.45945 9.42=
071C9.58962 9.30055 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 10.1804 8.=
90001 10.3506 8.82992C10.5108 8.75983 10.6811 8.70975 10.8613 8.6697Z" fill=
=3D"currentColor"></path></svg></div></div><span class=3D"code-info-button-=
text">Copy</span></div><div role=3D"button" class=3D"ds-button ds-button--s=
econdary ds-button--borderless ds-button--rect ds-button--s _7db3914" tabin=
dex=3D"0" style=3D"padding: 0px 4px; height: 28px; --button-text-color: var=
(--dsr-text-2); --button-font-size: 13px;"><div class=3D"ds-button__icon"><=
div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"=
><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M12 2.55a.97.97 0 0 1 .982.956v13.04a.97.97 0 0 1-.982.957.97.9=
7 0 0 1-.982-.956V3.507A.97.97 0 0 1 12 2.55z" fill=3D"currentColor"></path=
><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M19.418 9.808c.382.=
375.37.971-.027 1.332l-6.7 6.085a1.04 1.04 0 0 1-1.41-.025.905.905 0 0 1 .0=
27-1.332l6.7-6.085a1.04 1.04 0 0 1 1.41.025z" fill=3D"currentColor"></path>=
<path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M4.582 9.808a1.04 1.=
04 0 0 1 1.41-.025l6.7 6.085c.397.361.409.957.027 1.332a1.04 1.04 0 0 1-1.4=
1.025l-6.7-6.085a.905.905 0 0 1-.027-1.332z" fill=3D"currentColor"></path><=
path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3.068 16.46a.97.97 0=
 0 1 .983.956v1.739c0 .432.36.782.803.782h14.291c.445 0 .804-.35.804-.782v-=
1.739a.97.97 0 0 1 .983-.956.97.97 0 0 1 .982.956v1.739c0 1.488-1.24 2.695-=
2.769 2.695H4.855c-1.53 0-2.77-1.207-2.77-2.695v-1.739a.97.97 0 0 1 .983-.9=
56z" fill=3D"currentColor"></path></svg></div></div><span class=3D"code-inf=
o-button-text">Download</span></div></div></div></div></div></div><pre>=E2=
=94=9C=E2=94=80=E2=94=80 files/
=E2=94=82   =E2=94=94=E2=94=80=E2=94=80 checkpoint.pth       # Trained mode=
l weights
=E2=94=9C=E2=94=80=E2=94=80 your_images/             # Put your test images=
 here
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 image1.jpg
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 image2.png
=E2=94=82   =E2=94=94=E2=94=80=E2=94=80 ...
=E2=94=9C=E2=94=80=E2=94=80 model.py                 # U-Net implementation
=E2=94=9C=E2=94=80=E2=94=80 utils.py                 # Helper functions
=E2=94=94=E2=94=80=E2=94=80 inference.py             # This script</pre></d=
iv></li><li><p class=3D"ds-markdown-paragraph">Required libraries:</p><div =
class=3D"md-code-block md-code-block-light"><div class=3D"md-code-block-ban=
ner-wrap"><div class=3D"md-code-block-banner md-code-block-banner-lite"><di=
v class=3D"_121d384"><div class=3D"d2a24f03"><span class=3D"d813de27">bash<=
/span></div><div class=3D"d2a24f03"><div class=3D"efa13877"><div role=3D"bu=
tton" class=3D"ds-button ds-button--secondary ds-button--borderless ds-butt=
on--rect ds-button--m _7db3914" tabindex=3D"0" style=3D"margin-right: 8px; =
font-size: 13px; height: 28px; padding: 0px 4px; --button-text-color: var(-=
-dsr-text-2);"><div class=3D"ds-button__icon"><div class=3D"ds-icon" style=
=3D"font-size: 16px; width: 16px; height: 16px;"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg"><path d=3D"M3.65169 12.9243C3.68173 13.1045 3.74181 13.2748 3.80189 1=
3.445C3.87198 13.6052 3.96211 13.7654 4.06225 13.9156C4.16238 14.0658 4.272=
53 14.206 4.4027 14.3362C4.52286 14.4663 4.66306 14.5765 4.81326 14.6766C4.=
96346 14.7768 5.11366 14.8569 5.28389 14.927C5.44411 14.9971 5.61434 15.057=
1 5.79459 15.0872C5.97483 15.1272 6.14506 15.1373 6.3253 15.1373V16.9196C6.=
30739 16.9196 6.28949 16.9195 6.27159 16.9193C5.9991 16.9158 5.72659 16.885=
9 5.4541 16.8295C5.16371 16.7694 4.88334 16.6893 4.61298 16.5692C4.3326 16.=
459 4.08226 16.3188 3.83193 16.1586C3.59161 15.9884 3.3613 15.7981 3.15102 =
15.5878C2.94074 15.3776 2.7605 15.1473 2.59027 14.9069C2.43006 14.6566 2.28=
986 14.3962 2.17972 14.1259C2.06957 13.8455 1.97944 13.5651 1.91936 13.2747=
C1.86929 12.9843 1.83926 12.684 1.83926 12.3936V6.26532C1.83926 5.96492 1.8=
6929 5.67456 1.91936 5.38417C1.97944 5.09378 2.06957 4.80338 2.17972 4.5330=
2C2.28986 4.26265 2.43006 4.0023 2.59027 3.75197C2.7605 3.50163 2.94074 3.2=
7132 3.15102 3.06104C3.3613 2.85076 3.59161 2.67052 3.83193 2.50029C4.08226=
 2.33006 4.3326 2.19987 4.61298 2.07971C4.88334 1.96956 5.16371 1.87943 5.4=
541 1.81935C5.74449 1.75927 6.03491 1.73926 6.3253 1.73926H12.3934C12.6838 =
1.73926 12.9842 1.75927 13.2746 1.81935C13.555 1.87943 13.8354 1.96956 14.1=
158 2.07971C14.3861 2.19987 14.6465 2.33006 14.8868 2.50029C15.1371 2.67052=
 15.3574 2.85076 15.5677 3.06104C15.778 3.27132 15.9582 3.50163 16.1284 3.7=
5197C16.2887 4.0023 16.4288 4.26265 16.539 4.53302C16.6592 4.80338 16.7393 =
5.09378 16.7994 5.38417C16.8558 5.65722 16.8858 5.93024 16.8892 6.21161C16.=
8894 6.22948 16.8895 6.24739 16.8895 6.26532H15.1271C15.1271 6.08508 15.107=
1 5.90486 15.067 5.72462C15.037 5.55439 14.9869 5.38415 14.9168 5.21392C14.=
8467 5.04369 14.7566 4.88347 14.6665 4.73327C14.5664 4.58307 14.4462 4.4528=
9 14.326 4.32271C14.1959 4.19254 14.0557 4.08239 13.9055 3.98226C13.7553 3.=
88212 13.6051 3.79202 13.4348 3.72193C13.2746 3.65184 13.1044 3.60174 12.92=
42 3.5717C12.7539 3.53165 12.5737 3.51163 12.3934 3.51163H6.3253C6.14506 3.=
51163 5.97483 3.53165 5.79459 3.5717C5.61434 3.60174 5.44411 3.65184 5.2838=
9 3.72193C5.11366 3.79202 4.96346 3.88212 4.81326 3.98226C4.66306 4.08239 4=
.52286 4.19254 4.4027 4.32271C4.27253 4.45289 4.16238 4.58307 4.06225 4.733=
27C3.96211 4.88347 3.87198 5.04369 3.80189 5.21392C3.74181 5.38415 3.68173 =
5.55439 3.65169 5.72462C3.61164 5.90486 3.60164 6.08508 3.60164 6.26532V12.=
3936C3.60164 12.5638 3.61164 12.744 3.65169 12.9243Z" fill=3D"currentColor"=
></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M9.66972 21.=
6772C9.39936 21.567 9.13902 21.4268 8.8987 21.2566C8.64836 21.0964 8.42804 =
20.9061 8.21776 20.6959C8.00748 20.4856 7.81723 20.2553 7.65701 20.015C7.49=
68 19.7646 7.3566 19.5043 7.24646 19.2239C7.12629 18.9535 7.04621 18.6731 6=
.98613 18.3727C6.92605 18.0823 6.89601 17.792 6.89601 17.4915V11.3733C6.896=
01 11.0729 6.92605 10.7825 6.98613 10.4922C7.04621 10.1918 7.12629 9.91137 =
7.24646 9.64101C7.3566 9.36063 7.4968 9.10028 7.65701 8.85996C7.81723 8.609=
62 8.00748 8.37931 8.21776 8.16903C8.42804 7.95875 8.64836 7.76849 8.8987 7=
.60828C9.13902 7.43805 9.39936 7.29785 9.66972 7.1877C9.94009 7.07755 10.22=
05 6.98745 10.5108 6.92737C10.8012 6.86729 11.0916 6.83725 11.392 6.83725H1=
7.4602C17.7506 6.83725 18.041 6.86729 18.3313 6.92737C18.6217 6.98745 18.90=
21 7.07755 19.1725 7.1877C19.4529 7.29785 19.7032 7.43805 19.9535 7.60828C2=
0.1938 7.76849 20.4242 7.95875 20.6345 8.16903C20.8447 8.37931 21.025 8.609=
62 21.1952 8.85996C21.3554 9.10028 21.4956 9.36063 21.6058 9.64101C21.7159 =
9.91137 21.806 10.1918 21.8661 10.4922C21.9162 10.7825 21.9462 11.0729 21.9=
462 11.3733V17.4915C21.9462 17.792 21.9162 18.0823 21.8661 18.3727C21.806 1=
8.6731 21.7159 18.9535 21.6058 19.2239C21.4956 19.5043 21.3554 19.7646 21.1=
952 20.015C21.025 20.2553 20.8447 20.4856 20.6345 20.6959C20.4242 20.9061 2=
0.1938 21.0964 19.9535 21.2566C19.7032 21.4268 19.4529 21.567 19.1725 21.67=
72C18.9021 21.7973 18.6217 21.8774 18.3313 21.9375C18.041 21.9976 17.7506 2=
2.0276 17.4602 22.0276H11.392C11.0916 22.0276 10.8012 21.9976 10.5108 21.93=
75C10.2205 21.8774 9.94009 21.7973 9.66972 21.6772ZM10.8613 8.6697C11.0316 =
8.63966 11.2118 8.61965 11.392 8.61965H17.4602C17.6404 8.61965 17.8107 8.63=
966 17.9909 8.6697C18.1611 8.70975 18.3314 8.75983 18.5016 8.82992C18.6618 =
8.90001 18.822 8.98012 18.9722 9.08026C19.1224 9.18039 19.2626 9.30055 19.3=
828 9.42071C19.513 9.55088 19.6231 9.69109 19.7232 9.84129C19.8234 9.99149 =
19.9035 10.1517 19.9736 10.3219C20.0437 10.4821 20.0937 10.6624 20.1338 10.=
8326C20.1638 11.0129 20.1838 11.1931 20.1838 11.3733V17.4915C20.1838 17.671=
8 20.1638 17.852 20.1338 18.0323C20.0937 18.2125 20.0437 18.3828 19.9736 18=
.543C19.9035 18.7132 19.8234 18.8734 19.7232 19.0236C19.6231 19.1738 19.513=
 19.314 19.3828 19.4342C19.2626 19.5643 19.1224 19.6845 18.9722 19.7846C18.=
822 19.8848 18.6618 19.9649 18.5016 20.035C18.3314 20.1051 18.1611 20.1551 =
17.9909 20.1952C17.8107 20.2252 17.6404 20.2452 17.4602 20.2452H11.392C11.2=
118 20.2452 11.0316 20.2252 10.8613 20.1952C10.6811 20.1551 10.5108 20.1051=
 10.3506 20.035C10.1804 19.9649 10.0202 19.8848 9.87 19.7846C9.72982 19.684=
5 9.58962 19.5643 9.45945 19.4342C9.33929 19.314 9.21913 19.1738 9.119 19.0=
236C9.01886 18.8734 8.93875 18.7132 8.86866 18.543C8.79857 18.3828 8.74847 =
18.2125 8.71843 18.0323C8.67838 17.852 8.65836 17.6718 8.65836 17.4915V11.3=
733C8.65836 11.1931 8.67838 11.0129 8.71843 10.8326C8.74847 10.6624 8.79857=
 10.4821 8.86866 10.3219C8.93875 10.1517 9.01886 9.99149 9.119 9.84129C9.21=
913 9.69109 9.33929 9.55088 9.45945 9.42071C9.58962 9.30055 9.72982 9.18039=
 9.87 9.08026C10.0202 8.98012 10.1804 8.90001 10.3506 8.82992C10.5108 8.759=
83 10.6811 8.70975 10.8613 8.6697Z" fill=3D"currentColor"></path></svg></di=
v></div><span class=3D"code-info-button-text">Copy</span></div><div role=3D=
"button" class=3D"ds-button ds-button--secondary ds-button--borderless ds-b=
utton--rect ds-button--s _7db3914" tabindex=3D"0" style=3D"padding: 0px 4px=
; height: 28px; --button-text-color: var(--dsr-text-2); --button-font-size:=
 13px;"><div class=3D"ds-button__icon"><div class=3D"ds-icon" style=3D"font=
-size: 16px; width: 16px; height: 16px;"><svg width=3D"24" height=3D"24" vi=
ewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 2.55a.97.97 0 0 1 .9=
82.956v13.04a.97.97 0 0 1-.982.957.97.97 0 0 1-.982-.956V3.507A.97.97 0 0 1=
 12 2.55z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-ru=
le=3D"evenodd" d=3D"M19.418 9.808c.382.375.37.971-.027 1.332l-6.7 6.085a1.0=
4 1.04 0 0 1-1.41-.025.905.905 0 0 1 .027-1.332l6.7-6.085a1.04 1.04 0 0 1 1=
.41.025z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-rul=
e=3D"evenodd" d=3D"M4.582 9.808a1.04 1.04 0 0 1 1.41-.025l6.7 6.085c.397.36=
1.409.957.027 1.332a1.04 1.04 0 0 1-1.41.025l-6.7-6.085a.905.905 0 0 1-.027=
-1.332z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M3.068 16.46a.97.97 0 0 1 .983.956v1.739c0 .432.36.782.80=
3.782h14.291c.445 0 .804-.35.804-.782v-1.739a.97.97 0 0 1 .983-.956.97.97 0=
 0 1 .982.956v1.739c0 1.488-1.24 2.695-2.769 2.695H4.855c-1.53 0-2.77-1.207=
-2.77-2.695v-1.739a.97.97 0 0 1 .983-.956z" fill=3D"currentColor"></path></=
svg></div></div><span class=3D"code-info-button-text">Download</span></div>=
</div></div></div></div></div><pre>pip <span class=3D"token function">insta=
ll</span> opencv-python numpy torch</pre></div></li></ol><h3>Customization =
Options:</h3><ol start=3D"1"><li><p class=3D"ds-markdown-paragraph"><strong=
>For different image sizes</strong>:</p><div class=3D"md-code-block md-code=
-block-light"><div class=3D"md-code-block-banner-wrap"><div class=3D"md-cod=
e-block-banner md-code-block-banner-lite"><div class=3D"_121d384"><div clas=
s=3D"d2a24f03"><span class=3D"d813de27">python</span></div><div class=3D"d2=
a24f03"><div class=3D"efa13877"><div role=3D"button" class=3D"ds-button ds-=
button--secondary ds-button--borderless ds-button--rect ds-button--m _7db39=
14" tabindex=3D"0" style=3D"margin-right: 8px; font-size: 13px; height: 28p=
x; padding: 0px 4px; --button-text-color: var(--dsr-text-2);"><div class=3D=
"ds-button__icon"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 1=
6px; height: 16px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" f=
ill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M3.65169 12.92=
43C3.68173 13.1045 3.74181 13.2748 3.80189 13.445C3.87198 13.6052 3.96211 1=
3.7654 4.06225 13.9156C4.16238 14.0658 4.27253 14.206 4.4027 14.3362C4.5228=
6 14.4663 4.66306 14.5765 4.81326 14.6766C4.96346 14.7768 5.11366 14.8569 5=
.28389 14.927C5.44411 14.9971 5.61434 15.0571 5.79459 15.0872C5.97483 15.12=
72 6.14506 15.1373 6.3253 15.1373V16.9196C6.30739 16.9196 6.28949 16.9195 6=
.27159 16.9193C5.9991 16.9158 5.72659 16.8859 5.4541 16.8295C5.16371 16.769=
4 4.88334 16.6893 4.61298 16.5692C4.3326 16.459 4.08226 16.3188 3.83193 16.=
1586C3.59161 15.9884 3.3613 15.7981 3.15102 15.5878C2.94074 15.3776 2.7605 =
15.1473 2.59027 14.9069C2.43006 14.6566 2.28986 14.3962 2.17972 14.1259C2.0=
6957 13.8455 1.97944 13.5651 1.91936 13.2747C1.86929 12.9843 1.83926 12.684=
 1.83926 12.3936V6.26532C1.83926 5.96492 1.86929 5.67456 1.91936 5.38417C1.=
97944 5.09378 2.06957 4.80338 2.17972 4.53302C2.28986 4.26265 2.43006 4.002=
3 2.59027 3.75197C2.7605 3.50163 2.94074 3.27132 3.15102 3.06104C3.3613 2.8=
5076 3.59161 2.67052 3.83193 2.50029C4.08226 2.33006 4.3326 2.19987 4.61298=
 2.07971C4.88334 1.96956 5.16371 1.87943 5.4541 1.81935C5.74449 1.75927 6.0=
3491 1.73926 6.3253 1.73926H12.3934C12.6838 1.73926 12.9842 1.75927 13.2746=
 1.81935C13.555 1.87943 13.8354 1.96956 14.1158 2.07971C14.3861 2.19987 14.=
6465 2.33006 14.8868 2.50029C15.1371 2.67052 15.3574 2.85076 15.5677 3.0610=
4C15.778 3.27132 15.9582 3.50163 16.1284 3.75197C16.2887 4.0023 16.4288 4.2=
6265 16.539 4.53302C16.6592 4.80338 16.7393 5.09378 16.7994 5.38417C16.8558=
 5.65722 16.8858 5.93024 16.8892 6.21161C16.8894 6.22948 16.8895 6.24739 16=
.8895 6.26532H15.1271C15.1271 6.08508 15.1071 5.90486 15.067 5.72462C15.037=
 5.55439 14.9869 5.38415 14.9168 5.21392C14.8467 5.04369 14.7566 4.88347 14=
.6665 4.73327C14.5664 4.58307 14.4462 4.45289 14.326 4.32271C14.1959 4.1925=
4 14.0557 4.08239 13.9055 3.98226C13.7553 3.88212 13.6051 3.79202 13.4348 3=
.72193C13.2746 3.65184 13.1044 3.60174 12.9242 3.5717C12.7539 3.53165 12.57=
37 3.51163 12.3934 3.51163H6.3253C6.14506 3.51163 5.97483 3.53165 5.79459 3=
.5717C5.61434 3.60174 5.44411 3.65184 5.28389 3.72193C5.11366 3.79202 4.963=
46 3.88212 4.81326 3.98226C4.66306 4.08239 4.52286 4.19254 4.4027 4.32271C4=
.27253 4.45289 4.16238 4.58307 4.06225 4.73327C3.96211 4.88347 3.87198 5.04=
369 3.80189 5.21392C3.74181 5.38415 3.68173 5.55439 3.65169 5.72462C3.61164=
 5.90486 3.60164 6.08508 3.60164 6.26532V12.3936C3.60164 12.5638 3.61164 12=
.744 3.65169 12.9243Z" fill=3D"currentColor"></path><path fill-rule=3D"even=
odd" clip-rule=3D"evenodd" d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.=
4268 8.8987 21.2566C8.64836 21.0964 8.42804 20.9061 8.21776 20.6959C8.00748=
 20.4856 7.81723 20.2553 7.65701 20.015C7.4968 19.7646 7.3566 19.5043 7.246=
46 19.2239C7.12629 18.9535 7.04621 18.6731 6.98613 18.3727C6.92605 18.0823 =
6.89601 17.792 6.89601 17.4915V11.3733C6.89601 11.0729 6.92605 10.7825 6.98=
613 10.4922C7.04621 10.1918 7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 =
7.4968 9.10028 7.65701 8.85996C7.81723 8.60962 8.00748 8.37931 8.21776 8.16=
903C8.42804 7.95875 8.64836 7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 =
7.29785 9.66972 7.1877C9.94009 7.07755 10.2205 6.98745 10.5108 6.92737C10.8=
012 6.86729 11.0916 6.83725 11.392 6.83725H17.4602C17.7506 6.83725 18.041 6=
.86729 18.3313 6.92737C18.6217 6.98745 18.9021 7.07755 19.1725 7.1877C19.45=
29 7.29785 19.7032 7.43805 19.9535 7.60828C20.1938 7.76849 20.4242 7.95875 =
20.6345 8.16903C20.8447 8.37931 21.025 8.60962 21.1952 8.85996C21.3554 9.10=
028 21.4956 9.36063 21.6058 9.64101C21.7159 9.91137 21.806 10.1918 21.8661 =
10.4922C21.9162 10.7825 21.9462 11.0729 21.9462 11.3733V17.4915C21.9462 17.=
792 21.9162 18.0823 21.8661 18.3727C21.806 18.6731 21.7159 18.9535 21.6058 =
19.2239C21.4956 19.5043 21.3554 19.7646 21.1952 20.015C21.025 20.2553 20.84=
47 20.4856 20.6345 20.6959C20.4242 20.9061 20.1938 21.0964 19.9535 21.2566C=
19.7032 21.4268 19.4529 21.567 19.1725 21.6772C18.9021 21.7973 18.6217 21.8=
774 18.3313 21.9375C18.041 21.9976 17.7506 22.0276 17.4602 22.0276H11.392C1=
1.0916 22.0276 10.8012 21.9976 10.5108 21.9375C10.2205 21.8774 9.94009 21.7=
973 9.66972 21.6772ZM10.8613 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 =
8.61965H17.4602C17.6404 8.61965 17.8107 8.63966 17.9909 8.6697C18.1611 8.70=
975 18.3314 8.75983 18.5016 8.82992C18.6618 8.90001 18.822 8.98012 18.9722 =
9.08026C19.1224 9.18039 19.2626 9.30055 19.3828 9.42071C19.513 9.55088 19.6=
231 9.69109 19.7232 9.84129C19.8234 9.99149 19.9035 10.1517 19.9736 10.3219=
C20.0437 10.4821 20.0937 10.6624 20.1338 10.8326C20.1638 11.0129 20.1838 11=
.1931 20.1838 11.3733V17.4915C20.1838 17.6718 20.1638 17.852 20.1338 18.032=
3C20.0937 18.2125 20.0437 18.3828 19.9736 18.543C19.9035 18.7132 19.8234 18=
.8734 19.7232 19.0236C19.6231 19.1738 19.513 19.314 19.3828 19.4342C19.2626=
 19.5643 19.1224 19.6845 18.9722 19.7846C18.822 19.8848 18.6618 19.9649 18.=
5016 20.035C18.3314 20.1051 18.1611 20.1551 17.9909 20.1952C17.8107 20.2252=
 17.6404 20.2452 17.4602 20.2452H11.392C11.2118 20.2452 11.0316 20.2252 10.=
8613 20.1952C10.6811 20.1551 10.5108 20.1051 10.3506 20.035C10.1804 19.9649=
 10.0202 19.8848 9.87 19.7846C9.72982 19.6845 9.58962 19.5643 9.45945 19.43=
42C9.33929 19.314 9.21913 19.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.=
7132 8.86866 18.543C8.79857 18.3828 8.74847 18.2125 8.71843 18.0323C8.67838=
 17.852 8.65836 17.6718 8.65836 17.4915V11.3733C8.65836 11.1931 8.67838 11.=
0129 8.71843 10.8326C8.74847 10.6624 8.79857 10.4821 8.86866 10.3219C8.9387=
5 10.1517 9.01886 9.99149 9.119 9.84129C9.21913 9.69109 9.33929 9.55088 9.4=
5945 9.42071C9.58962 9.30055 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 1=
0.1804 8.90001 10.3506 8.82992C10.5108 8.75983 10.6811 8.70975 10.8613 8.66=
97Z" fill=3D"currentColor"></path></svg></div></div><span class=3D"code-inf=
o-button-text">Copy</span></div><div role=3D"button" class=3D"ds-button ds-=
button--secondary ds-button--borderless ds-button--rect ds-button--s _7db39=
14" tabindex=3D"0" style=3D"padding: 0px 4px; height: 28px; --button-text-c=
olor: var(--dsr-text-2); --button-font-size: 13px;"><div class=3D"ds-button=
__icon"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; heigh=
t: 16px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"non=
e" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" clip-ru=
le=3D"evenodd" d=3D"M12 2.55a.97.97 0 0 1 .982.956v13.04a.97.97 0 0 1-.982.=
957.97.97 0 0 1-.982-.956V3.507A.97.97 0 0 1 12 2.55z" fill=3D"currentColor=
"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M19.418 9.8=
08c.382.375.37.971-.027 1.332l-6.7 6.085a1.04 1.04 0 0 1-1.41-.025.905.905 =
0 0 1 .027-1.332l6.7-6.085a1.04 1.04 0 0 1 1.41.025z" fill=3D"currentColor"=
></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M4.582 9.808=
a1.04 1.04 0 0 1 1.41-.025l6.7 6.085c.397.361.409.957.027 1.332a1.04 1.04 0=
 0 1-1.41.025l-6.7-6.085a.905.905 0 0 1-.027-1.332z" fill=3D"currentColor">=
</path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3.068 16.46a=
.97.97 0 0 1 .983.956v1.739c0 .432.36.782.803.782h14.291c.445 0 .804-.35.80=
4-.782v-1.739a.97.97 0 0 1 .983-.956.97.97 0 0 1 .982.956v1.739c0 1.488-1.2=
4 2.695-2.769 2.695H4.855c-1.53 0-2.77-1.207-2.77-2.695v-1.739a.97.97 0 0 1=
 .983-.956z" fill=3D"currentColor"></path></svg></div></div><span class=3D"=
code-info-button-text">Download</span></div></div></div></div></div></div><=
pre><span class=3D"token comment"># Replace IMAGE_SIZE with your desired di=
mensions</span>
IMAGE_SIZE <span class=3D"token operator">=3D</span> <span class=3D"token p=
unctuation">(</span><span class=3D"token number">512</span><span class=3D"t=
oken punctuation">,</span> <span class=3D"token number">384</span><span cla=
ss=3D"token punctuation">)</span>  <span class=3D"token comment"># (width, =
height)</span></pre></div></li><li><p class=3D"ds-markdown-paragraph"><stro=
ng>To change transparency</strong>:</p><div class=3D"md-code-block md-code-=
block-light"><div class=3D"md-code-block-banner-wrap"><div class=3D"md-code=
-block-banner md-code-block-banner-lite"><div class=3D"_121d384"><div class=
=3D"d2a24f03"><span class=3D"d813de27">python</span></div><div class=3D"d2a=
24f03"><div class=3D"efa13877"><div role=3D"button" class=3D"ds-button ds-b=
utton--secondary ds-button--borderless ds-button--rect ds-button--m _7db391=
4" tabindex=3D"0" style=3D"margin-right: 8px; font-size: 13px; height: 28px=
; padding: 0px 4px; --button-text-color: var(--dsr-text-2);"><div class=3D"=
ds-button__icon"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16=
px; height: 16px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fi=
ll=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M3.65169 12.924=
3C3.68173 13.1045 3.74181 13.2748 3.80189 13.445C3.87198 13.6052 3.96211 13=
.7654 4.06225 13.9156C4.16238 14.0658 4.27253 14.206 4.4027 14.3362C4.52286=
 14.4663 4.66306 14.5765 4.81326 14.6766C4.96346 14.7768 5.11366 14.8569 5.=
28389 14.927C5.44411 14.9971 5.61434 15.0571 5.79459 15.0872C5.97483 15.127=
2 6.14506 15.1373 6.3253 15.1373V16.9196C6.30739 16.9196 6.28949 16.9195 6.=
27159 16.9193C5.9991 16.9158 5.72659 16.8859 5.4541 16.8295C5.16371 16.7694=
 4.88334 16.6893 4.61298 16.5692C4.3326 16.459 4.08226 16.3188 3.83193 16.1=
586C3.59161 15.9884 3.3613 15.7981 3.15102 15.5878C2.94074 15.3776 2.7605 1=
5.1473 2.59027 14.9069C2.43006 14.6566 2.28986 14.3962 2.17972 14.1259C2.06=
957 13.8455 1.97944 13.5651 1.91936 13.2747C1.86929 12.9843 1.83926 12.684 =
1.83926 12.3936V6.26532C1.83926 5.96492 1.86929 5.67456 1.91936 5.38417C1.9=
7944 5.09378 2.06957 4.80338 2.17972 4.53302C2.28986 4.26265 2.43006 4.0023=
 2.59027 3.75197C2.7605 3.50163 2.94074 3.27132 3.15102 3.06104C3.3613 2.85=
076 3.59161 2.67052 3.83193 2.50029C4.08226 2.33006 4.3326 2.19987 4.61298 =
2.07971C4.88334 1.96956 5.16371 1.87943 5.4541 1.81935C5.74449 1.75927 6.03=
491 1.73926 6.3253 1.73926H12.3934C12.6838 1.73926 12.9842 1.75927 13.2746 =
1.81935C13.555 1.87943 13.8354 1.96956 14.1158 2.07971C14.3861 2.19987 14.6=
465 2.33006 14.8868 2.50029C15.1371 2.67052 15.3574 2.85076 15.5677 3.06104=
C15.778 3.27132 15.9582 3.50163 16.1284 3.75197C16.2887 4.0023 16.4288 4.26=
265 16.539 4.53302C16.6592 4.80338 16.7393 5.09378 16.7994 5.38417C16.8558 =
5.65722 16.8858 5.93024 16.8892 6.21161C16.8894 6.22948 16.8895 6.24739 16.=
8895 6.26532H15.1271C15.1271 6.08508 15.1071 5.90486 15.067 5.72462C15.037 =
5.55439 14.9869 5.38415 14.9168 5.21392C14.8467 5.04369 14.7566 4.88347 14.=
6665 4.73327C14.5664 4.58307 14.4462 4.45289 14.326 4.32271C14.1959 4.19254=
 14.0557 4.08239 13.9055 3.98226C13.7553 3.88212 13.6051 3.79202 13.4348 3.=
72193C13.2746 3.65184 13.1044 3.60174 12.9242 3.5717C12.7539 3.53165 12.573=
7 3.51163 12.3934 3.51163H6.3253C6.14506 3.51163 5.97483 3.53165 5.79459 3.=
5717C5.61434 3.60174 5.44411 3.65184 5.28389 3.72193C5.11366 3.79202 4.9634=
6 3.88212 4.81326 3.98226C4.66306 4.08239 4.52286 4.19254 4.4027 4.32271C4.=
27253 4.45289 4.16238 4.58307 4.06225 4.73327C3.96211 4.88347 3.87198 5.043=
69 3.80189 5.21392C3.74181 5.38415 3.68173 5.55439 3.65169 5.72462C3.61164 =
5.90486 3.60164 6.08508 3.60164 6.26532V12.3936C3.60164 12.5638 3.61164 12.=
744 3.65169 12.9243Z" fill=3D"currentColor"></path><path fill-rule=3D"eveno=
dd" clip-rule=3D"evenodd" d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.4=
268 8.8987 21.2566C8.64836 21.0964 8.42804 20.9061 8.21776 20.6959C8.00748 =
20.4856 7.81723 20.2553 7.65701 20.015C7.4968 19.7646 7.3566 19.5043 7.2464=
6 19.2239C7.12629 18.9535 7.04621 18.6731 6.98613 18.3727C6.92605 18.0823 6=
.89601 17.792 6.89601 17.4915V11.3733C6.89601 11.0729 6.92605 10.7825 6.986=
13 10.4922C7.04621 10.1918 7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 7=
.4968 9.10028 7.65701 8.85996C7.81723 8.60962 8.00748 8.37931 8.21776 8.169=
03C8.42804 7.95875 8.64836 7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 7=
.29785 9.66972 7.1877C9.94009 7.07755 10.2205 6.98745 10.5108 6.92737C10.80=
12 6.86729 11.0916 6.83725 11.392 6.83725H17.4602C17.7506 6.83725 18.041 6.=
86729 18.3313 6.92737C18.6217 6.98745 18.9021 7.07755 19.1725 7.1877C19.452=
9 7.29785 19.7032 7.43805 19.9535 7.60828C20.1938 7.76849 20.4242 7.95875 2=
0.6345 8.16903C20.8447 8.37931 21.025 8.60962 21.1952 8.85996C21.3554 9.100=
28 21.4956 9.36063 21.6058 9.64101C21.7159 9.91137 21.806 10.1918 21.8661 1=
0.4922C21.9162 10.7825 21.9462 11.0729 21.9462 11.3733V17.4915C21.9462 17.7=
92 21.9162 18.0823 21.8661 18.3727C21.806 18.6731 21.7159 18.9535 21.6058 1=
9.2239C21.4956 19.5043 21.3554 19.7646 21.1952 20.015C21.025 20.2553 20.844=
7 20.4856 20.6345 20.6959C20.4242 20.9061 20.1938 21.0964 19.9535 21.2566C1=
9.7032 21.4268 19.4529 21.567 19.1725 21.6772C18.9021 21.7973 18.6217 21.87=
74 18.3313 21.9375C18.041 21.9976 17.7506 22.0276 17.4602 22.0276H11.392C11=
.0916 22.0276 10.8012 21.9976 10.5108 21.9375C10.2205 21.8774 9.94009 21.79=
73 9.66972 21.6772ZM10.8613 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 8=
.61965H17.4602C17.6404 8.61965 17.8107 8.63966 17.9909 8.6697C18.1611 8.709=
75 18.3314 8.75983 18.5016 8.82992C18.6618 8.90001 18.822 8.98012 18.9722 9=
.08026C19.1224 9.18039 19.2626 9.30055 19.3828 9.42071C19.513 9.55088 19.62=
31 9.69109 19.7232 9.84129C19.8234 9.99149 19.9035 10.1517 19.9736 10.3219C=
20.0437 10.4821 20.0937 10.6624 20.1338 10.8326C20.1638 11.0129 20.1838 11.=
1931 20.1838 11.3733V17.4915C20.1838 17.6718 20.1638 17.852 20.1338 18.0323=
C20.0937 18.2125 20.0437 18.3828 19.9736 18.543C19.9035 18.7132 19.8234 18.=
8734 19.7232 19.0236C19.6231 19.1738 19.513 19.314 19.3828 19.4342C19.2626 =
19.5643 19.1224 19.6845 18.9722 19.7846C18.822 19.8848 18.6618 19.9649 18.5=
016 20.035C18.3314 20.1051 18.1611 20.1551 17.9909 20.1952C17.8107 20.2252 =
17.6404 20.2452 17.4602 20.2452H11.392C11.2118 20.2452 11.0316 20.2252 10.8=
613 20.1952C10.6811 20.1551 10.5108 20.1051 10.3506 20.035C10.1804 19.9649 =
10.0202 19.8848 9.87 19.7846C9.72982 19.6845 9.58962 19.5643 9.45945 19.434=
2C9.33929 19.314 9.21913 19.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.7=
132 8.86866 18.543C8.79857 18.3828 8.74847 18.2125 8.71843 18.0323C8.67838 =
17.852 8.65836 17.6718 8.65836 17.4915V11.3733C8.65836 11.1931 8.67838 11.0=
129 8.71843 10.8326C8.74847 10.6624 8.79857 10.4821 8.86866 10.3219C8.93875=
 10.1517 9.01886 9.99149 9.119 9.84129C9.21913 9.69109 9.33929 9.55088 9.45=
945 9.42071C9.58962 9.30055 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 10=
.1804 8.90001 10.3506 8.82992C10.5108 8.75983 10.6811 8.70975 10.8613 8.669=
7Z" fill=3D"currentColor"></path></svg></div></div><span class=3D"code-info=
-button-text">Copy</span></div><div role=3D"button" class=3D"ds-button ds-b=
utton--secondary ds-button--borderless ds-button--rect ds-button--s _7db391=
4" tabindex=3D"0" style=3D"padding: 0px 4px; height: 28px; --button-text-co=
lor: var(--dsr-text-2); --button-font-size: 13px;"><div class=3D"ds-button_=
_icon"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height=
: 16px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none=
" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" clip-rul=
e=3D"evenodd" d=3D"M12 2.55a.97.97 0 0 1 .982.956v13.04a.97.97 0 0 1-.982.9=
57.97.97 0 0 1-.982-.956V3.507A.97.97 0 0 1 12 2.55z" fill=3D"currentColor"=
></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M19.418 9.80=
8c.382.375.37.971-.027 1.332l-6.7 6.085a1.04 1.04 0 0 1-1.41-.025.905.905 0=
 0 1 .027-1.332l6.7-6.085a1.04 1.04 0 0 1 1.41.025z" fill=3D"currentColor">=
</path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M4.582 9.808a=
1.04 1.04 0 0 1 1.41-.025l6.7 6.085c.397.361.409.957.027 1.332a1.04 1.04 0 =
0 1-1.41.025l-6.7-6.085a.905.905 0 0 1-.027-1.332z" fill=3D"currentColor"><=
/path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3.068 16.46a.=
97.97 0 0 1 .983.956v1.739c0 .432.36.782.803.782h14.291c.445 0 .804-.35.804=
-.782v-1.739a.97.97 0 0 1 .983-.956.97.97 0 0 1 .982.956v1.739c0 1.488-1.24=
 2.695-2.769 2.695H4.855c-1.53 0-2.77-1.207-2.77-2.695v-1.739a.97.97 0 0 1 =
.983-.956z" fill=3D"currentColor"></path></svg></div></div><span class=3D"c=
ode-info-button-text">Download</span></div></div></div></div></div></div><p=
re>alpha <span class=3D"token operator">=3D</span> <span class=3D"token num=
ber">0.7</span>  <span class=3D"token comment"># Increase for more opaque m=
asks (0-1)</span></pre></div></li><li><p class=3D"ds-markdown-paragraph"><s=
trong>For batch processing</strong> (no display):</p><div class=3D"md-code-=
block md-code-block-light"><div class=3D"md-code-block-banner-wrap"><div cl=
ass=3D"md-code-block-banner md-code-block-banner-lite"><div class=3D"_121d3=
84"><div class=3D"d2a24f03"><span class=3D"d813de27">python</span></div><di=
v class=3D"d2a24f03"><div class=3D"efa13877"><div role=3D"button" class=3D"=
ds-button ds-button--secondary ds-button--borderless ds-button--rect ds-but=
ton--m _7db3914" tabindex=3D"0" style=3D"margin-right: 8px; font-size: 13px=
; height: 28px; padding: 0px 4px; --button-text-color: var(--dsr-text-2);">=
<div class=3D"ds-button__icon"><div class=3D"ds-icon" style=3D"font-size: 1=
6px; width: 16px; height: 16px;"><svg width=3D"24" height=3D"24" viewBox=3D=
"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M=
3.65169 12.9243C3.68173 13.1045 3.74181 13.2748 3.80189 13.445C3.87198 13.6=
052 3.96211 13.7654 4.06225 13.9156C4.16238 14.0658 4.27253 14.206 4.4027 1=
4.3362C4.52286 14.4663 4.66306 14.5765 4.81326 14.6766C4.96346 14.7768 5.11=
366 14.8569 5.28389 14.927C5.44411 14.9971 5.61434 15.0571 5.79459 15.0872C=
5.97483 15.1272 6.14506 15.1373 6.3253 15.1373V16.9196C6.30739 16.9196 6.28=
949 16.9195 6.27159 16.9193C5.9991 16.9158 5.72659 16.8859 5.4541 16.8295C5=
.16371 16.7694 4.88334 16.6893 4.61298 16.5692C4.3326 16.459 4.08226 16.318=
8 3.83193 16.1586C3.59161 15.9884 3.3613 15.7981 3.15102 15.5878C2.94074 15=
.3776 2.7605 15.1473 2.59027 14.9069C2.43006 14.6566 2.28986 14.3962 2.1797=
2 14.1259C2.06957 13.8455 1.97944 13.5651 1.91936 13.2747C1.86929 12.9843 1=
.83926 12.684 1.83926 12.3936V6.26532C1.83926 5.96492 1.86929 5.67456 1.919=
36 5.38417C1.97944 5.09378 2.06957 4.80338 2.17972 4.53302C2.28986 4.26265 =
2.43006 4.0023 2.59027 3.75197C2.7605 3.50163 2.94074 3.27132 3.15102 3.061=
04C3.3613 2.85076 3.59161 2.67052 3.83193 2.50029C4.08226 2.33006 4.3326 2.=
19987 4.61298 2.07971C4.88334 1.96956 5.16371 1.87943 5.4541 1.81935C5.7444=
9 1.75927 6.03491 1.73926 6.3253 1.73926H12.3934C12.6838 1.73926 12.9842 1.=
75927 13.2746 1.81935C13.555 1.87943 13.8354 1.96956 14.1158 2.07971C14.386=
1 2.19987 14.6465 2.33006 14.8868 2.50029C15.1371 2.67052 15.3574 2.85076 1=
5.5677 3.06104C15.778 3.27132 15.9582 3.50163 16.1284 3.75197C16.2887 4.002=
3 16.4288 4.26265 16.539 4.53302C16.6592 4.80338 16.7393 5.09378 16.7994 5.=
38417C16.8558 5.65722 16.8858 5.93024 16.8892 6.21161C16.8894 6.22948 16.88=
95 6.24739 16.8895 6.26532H15.1271C15.1271 6.08508 15.1071 5.90486 15.067 5=
.72462C15.037 5.55439 14.9869 5.38415 14.9168 5.21392C14.8467 5.04369 14.75=
66 4.88347 14.6665 4.73327C14.5664 4.58307 14.4462 4.45289 14.326 4.32271C1=
4.1959 4.19254 14.0557 4.08239 13.9055 3.98226C13.7553 3.88212 13.6051 3.79=
202 13.4348 3.72193C13.2746 3.65184 13.1044 3.60174 12.9242 3.5717C12.7539 =
3.53165 12.5737 3.51163 12.3934 3.51163H6.3253C6.14506 3.51163 5.97483 3.53=
165 5.79459 3.5717C5.61434 3.60174 5.44411 3.65184 5.28389 3.72193C5.11366 =
3.79202 4.96346 3.88212 4.81326 3.98226C4.66306 4.08239 4.52286 4.19254 4.4=
027 4.32271C4.27253 4.45289 4.16238 4.58307 4.06225 4.73327C3.96211 4.88347=
 3.87198 5.04369 3.80189 5.21392C3.74181 5.38415 3.68173 5.55439 3.65169 5.=
72462C3.61164 5.90486 3.60164 6.08508 3.60164 6.26532V12.3936C3.60164 12.56=
38 3.61164 12.744 3.65169 12.9243Z" fill=3D"currentColor"></path><path fill=
-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M9.66972 21.6772C9.39936 21.56=
7 9.13902 21.4268 8.8987 21.2566C8.64836 21.0964 8.42804 20.9061 8.21776 20=
.6959C8.00748 20.4856 7.81723 20.2553 7.65701 20.015C7.4968 19.7646 7.3566 =
19.5043 7.24646 19.2239C7.12629 18.9535 7.04621 18.6731 6.98613 18.3727C6.9=
2605 18.0823 6.89601 17.792 6.89601 17.4915V11.3733C6.89601 11.0729 6.92605=
 10.7825 6.98613 10.4922C7.04621 10.1918 7.12629 9.91137 7.24646 9.64101C7.=
3566 9.36063 7.4968 9.10028 7.65701 8.85996C7.81723 8.60962 8.00748 8.37931=
 8.21776 8.16903C8.42804 7.95875 8.64836 7.76849 8.8987 7.60828C9.13902 7.4=
3805 9.39936 7.29785 9.66972 7.1877C9.94009 7.07755 10.2205 6.98745 10.5108=
 6.92737C10.8012 6.86729 11.0916 6.83725 11.392 6.83725H17.4602C17.7506 6.8=
3725 18.041 6.86729 18.3313 6.92737C18.6217 6.98745 18.9021 7.07755 19.1725=
 7.1877C19.4529 7.29785 19.7032 7.43805 19.9535 7.60828C20.1938 7.76849 20.=
4242 7.95875 20.6345 8.16903C20.8447 8.37931 21.025 8.60962 21.1952 8.85996=
C21.3554 9.10028 21.4956 9.36063 21.6058 9.64101C21.7159 9.91137 21.806 10.=
1918 21.8661 10.4922C21.9162 10.7825 21.9462 11.0729 21.9462 11.3733V17.491=
5C21.9462 17.792 21.9162 18.0823 21.8661 18.3727C21.806 18.6731 21.7159 18.=
9535 21.6058 19.2239C21.4956 19.5043 21.3554 19.7646 21.1952 20.015C21.025 =
20.2553 20.8447 20.4856 20.6345 20.6959C20.4242 20.9061 20.1938 21.0964 19.=
9535 21.2566C19.7032 21.4268 19.4529 21.567 19.1725 21.6772C18.9021 21.7973=
 18.6217 21.8774 18.3313 21.9375C18.041 21.9976 17.7506 22.0276 17.4602 22.=
0276H11.392C11.0916 22.0276 10.8012 21.9976 10.5108 21.9375C10.2205 21.8774=
 9.94009 21.7973 9.66972 21.6772ZM10.8613 8.6697C11.0316 8.63966 11.2118 8.=
61965 11.392 8.61965H17.4602C17.6404 8.61965 17.8107 8.63966 17.9909 8.6697=
C18.1611 8.70975 18.3314 8.75983 18.5016 8.82992C18.6618 8.90001 18.822 8.9=
8012 18.9722 9.08026C19.1224 9.18039 19.2626 9.30055 19.3828 9.42071C19.513=
 9.55088 19.6231 9.69109 19.7232 9.84129C19.8234 9.99149 19.9035 10.1517 19=
.9736 10.3219C20.0437 10.4821 20.0937 10.6624 20.1338 10.8326C20.1638 11.01=
29 20.1838 11.1931 20.1838 11.3733V17.4915C20.1838 17.6718 20.1638 17.852 2=
0.1338 18.0323C20.0937 18.2125 20.0437 18.3828 19.9736 18.543C19.9035 18.71=
32 19.8234 18.8734 19.7232 19.0236C19.6231 19.1738 19.513 19.314 19.3828 19=
.4342C19.2626 19.5643 19.1224 19.6845 18.9722 19.7846C18.822 19.8848 18.661=
8 19.9649 18.5016 20.035C18.3314 20.1051 18.1611 20.1551 17.9909 20.1952C17=
.8107 20.2252 17.6404 20.2452 17.4602 20.2452H11.392C11.2118 20.2452 11.031=
6 20.2252 10.8613 20.1952C10.6811 20.1551 10.5108 20.1051 10.3506 20.035C10=
.1804 19.9649 10.0202 19.8848 9.87 19.7846C9.72982 19.6845 9.58962 19.5643 =
9.45945 19.4342C9.33929 19.314 9.21913 19.1738 9.119 19.0236C9.01886 18.873=
4 8.93875 18.7132 8.86866 18.543C8.79857 18.3828 8.74847 18.2125 8.71843 18=
.0323C8.67838 17.852 8.65836 17.6718 8.65836 17.4915V11.3733C8.65836 11.193=
1 8.67838 11.0129 8.71843 10.8326C8.74847 10.6624 8.79857 10.4821 8.86866 1=
0.3219C8.93875 10.1517 9.01886 9.99149 9.119 9.84129C9.21913 9.69109 9.3392=
9 9.55088 9.45945 9.42071C9.58962 9.30055 9.72982 9.18039 9.87 9.08026C10.0=
202 8.98012 10.1804 8.90001 10.3506 8.82992C10.5108 8.75983 10.6811 8.70975=
 10.8613 8.6697Z" fill=3D"currentColor"></path></svg></div></div><span clas=
s=3D"code-info-button-text">Copy</span></div><div role=3D"button" class=3D"=
ds-button ds-button--secondary ds-button--borderless ds-button--rect ds-but=
ton--s _7db3914" tabindex=3D"0" style=3D"padding: 0px 4px; height: 28px; --=
button-text-color: var(--dsr-text-2); --button-font-size: 13px;"><div class=
=3D"ds-button__icon"><div class=3D"ds-icon" style=3D"font-size: 16px; width=
: 16px; height: 16px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24=
" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"eve=
nodd" clip-rule=3D"evenodd" d=3D"M12 2.55a.97.97 0 0 1 .982.956v13.04a.97.9=
7 0 0 1-.982.957.97.97 0 0 1-.982-.956V3.507A.97.97 0 0 1 12 2.55z" fill=3D=
"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M19.418 9.808c.382.375.37.971-.027 1.332l-6.7 6.085a1.04 1.04 0 0 1-1.4=
1-.025.905.905 0 0 1 .027-1.332l6.7-6.085a1.04 1.04 0 0 1 1.41.025z" fill=
=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M4.582 9.808a1.04 1.04 0 0 1 1.41-.025l6.7 6.085c.397.361.409.957.027 =
1.332a1.04 1.04 0 0 1-1.41.025l-6.7-6.085a.905.905 0 0 1-.027-1.332z" fill=
=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M3.068 16.46a.97.97 0 0 1 .983.956v1.739c0 .432.36.782.803.782h14.291c=
.445 0 .804-.35.804-.782v-1.739a.97.97 0 0 1 .983-.956.97.97 0 0 1 .982.956=
v1.739c0 1.488-1.24 2.695-2.769 2.695H4.855c-1.53 0-2.77-1.207-2.77-2.695v-=
1.739a.97.97 0 0 1 .983-.956z" fill=3D"currentColor"></path></svg></div></d=
iv><span class=3D"code-info-button-text">Download</span></div></div></div><=
/div></div></div><pre><span class=3D"token comment"># Remove display lines:=
</span>
<span class=3D"token comment"># cv2.imshow(...) and cv2.waitKey(...)</span>=
</pre></div></li><li><p class=3D"ds-markdown-paragraph"><strong>To process =
single image</strong>:</p><div class=3D"md-code-block md-code-block-light">=
<div class=3D"md-code-block-banner-wrap"><div class=3D"md-code-block-banner=
 md-code-block-banner-lite"><div class=3D"_121d384"><div class=3D"d2a24f03"=
><span class=3D"d813de27">python</span></div><div class=3D"d2a24f03"><div c=
lass=3D"efa13877"><div role=3D"button" class=3D"ds-button ds-button--second=
ary ds-button--borderless ds-button--rect ds-button--m _7db3914" tabindex=
=3D"0" style=3D"margin-right: 8px; font-size: 13px; height: 28px; padding: =
0px 4px; --button-text-color: var(--dsr-text-2);"><div class=3D"ds-button__=
icon"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height:=
 16px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none"=
 xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M3.65169 12.9243C3.68173 1=
3.1045 3.74181 13.2748 3.80189 13.445C3.87198 13.6052 3.96211 13.7654 4.062=
25 13.9156C4.16238 14.0658 4.27253 14.206 4.4027 14.3362C4.52286 14.4663 4.=
66306 14.5765 4.81326 14.6766C4.96346 14.7768 5.11366 14.8569 5.28389 14.92=
7C5.44411 14.9971 5.61434 15.0571 5.79459 15.0872C5.97483 15.1272 6.14506 1=
5.1373 6.3253 15.1373V16.9196C6.30739 16.9196 6.28949 16.9195 6.27159 16.91=
93C5.9991 16.9158 5.72659 16.8859 5.4541 16.8295C5.16371 16.7694 4.88334 16=
.6893 4.61298 16.5692C4.3326 16.459 4.08226 16.3188 3.83193 16.1586C3.59161=
 15.9884 3.3613 15.7981 3.15102 15.5878C2.94074 15.3776 2.7605 15.1473 2.59=
027 14.9069C2.43006 14.6566 2.28986 14.3962 2.17972 14.1259C2.06957 13.8455=
 1.97944 13.5651 1.91936 13.2747C1.86929 12.9843 1.83926 12.684 1.83926 12.=
3936V6.26532C1.83926 5.96492 1.86929 5.67456 1.91936 5.38417C1.97944 5.0937=
8 2.06957 4.80338 2.17972 4.53302C2.28986 4.26265 2.43006 4.0023 2.59027 3.=
75197C2.7605 3.50163 2.94074 3.27132 3.15102 3.06104C3.3613 2.85076 3.59161=
 2.67052 3.83193 2.50029C4.08226 2.33006 4.3326 2.19987 4.61298 2.07971C4.8=
8334 1.96956 5.16371 1.87943 5.4541 1.81935C5.74449 1.75927 6.03491 1.73926=
 6.3253 1.73926H12.3934C12.6838 1.73926 12.9842 1.75927 13.2746 1.81935C13.=
555 1.87943 13.8354 1.96956 14.1158 2.07971C14.3861 2.19987 14.6465 2.33006=
 14.8868 2.50029C15.1371 2.67052 15.3574 2.85076 15.5677 3.06104C15.778 3.2=
7132 15.9582 3.50163 16.1284 3.75197C16.2887 4.0023 16.4288 4.26265 16.539 =
4.53302C16.6592 4.80338 16.7393 5.09378 16.7994 5.38417C16.8558 5.65722 16.=
8858 5.93024 16.8892 6.21161C16.8894 6.22948 16.8895 6.24739 16.8895 6.2653=
2H15.1271C15.1271 6.08508 15.1071 5.90486 15.067 5.72462C15.037 5.55439 14.=
9869 5.38415 14.9168 5.21392C14.8467 5.04369 14.7566 4.88347 14.6665 4.7332=
7C14.5664 4.58307 14.4462 4.45289 14.326 4.32271C14.1959 4.19254 14.0557 4.=
08239 13.9055 3.98226C13.7553 3.88212 13.6051 3.79202 13.4348 3.72193C13.27=
46 3.65184 13.1044 3.60174 12.9242 3.5717C12.7539 3.53165 12.5737 3.51163 1=
2.3934 3.51163H6.3253C6.14506 3.51163 5.97483 3.53165 5.79459 3.5717C5.6143=
4 3.60174 5.44411 3.65184 5.28389 3.72193C5.11366 3.79202 4.96346 3.88212 4=
.81326 3.98226C4.66306 4.08239 4.52286 4.19254 4.4027 4.32271C4.27253 4.452=
89 4.16238 4.58307 4.06225 4.73327C3.96211 4.88347 3.87198 5.04369 3.80189 =
5.21392C3.74181 5.38415 3.68173 5.55439 3.65169 5.72462C3.61164 5.90486 3.6=
0164 6.08508 3.60164 6.26532V12.3936C3.60164 12.5638 3.61164 12.744 3.65169=
 12.9243Z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-ru=
le=3D"evenodd" d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.4268 8.8987 =
21.2566C8.64836 21.0964 8.42804 20.9061 8.21776 20.6959C8.00748 20.4856 7.8=
1723 20.2553 7.65701 20.015C7.4968 19.7646 7.3566 19.5043 7.24646 19.2239C7=
.12629 18.9535 7.04621 18.6731 6.98613 18.3727C6.92605 18.0823 6.89601 17.7=
92 6.89601 17.4915V11.3733C6.89601 11.0729 6.92605 10.7825 6.98613 10.4922C=
7.04621 10.1918 7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 7.4968 9.100=
28 7.65701 8.85996C7.81723 8.60962 8.00748 8.37931 8.21776 8.16903C8.42804 =
7.95875 8.64836 7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 7.29785 9.66=
972 7.1877C9.94009 7.07755 10.2205 6.98745 10.5108 6.92737C10.8012 6.86729 =
11.0916 6.83725 11.392 6.83725H17.4602C17.7506 6.83725 18.041 6.86729 18.33=
13 6.92737C18.6217 6.98745 18.9021 7.07755 19.1725 7.1877C19.4529 7.29785 1=
9.7032 7.43805 19.9535 7.60828C20.1938 7.76849 20.4242 7.95875 20.6345 8.16=
903C20.8447 8.37931 21.025 8.60962 21.1952 8.85996C21.3554 9.10028 21.4956 =
9.36063 21.6058 9.64101C21.7159 9.91137 21.806 10.1918 21.8661 10.4922C21.9=
162 10.7825 21.9462 11.0729 21.9462 11.3733V17.4915C21.9462 17.792 21.9162 =
18.0823 21.8661 18.3727C21.806 18.6731 21.7159 18.9535 21.6058 19.2239C21.4=
956 19.5043 21.3554 19.7646 21.1952 20.015C21.025 20.2553 20.8447 20.4856 2=
0.6345 20.6959C20.4242 20.9061 20.1938 21.0964 19.9535 21.2566C19.7032 21.4=
268 19.4529 21.567 19.1725 21.6772C18.9021 21.7973 18.6217 21.8774 18.3313 =
21.9375C18.041 21.9976 17.7506 22.0276 17.4602 22.0276H11.392C11.0916 22.02=
76 10.8012 21.9976 10.5108 21.9375C10.2205 21.8774 9.94009 21.7973 9.66972 =
21.6772ZM10.8613 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 8.61965H17.4=
602C17.6404 8.61965 17.8107 8.63966 17.9909 8.6697C18.1611 8.70975 18.3314 =
8.75983 18.5016 8.82992C18.6618 8.90001 18.822 8.98012 18.9722 9.08026C19.1=
224 9.18039 19.2626 9.30055 19.3828 9.42071C19.513 9.55088 19.6231 9.69109 =
19.7232 9.84129C19.8234 9.99149 19.9035 10.1517 19.9736 10.3219C20.0437 10.=
4821 20.0937 10.6624 20.1338 10.8326C20.1638 11.0129 20.1838 11.1931 20.183=
8 11.3733V17.4915C20.1838 17.6718 20.1638 17.852 20.1338 18.0323C20.0937 18=
.2125 20.0437 18.3828 19.9736 18.543C19.9035 18.7132 19.8234 18.8734 19.723=
2 19.0236C19.6231 19.1738 19.513 19.314 19.3828 19.4342C19.2626 19.5643 19.=
1224 19.6845 18.9722 19.7846C18.822 19.8848 18.6618 19.9649 18.5016 20.035C=
18.3314 20.1051 18.1611 20.1551 17.9909 20.1952C17.8107 20.2252 17.6404 20.=
2452 17.4602 20.2452H11.392C11.2118 20.2452 11.0316 20.2252 10.8613 20.1952=
C10.6811 20.1551 10.5108 20.1051 10.3506 20.035C10.1804 19.9649 10.0202 19.=
8848 9.87 19.7846C9.72982 19.6845 9.58962 19.5643 9.45945 19.4342C9.33929 1=
9.314 9.21913 19.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.7132 8.86866=
 18.543C8.79857 18.3828 8.74847 18.2125 8.71843 18.0323C8.67838 17.852 8.65=
836 17.6718 8.65836 17.4915V11.3733C8.65836 11.1931 8.67838 11.0129 8.71843=
 10.8326C8.74847 10.6624 8.79857 10.4821 8.86866 10.3219C8.93875 10.1517 9.=
01886 9.99149 9.119 9.84129C9.21913 9.69109 9.33929 9.55088 9.45945 9.42071=
C9.58962 9.30055 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 10.1804 8.900=
01 10.3506 8.82992C10.5108 8.75983 10.6811 8.70975 10.8613 8.6697Z" fill=3D=
"currentColor"></path></svg></div></div><span class=3D"code-info-button-tex=
t">Copy</span></div><div role=3D"button" class=3D"ds-button ds-button--seco=
ndary ds-button--borderless ds-button--rect ds-button--s _7db3914" tabindex=
=3D"0" style=3D"padding: 0px 4px; height: 28px; --button-text-color: var(--=
dsr-text-2); --button-font-size: 13px;"><div class=3D"ds-button__icon"><div=
 class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><s=
vg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"=
http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"evenod=
d" d=3D"M12 2.55a.97.97 0 0 1 .982.956v13.04a.97.97 0 0 1-.982.957.97.97 0 =
0 1-.982-.956V3.507A.97.97 0 0 1 12 2.55z" fill=3D"currentColor"></path><pa=
th fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M19.418 9.808c.382.375.=
37.971-.027 1.332l-6.7 6.085a1.04 1.04 0 0 1-1.41-.025.905.905 0 0 1 .027-1=
.332l6.7-6.085a1.04 1.04 0 0 1 1.41.025z" fill=3D"currentColor"></path><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M4.582 9.808a1.04 1.04 0=
 0 1 1.41-.025l6.7 6.085c.397.361.409.957.027 1.332a1.04 1.04 0 0 1-1.41.02=
5l-6.7-6.085a.905.905 0 0 1-.027-1.332z" fill=3D"currentColor"></path><path=
 fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3.068 16.46a.97.97 0 0 1=
 .983.956v1.739c0 .432.36.782.803.782h14.291c.445 0 .804-.35.804-.782v-1.73=
9a.97.97 0 0 1 .983-.956.97.97 0 0 1 .982.956v1.739c0 1.488-1.24 2.695-2.76=
9 2.695H4.855c-1.53 0-2.77-1.207-2.77-2.695v-1.739a.97.97 0 0 1 .983-.956z"=
 fill=3D"currentColor"></path></svg></div></div><span class=3D"code-info-bu=
tton-text">Download</span></div></div></div></div></div></div><pre><span cl=
ass=3D"token comment"># Replace the input loop with:</span>
image_path <span class=3D"token operator">=3D</span> <span class=3D"token s=
tring">"path/to/your/single_image.jpg"</span></pre></div></li></ol><p class=
=3D"ds-markdown-paragraph">This script provides a complete pipeline to visu=
alize how your model segments weeds in images, with clear visual outputs sh=
owing both the raw segmentation masks and transparent overlays on the origi=
nal images.</p></div><div class=3D"ds-flex" style=3D"margin-top: 12px; heig=
ht: 20px; margin-bottom: 20px; align-items: center; gap: 10px;"><div class=
=3D"ds-flex _965abe9" style=3D"align-items: center; gap: 16px;"><div class=
=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #9=
09090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D"font-s=
ize: 20px; width: 20px; height: 20px;"><svg width=3D"24" height=3D"24" view=
Box=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path =
d=3D"M3.65169 12.9243C3.68173 13.1045 3.74181 13.2748 3.80189 13.445C3.8719=
8 13.6052 3.96211 13.7654 4.06225 13.9156C4.16238 14.0658 4.27253 14.206 4.=
4027 14.3362C4.52286 14.4663 4.66306 14.5765 4.81326 14.6766C4.96346 14.776=
8 5.11366 14.8569 5.28389 14.927C5.44411 14.9971 5.61434 15.0571 5.79459 15=
.0872C5.97483 15.1272 6.14506 15.1373 6.3253 15.1373V16.9196C6.30739 16.919=
6 6.28949 16.9195 6.27159 16.9193C5.9991 16.9158 5.72659 16.8859 5.4541 16.=
8295C5.16371 16.7694 4.88334 16.6893 4.61298 16.5692C4.3326 16.459 4.08226 =
16.3188 3.83193 16.1586C3.59161 15.9884 3.3613 15.7981 3.15102 15.5878C2.94=
074 15.3776 2.7605 15.1473 2.59027 14.9069C2.43006 14.6566 2.28986 14.3962 =
2.17972 14.1259C2.06957 13.8455 1.97944 13.5651 1.91936 13.2747C1.86929 12.=
9843 1.83926 12.684 1.83926 12.3936V6.26532C1.83926 5.96492 1.86929 5.67456=
 1.91936 5.38417C1.97944 5.09378 2.06957 4.80338 2.17972 4.53302C2.28986 4.=
26265 2.43006 4.0023 2.59027 3.75197C2.7605 3.50163 2.94074 3.27132 3.15102=
 3.06104C3.3613 2.85076 3.59161 2.67052 3.83193 2.50029C4.08226 2.33006 4.3=
326 2.19987 4.61298 2.07971C4.88334 1.96956 5.16371 1.87943 5.4541 1.81935C=
5.74449 1.75927 6.03491 1.73926 6.3253 1.73926H12.3934C12.6838 1.73926 12.9=
842 1.75927 13.2746 1.81935C13.555 1.87943 13.8354 1.96956 14.1158 2.07971C=
14.3861 2.19987 14.6465 2.33006 14.8868 2.50029C15.1371 2.67052 15.3574 2.8=
5076 15.5677 3.06104C15.778 3.27132 15.9582 3.50163 16.1284 3.75197C16.2887=
 4.0023 16.4288 4.26265 16.539 4.53302C16.6592 4.80338 16.7393 5.09378 16.7=
994 5.38417C16.8558 5.65722 16.8858 5.93024 16.8892 6.21161C16.8894 6.22948=
 16.8895 6.24739 16.8895 6.26532H15.1271C15.1271 6.08508 15.1071 5.90486 15=
.067 5.72462C15.037 5.55439 14.9869 5.38415 14.9168 5.21392C14.8467 5.04369=
 14.7566 4.88347 14.6665 4.73327C14.5664 4.58307 14.4462 4.45289 14.326 4.3=
2271C14.1959 4.19254 14.0557 4.08239 13.9055 3.98226C13.7553 3.88212 13.605=
1 3.79202 13.4348 3.72193C13.2746 3.65184 13.1044 3.60174 12.9242 3.5717C12=
.7539 3.53165 12.5737 3.51163 12.3934 3.51163H6.3253C6.14506 3.51163 5.9748=
3 3.53165 5.79459 3.5717C5.61434 3.60174 5.44411 3.65184 5.28389 3.72193C5.=
11366 3.79202 4.96346 3.88212 4.81326 3.98226C4.66306 4.08239 4.52286 4.192=
54 4.4027 4.32271C4.27253 4.45289 4.16238 4.58307 4.06225 4.73327C3.96211 4=
.88347 3.87198 5.04369 3.80189 5.21392C3.74181 5.38415 3.68173 5.55439 3.65=
169 5.72462C3.61164 5.90486 3.60164 6.08508 3.60164 6.26532V12.3936C3.60164=
 12.5638 3.61164 12.744 3.65169 12.9243Z" fill=3D"currentColor"></path><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M9.66972 21.6772C9.39936=
 21.567 9.13902 21.4268 8.8987 21.2566C8.64836 21.0964 8.42804 20.9061 8.21=
776 20.6959C8.00748 20.4856 7.81723 20.2553 7.65701 20.015C7.4968 19.7646 7=
.3566 19.5043 7.24646 19.2239C7.12629 18.9535 7.04621 18.6731 6.98613 18.37=
27C6.92605 18.0823 6.89601 17.792 6.89601 17.4915V11.3733C6.89601 11.0729 6=
.92605 10.7825 6.98613 10.4922C7.04621 10.1918 7.12629 9.91137 7.24646 9.64=
101C7.3566 9.36063 7.4968 9.10028 7.65701 8.85996C7.81723 8.60962 8.00748 8=
.37931 8.21776 8.16903C8.42804 7.95875 8.64836 7.76849 8.8987 7.60828C9.139=
02 7.43805 9.39936 7.29785 9.66972 7.1877C9.94009 7.07755 10.2205 6.98745 1=
0.5108 6.92737C10.8012 6.86729 11.0916 6.83725 11.392 6.83725H17.4602C17.75=
06 6.83725 18.041 6.86729 18.3313 6.92737C18.6217 6.98745 18.9021 7.07755 1=
9.1725 7.1877C19.4529 7.29785 19.7032 7.43805 19.9535 7.60828C20.1938 7.768=
49 20.4242 7.95875 20.6345 8.16903C20.8447 8.37931 21.025 8.60962 21.1952 8=
.85996C21.3554 9.10028 21.4956 9.36063 21.6058 9.64101C21.7159 9.91137 21.8=
06 10.1918 21.8661 10.4922C21.9162 10.7825 21.9462 11.0729 21.9462 11.3733V=
17.4915C21.9462 17.792 21.9162 18.0823 21.8661 18.3727C21.806 18.6731 21.71=
59 18.9535 21.6058 19.2239C21.4956 19.5043 21.3554 19.7646 21.1952 20.015C2=
1.025 20.2553 20.8447 20.4856 20.6345 20.6959C20.4242 20.9061 20.1938 21.09=
64 19.9535 21.2566C19.7032 21.4268 19.4529 21.567 19.1725 21.6772C18.9021 2=
1.7973 18.6217 21.8774 18.3313 21.9375C18.041 21.9976 17.7506 22.0276 17.46=
02 22.0276H11.392C11.0916 22.0276 10.8012 21.9976 10.5108 21.9375C10.2205 2=
1.8774 9.94009 21.7973 9.66972 21.6772ZM10.8613 8.6697C11.0316 8.63966 11.2=
118 8.61965 11.392 8.61965H17.4602C17.6404 8.61965 17.8107 8.63966 17.9909 =
8.6697C18.1611 8.70975 18.3314 8.75983 18.5016 8.82992C18.6618 8.90001 18.8=
22 8.98012 18.9722 9.08026C19.1224 9.18039 19.2626 9.30055 19.3828 9.42071C=
19.513 9.55088 19.6231 9.69109 19.7232 9.84129C19.8234 9.99149 19.9035 10.1=
517 19.9736 10.3219C20.0437 10.4821 20.0937 10.6624 20.1338 10.8326C20.1638=
 11.0129 20.1838 11.1931 20.1838 11.3733V17.4915C20.1838 17.6718 20.1638 17=
.852 20.1338 18.0323C20.0937 18.2125 20.0437 18.3828 19.9736 18.543C19.9035=
 18.7132 19.8234 18.8734 19.7232 19.0236C19.6231 19.1738 19.513 19.314 19.3=
828 19.4342C19.2626 19.5643 19.1224 19.6845 18.9722 19.7846C18.822 19.8848 =
18.6618 19.9649 18.5016 20.035C18.3314 20.1051 18.1611 20.1551 17.9909 20.1=
952C17.8107 20.2252 17.6404 20.2452 17.4602 20.2452H11.392C11.2118 20.2452 =
11.0316 20.2252 10.8613 20.1952C10.6811 20.1551 10.5108 20.1051 10.3506 20.=
035C10.1804 19.9649 10.0202 19.8848 9.87 19.7846C9.72982 19.6845 9.58962 19=
.5643 9.45945 19.4342C9.33929 19.314 9.21913 19.1738 9.119 19.0236C9.01886 =
18.8734 8.93875 18.7132 8.86866 18.543C8.79857 18.3828 8.74847 18.2125 8.71=
843 18.0323C8.67838 17.852 8.65836 17.6718 8.65836 17.4915V11.3733C8.65836 =
11.1931 8.67838 11.0129 8.71843 10.8326C8.74847 10.6624 8.79857 10.4821 8.8=
6866 10.3219C8.93875 10.1517 9.01886 9.99149 9.119 9.84129C9.21913 9.69109 =
9.33929 9.55088 9.45945 9.42071C9.58962 9.30055 9.72982 9.18039 9.87 9.0802=
6C10.0202 8.98012 10.1804 8.90001 10.3506 8.82992C10.5108 8.75983 10.6811 8=
.70975 10.8613 8.6697Z" fill=3D"currentColor"></path></svg></div></div><div=
 class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text-col=
or: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D"=
font-size: 20px; width: 20px; height: 20px; opacity: 1;"><svg viewBox=3D"0 =
0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"=
http://www.w3.org/1999/xlink"><defs><clipPath id=3D"clip1258_20811"><rect i=
d=3D"=E9=87=8D=E6=96=B0=E7=94=9F=E6=88=90" width=3D"20.000000" height=3D"20=
.000000" fill=3D"white" fill-opacity=3D"0"></rect></clipPath></defs><rect i=
d=3D"=E9=87=8D=E6=96=B0=E7=94=9F=E6=88=90" width=3D"20.000000" height=3D"20=
.000000" fill=3D"#FFFFFF" fill-opacity=3D"0"></rect><g clip-path=3D"url(#cl=
ip1258_20811)"><path id=3D"path" d=3D"M17.01 7.63L13.98 7.62C13.88 7.62 13.=
79 7.6 13.7 7.56C13.62 7.52 13.54 7.47 13.47 7.4C13.4 7.33 13.35 7.25 13.32=
 7.16C13.28 7.07 13.26 6.98 13.26 6.88C13.26 6.79 13.28 6.69 13.32 6.6C13.3=
5 6.51 13.4 6.43 13.47 6.36C13.54 6.3 13.62 6.24 13.7 6.21C13.79 6.17 13.88=
 6.15 13.98 6.15L15.57 6.16C15.67 6.16 15.76 6.14 15.85 6.1C15.94 6.06 16.0=
1 6.01 16.08 5.94C16.15 5.87 16.2 5.79 16.23 5.7C16.27 5.61 16.29 5.52 16.2=
9 5.42L16.3 3.89C16.3 3.79 16.32 3.7 16.36 3.61C16.39 3.52 16.44 3.44 16.51=
 3.37C16.58 3.3 16.66 3.25 16.74 3.21C16.83 3.17 16.92 3.16 17.02 3.16C17.1=
1 3.16 17.2 3.17 17.29 3.21C17.38 3.25 17.46 3.3 17.52 3.37C17.59 3.44 17.6=
4 3.52 17.68 3.61C17.71 3.7 17.73 3.79 17.73 3.89L17.72 6.9C17.72 7 17.71 7=
.09 17.67 7.18C17.63 7.27 17.58 7.34 17.52 7.41C17.45 7.48 17.37 7.53 17.29=
 7.57C17.2 7.61 17.11 7.63 17.01 7.63Z" fill=3D"currentColor" fill-opacity=
=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M2.31 16.=
29L2.32 13.3C2.32 13.21 2.34 13.11 2.37 13.02C2.41 12.93 2.46 12.85 2.53 12=
.78C2.6 12.71 2.67 12.66 2.76 12.62C2.85 12.58 2.94 12.56 3.03 12.56L6.07 1=
2.57C6.16 12.57 6.25 12.59 6.34 12.63C6.43 12.67 6.51 12.72 6.57 12.79C6.64=
 12.86 6.69 12.94 6.73 13.03C6.76 13.12 6.78 13.22 6.78 13.32C6.78 13.41 6.=
76 13.51 6.73 13.6C6.69 13.69 6.64 13.77 6.57 13.84C6.51 13.91 6.43 13.96 6=
.34 14C6.25 14.04 6.16 14.06 6.07 14.06L4.47 14.05C4.38 14.05 4.29 14.07 4.=
2 14.11C4.11 14.15 4.03 14.2 3.97 14.27C3.9 14.34 3.85 14.42 3.81 14.51C3.7=
8 14.6 3.76 14.7 3.76 14.8L3.75 16.29C3.75 16.39 3.73 16.48 3.69 16.58C3.65=
 16.67 3.6 16.75 3.54 16.82C3.47 16.89 3.39 16.94 3.3 16.98C3.22 17.01 3.13=
 17.03 3.03 17.03C2.94 17.03 2.85 17.02 2.76 16.98C2.67 16.94 2.59 16.89 2.=
52 16.82C2.46 16.75 2.4 16.67 2.37 16.58C2.33 16.49 2.31 16.39 2.31 16.29Z"=
 fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></pa=
th><path id=3D"path" d=3D"M9.88 18.01C9.51 18.01 9.15 17.99 8.79 17.94C8.42=
 17.89 8.07 17.82 7.71 17.73C7.36 17.63 7.02 17.51 6.68 17.37C6.34 17.23 6.=
02 17.07 5.7 16.89C5.39 16.7 5.09 16.5 4.8 16.28C4.52 16.05 4.25 15.81 3.99=
 15.55C3.74 15.29 3.5 15.02 3.29 14.73C3.07 14.44 2.88 14.13 2.7 13.82L4.15=
 13.05C4.32 13.35 4.51 13.64 4.72 13.91C4.93 14.18 5.17 14.43 5.42 14.66C5.=
67 14.9 5.94 15.11 6.23 15.3C6.52 15.49 6.83 15.66 7.14 15.81C7.46 15.95 7.=
78 16.07 8.12 16.16C8.45 16.25 8.8 16.32 9.14 16.36C9.49 16.39 9.83 16.4 10=
.18 16.39C10.53 16.37 10.87 16.33 11.22 16.26C11.56 16.19 11.89 16.09 12.21=
 15.97C12.54 15.84 12.85 15.7 13.15 15.53C13.45 15.35 13.74 15.16 14.01 14.=
94C14.28 14.72 14.53 14.49 14.76 14.23C14.99 13.97 15.2 13.7 15.38 13.41C15=
.57 13.12 15.73 12.82 15.87 12.5C16 12.19 16.11 11.87 16.2 11.53C16.28 11.2=
 16.34 10.87 16.36 10.52C16.37 10.42 16.4 10.33 16.44 10.24C16.48 10.15 16.=
54 10.07 16.61 10C16.69 9.93 16.77 9.87 16.86 9.84C16.96 9.8 17.05 9.77 17.=
16 9.77C17.27 9.77 17.38 9.79 17.49 9.83C17.6 9.87 17.7 9.94 17.78 10.02C17=
.86 10.1 17.92 10.2 17.96 10.3C18 10.41 18.01 10.52 18 10.64C17.98 10.89 17=
.95 11.13 17.91 11.38C17.86 11.62 17.81 11.87 17.74 12.11C17.68 12.35 17.6 =
12.58 17.51 12.82C17.42 13.05 17.32 13.28 17.21 13.5C17.1 13.73 16.98 13.95=
 16.85 14.16C16.71 14.37 16.57 14.58 16.42 14.78C16.27 14.98 16.11 15.17 15=
.94 15.36C15.77 15.54 15.59 15.72 15.41 15.89C15.22 16.06 15.03 16.22 14.83=
 16.37C14.63 16.52 14.42 16.66 14.2 16.79C13.99 16.93 13.77 17.05 13.54 17.=
16C13.31 17.27 13.08 17.37 12.85 17.46C12.61 17.55 12.37 17.63 12.13 17.7C1=
1.88 17.77 11.64 17.83 11.39 17.87C11.14 17.92 10.89 17.96 10.63 17.98C10.3=
8 18 10.13 18.01 9.88 18.01Z" fill=3D"currentColor" fill-opacity=3D"1.00000=
0" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M2.85 10.27C2.73 10.=
28 2.62 10.26 2.51 10.22C2.4 10.17 2.31 10.11 2.23 10.03C2.14 9.95 2.08 9.8=
5 2.04 9.74C2 9.63 1.99 9.52 2 9.41C2.03 8.98 2.1 8.56 2.2 8.15C2.3 7.73 2.=
43 7.33 2.6 6.94C2.76 6.54 2.96 6.16 3.19 5.8C3.41 5.44 3.67 5.1 3.95 4.77C=
4.24 4.45 4.54 4.15 4.88 3.88C5.21 3.6 5.56 3.35 5.93 3.13C6.3 2.91 6.69 2.=
73 7.09 2.57C7.5 2.41 7.91 2.28 8.33 2.19C8.75 2.09 9.18 2.03 9.62 2.01C10.=
05 1.98 10.48 1.99 10.91 2.03C11.35 2.07 11.77 2.14 12.19 2.25C12.61 2.36 1=
3.02 2.5 13.42 2.67C13.81 2.84 14.19 3.04 14.56 3.28C14.92 3.51 15.27 3.77 =
15.59 4.05C15.91 4.34 16.21 4.64 16.48 4.98C16.75 5.31 17 5.66 17.21 6.03L1=
5.78 6.83C15.61 6.54 15.42 6.25 15.2 5.99C14.98 5.73 14.74 5.48 14.49 5.25C=
14.23 5.02 13.96 4.82 13.66 4.63C13.37 4.45 13.07 4.29 12.75 4.15C12.44 4.0=
1 12.11 3.9 11.77 3.82C11.44 3.73 11.1 3.67 10.76 3.64C10.41 3.61 10.07 3.6=
 9.72 3.62C9.37 3.64 9.03 3.69 8.69 3.77C8.36 3.84 8.03 3.94 7.71 4.07C7.38=
 4.2 7.08 4.35 6.78 4.52C6.48 4.7 6.2 4.89 5.94 5.11C5.67 5.33 5.43 5.57 5.=
2 5.83C4.97 6.08 4.77 6.36 4.59 6.65C4.41 6.94 4.25 7.24 4.12 7.55C3.98 7.8=
7 3.88 8.19 3.8 8.52C3.72 8.85 3.66 9.19 3.64 9.53C3.63 9.62 3.6 9.72 3.56 =
9.81C3.52 9.9 3.46 9.98 3.39 10.05C3.32 10.12 3.23 10.17 3.14 10.21C3.05 10=
.25 2.95 10.27 2.85 10.27Z" fill=3D"currentColor" fill-opacity=3D"1.000000"=
 fill-rule=3D"nonzero"></path></g></svg></div></div><div class=3D"ds-icon-b=
utton" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #909090; --ds-i=
con-button-size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 20px; wi=
dth: 20px; height: 20px;"><svg width=3D"20" height=3D"20" viewBox=3D"0 0 20=
 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"=
evenodd" clip-rule=3D"evenodd" d=3D"M18.14 9.428l-.003.019L17.114 15a3.774 =
3.774 0 0 1-1.313 2.27 3.673 3.673 0 0 1-2.438.894H3.895c-.57 0-1.055-.205-=
1.458-.614a2.033 2.033 0 0 1-.604-1.48v-5.438c0-.578.201-1.071.604-1.48.402=
-.41.888-.614 1.458-.614h1.932l2.317-5.293c.24-.548.6-.948 1.083-1.2.599-.3=
12 1.156-.278 1.672.103.782.577 1.172 1.355 1.172 2.334V6.997h3.994c.638-.0=
07 1.167.235 1.588.726.421.492.584 1.06.488 1.705zm-2.076-2.6c.686-.007 1.2=
62.256 1.714.785.453.529.63 1.146.527 1.84v.004l-.005.02v.003l-1.022 5.552a=
3.943 3.943 0 0 1-1.37 2.368 3.838 3.838 0 0 1-2.545.933H3.895a2.137 2.137 =
0 0 1-1.576-.663 2.203 2.203 0 0 1-.652-1.6v-5.437c0-.622.218-1.159.652-1.6=
.434-.44.962-.663 1.576-.663H5.72l2.273-5.192c.254-.58.64-1.01 1.159-1.282.=
32-.167.64-.246.953-.227.315.02.613.137.893.344.824.608 1.24 1.437 1.24 2.4=
7v2.345h3.827zM9.741 3.063c-.247.128-.437.344-.57.647L6.708 9.34v7.683h6.65=
5a2.59 2.59 0 0 0 1.72-.63c.498-.42.807-.955.926-1.601l1.02-5.544a.936.936 =
0 0 0-.225-.773.917.917 0 0 0-.739-.335h-4.557a.567.567 0 0 1-.562-.571V4.4=
83c0-.591-.236-1.061-.708-1.41-.143-.105-.309-.109-.497-.01zm7.124 6.157a.7=
66.766 0 0 0-.186-.636.753.753 0 0 0-.612-.276h-4.559a.734.734 0 0 1-.728-.=
74V4.483c0-.537-.21-.956-.64-1.273a.233.233 0 0 0-.137-.05.387.387 0 0 0-.1=
85.053c-.208.108-.374.291-.495.566m0 0L6.874 9.375v7.479h6.489c.609 0 1.145=
-.197 1.614-.592.468-.396.757-.894.869-1.502l1.02-5.54M3.35 16.623c.152.155=
.33.23.545.23h1.522V9.85H3.895a.732.732 0 0 0-.545.23.755.755 0 0 0-.226.55=
3v5.437c0 .218.074.4.226.553zm.545-6.941a.897.897 0 0 0-.663.278.924.924 0 =
0 0-.274.673v5.437c0 .263.091.487.274.673.183.186.404.28.663.28h1.688V9.681=
H3.895z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M18.137 9.447l.004-.02a2.044 2.044 0 0 0-.488-1.704c-.421=
-.491-.95-.733-1.588-.726h-2.282l1.584 1.142h.698a.917.917 0 0 1 .739.335.9=
36.936 0 0 1 .225.773l-1.02 5.543a2.663 2.663 0 0 1-.926 1.602 2.59 2.59 0 =
0 1-1.72.63H6.708V9.34L9.171 3.71c.133-.303.323-.519.57-.647.188-.099.354-.=
095.497.01.472.349.708.819.708 1.41v.467l1.125.811V4.483c0-.98-.39-1.757-1.=
171-2.334-.517-.38-1.074-.415-1.673-.103-.482.252-.843.652-1.083 1.2L5.827 =
8.54H3.895c-.57 0-1.056.205-1.458.614a2.033 2.033 0 0 0-.604 1.48v5.437c0 .=
578.201 1.072.604 1.48.403.41.889.615 1.458.615h9.468c.918 0 1.731-.299 2.4=
38-.895A3.774 3.774 0 0 0 17.114 15l1.023-5.553zm-14.242.235a.897.897 0 0 0=
-.663.278.924.924 0 0 0-.274.673v5.437c0 .263.091.487.274.673.183.186.404.2=
8.663.28h1.688V9.681H3.895z" fill=3D"currentColor"></path><path d=3D"M10.94=
6 7.568c0 .316.252.571.563.571h3.858l-1.584-1.142h-1.712V5.76l-1.125-.811v2=
.618z" fill=3D"currentColor"></path></svg></div></div><div class=3D"ds-icon=
-button" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #909090; --ds=
-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 20px; =
width: 20px; height: 20px;"><svg width=3D"20" height=3D"20" viewBox=3D"0 0 =
20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M18.304 10.543v.004a2.214 2.214 0 0=
 1-.526 1.84c-.452.528-1.028.792-1.714.784h-3.827v2.345c0 1.034-.416 1.863-=
1.24 2.471-.28.207-.578.324-.893.343-.314.02-.632-.06-.953-.226-.519-.271-.=
905-.702-1.159-1.282l-2.273-5.193H3.895a2.136 2.136 0 0 1-1.576-.663 2.203 =
2.203 0 0 1-.652-1.6V3.93c0-.623.218-1.16.652-1.6.434-.441.963-.663 1.576-.=
663h9.468c.957 0 1.807.311 2.544.933a3.943 3.943 0 0 1 1.37 2.368L18.3 10.5=
2v.002l.004.02zm-1.19-5.544a3.774 3.774 0 0 0-1.313-2.27 3.673 3.673 0 0 0-=
2.438-.894H3.895c-.57 0-1.055.205-1.458.614a2.033 2.033 0 0 0-.604 1.48v5.4=
37c0 .578.201 1.072.604 1.48.402.41.888.615 1.458.615h1.932l2.317 5.292c.24=
.549.6.949 1.083 1.2.599.313 1.156.279 1.672-.102.782-.577 1.172-1.355 1.17=
2-2.335v-2.513h3.994c.638.007 1.167-.235 1.588-.727.421-.491.584-1.06.488-1=
.704l-.004-.02L17.114 5zM9.819 16.787c.076.04.137.053.185.052a.233.233 0 0 =
0 .137-.05c.43-.316.64-.735.64-1.273v-3.084c0-.41.327-.74.729-.74h4.558a.75=
2.752 0 0 0 .612-.277.766.766 0 0 0 .186-.635l-1.02-5.54a2.495 2.495 0 0 0-=
.869-1.502 2.426 2.426 0 0 0-1.613-.592H6.874v7.48l2.449 5.595m-2.615-5.56V=
2.978h6.655c.648 0 1.221.21 1.72.63.498.42.807.954.926 1.601l1.02 5.543a.93=
6.936 0 0 1-.225.774.917.917 0 0 1-.739.335h-4.557a.567.567 0 0 0-.562.57v3=
.085c0 .592-.236 1.062-.708 1.41-.143.106-.309.11-.497.01-.247-.128-.437-.3=
43-.57-.647l-2.463-5.628zM3.35 3.376a.754.754 0 0 0-.226.554v5.436c0 .218.0=
74.4.226.554.152.154.33.23.545.23h1.522V3.146H3.895a.731.731 0 0 0-.545.23z=
m2.233-.398v7.34H3.895a.897.897 0 0 1-.663-.279.925.925 0 0 1-.274-.673V3.9=
3c0-.263.091-.487.274-.673a.895.895 0 0 1 .663-.28h1.688zm4.235 13.809c-.20=
8-.108-.375-.292-.495-.566l.495.566z" fill=3D"currentColor"></path><path fi=
ll-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M15.801 2.73a3.774 3.774 0 0=
 1 1.313 2.269l1.023 5.554.004.019a2.044 2.044 0 0 1-.488 1.704c-.421.492-.=
95.734-1.588.727h-3.994v2.513c0 .98-.39 1.758-1.171 2.335-.517.38-1.074.415=
-1.673.102-.482-.251-.843-.651-1.083-1.2l-2.317-5.292H3.895c-.57 0-1.056-.2=
05-1.458-.614a2.033 2.033 0 0 1-.604-1.48V3.93c0-.579.201-1.072.604-1.481.4=
03-.41.889-.614 1.458-.614h9.468c.918 0 1.731.298 2.438.894zm-2.438.248c.64=
8 0 1.221.21 1.72.63.498.42.807.954.926 1.601l1.02 5.543a.936.936 0 0 1-.22=
5.774.917.917 0 0 1-.739.335h-4.557a.567.567 0 0 0-.562.57v3.085c0 .592-.23=
6 1.062-.708 1.41-.143.106-.309.11-.497.01-.247-.128-.437-.343-.57-.647l-2.=
463-5.628V2.978h6.655zm-9.468 7.34a.897.897 0 0 1-.663-.279.925.925 0 0 1-.=
274-.673V3.93c0-.263.091-.487.274-.673a.895.895 0 0 1 .663-.28h1.688v7.341H=
3.895z" fill=3D"currentColor"></path></svg></div></div></div><div style=3D"=
flex: 1 1 0%;"></div></div></div><div class=3D"_9663006"><div class=3D"fbb7=
37a4">fix below error.
Traceback (most recent call last):
  File "C:\Users\RYZEN\Multiclass-Segmentation-in-PyTorch\infer.py", line 6=
9, in &lt;module&gt;
    overlay[class_mask] =3D cv2.addWeighted(overlay[class_mask], 1-alpha,
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
cv2.error: OpenCV(4.11.0) D:\a\opencv-python\opencv-python\opencv\modules\c=
ore\src\arithm.cpp:665: error: (-209:Sizes of input arguments do not match)=
 The operation is neither 'array op array' (where arrays have the same size=
 and the same number of channels), nor 'array op scalar', nor 'scalar op ar=
ray' in function 'cv::arithm_op'</div><div class=3D"e13328ad _3a26104"><div=
 class=3D"_425ea0b"><div class=3D"ds-flex _78e0558" style=3D"align-items: f=
lex-end; gap: 0px;"><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"-=
-ds-icon-button-text-color: #909090; --ds-icon-button-size: 20px;"><div cla=
ss=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg w=
idth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg"><path d=3D"M3.65169 12.9243C3.68173 13.1045 3.74181=
 13.2748 3.80189 13.445C3.87198 13.6052 3.96211 13.7654 4.06225 13.9156C4.1=
6238 14.0658 4.27253 14.206 4.4027 14.3362C4.52286 14.4663 4.66306 14.5765 =
4.81326 14.6766C4.96346 14.7768 5.11366 14.8569 5.28389 14.927C5.44411 14.9=
971 5.61434 15.0571 5.79459 15.0872C5.97483 15.1272 6.14506 15.1373 6.3253 =
15.1373V16.9196C6.30739 16.9196 6.28949 16.9195 6.27159 16.9193C5.9991 16.9=
158 5.72659 16.8859 5.4541 16.8295C5.16371 16.7694 4.88334 16.6893 4.61298 =
16.5692C4.3326 16.459 4.08226 16.3188 3.83193 16.1586C3.59161 15.9884 3.361=
3 15.7981 3.15102 15.5878C2.94074 15.3776 2.7605 15.1473 2.59027 14.9069C2.=
43006 14.6566 2.28986 14.3962 2.17972 14.1259C2.06957 13.8455 1.97944 13.56=
51 1.91936 13.2747C1.86929 12.9843 1.83926 12.684 1.83926 12.3936V6.26532C1=
.83926 5.96492 1.86929 5.67456 1.91936 5.38417C1.97944 5.09378 2.06957 4.80=
338 2.17972 4.53302C2.28986 4.26265 2.43006 4.0023 2.59027 3.75197C2.7605 3=
.50163 2.94074 3.27132 3.15102 3.06104C3.3613 2.85076 3.59161 2.67052 3.831=
93 2.50029C4.08226 2.33006 4.3326 2.19987 4.61298 2.07971C4.88334 1.96956 5=
.16371 1.87943 5.4541 1.81935C5.74449 1.75927 6.03491 1.73926 6.3253 1.7392=
6H12.3934C12.6838 1.73926 12.9842 1.75927 13.2746 1.81935C13.555 1.87943 13=
.8354 1.96956 14.1158 2.07971C14.3861 2.19987 14.6465 2.33006 14.8868 2.500=
29C15.1371 2.67052 15.3574 2.85076 15.5677 3.06104C15.778 3.27132 15.9582 3=
.50163 16.1284 3.75197C16.2887 4.0023 16.4288 4.26265 16.539 4.53302C16.659=
2 4.80338 16.7393 5.09378 16.7994 5.38417C16.8558 5.65722 16.8858 5.93024 1=
6.8892 6.21161C16.8894 6.22948 16.8895 6.24739 16.8895 6.26532H15.1271C15.1=
271 6.08508 15.1071 5.90486 15.067 5.72462C15.037 5.55439 14.9869 5.38415 1=
4.9168 5.21392C14.8467 5.04369 14.7566 4.88347 14.6665 4.73327C14.5664 4.58=
307 14.4462 4.45289 14.326 4.32271C14.1959 4.19254 14.0557 4.08239 13.9055 =
3.98226C13.7553 3.88212 13.6051 3.79202 13.4348 3.72193C13.2746 3.65184 13.=
1044 3.60174 12.9242 3.5717C12.7539 3.53165 12.5737 3.51163 12.3934 3.51163=
H6.3253C6.14506 3.51163 5.97483 3.53165 5.79459 3.5717C5.61434 3.60174 5.44=
411 3.65184 5.28389 3.72193C5.11366 3.79202 4.96346 3.88212 4.81326 3.98226=
C4.66306 4.08239 4.52286 4.19254 4.4027 4.32271C4.27253 4.45289 4.16238 4.5=
8307 4.06225 4.73327C3.96211 4.88347 3.87198 5.04369 3.80189 5.21392C3.7418=
1 5.38415 3.68173 5.55439 3.65169 5.72462C3.61164 5.90486 3.60164 6.08508 3=
.60164 6.26532V12.3936C3.60164 12.5638 3.61164 12.744 3.65169 12.9243Z" fil=
l=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.4268 8.8987 21.2566C8.6483=
6 21.0964 8.42804 20.9061 8.21776 20.6959C8.00748 20.4856 7.81723 20.2553 7=
.65701 20.015C7.4968 19.7646 7.3566 19.5043 7.24646 19.2239C7.12629 18.9535=
 7.04621 18.6731 6.98613 18.3727C6.92605 18.0823 6.89601 17.792 6.89601 17.=
4915V11.3733C6.89601 11.0729 6.92605 10.7825 6.98613 10.4922C7.04621 10.191=
8 7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 7.4968 9.10028 7.65701 8.8=
5996C7.81723 8.60962 8.00748 8.37931 8.21776 8.16903C8.42804 7.95875 8.6483=
6 7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 7.29785 9.66972 7.1877C9.9=
4009 7.07755 10.2205 6.98745 10.5108 6.92737C10.8012 6.86729 11.0916 6.8372=
5 11.392 6.83725H17.4602C17.7506 6.83725 18.041 6.86729 18.3313 6.92737C18.=
6217 6.98745 18.9021 7.07755 19.1725 7.1877C19.4529 7.29785 19.7032 7.43805=
 19.9535 7.60828C20.1938 7.76849 20.4242 7.95875 20.6345 8.16903C20.8447 8.=
37931 21.025 8.60962 21.1952 8.85996C21.3554 9.10028 21.4956 9.36063 21.605=
8 9.64101C21.7159 9.91137 21.806 10.1918 21.8661 10.4922C21.9162 10.7825 21=
.9462 11.0729 21.9462 11.3733V17.4915C21.9462 17.792 21.9162 18.0823 21.866=
1 18.3727C21.806 18.6731 21.7159 18.9535 21.6058 19.2239C21.4956 19.5043 21=
.3554 19.7646 21.1952 20.015C21.025 20.2553 20.8447 20.4856 20.6345 20.6959=
C20.4242 20.9061 20.1938 21.0964 19.9535 21.2566C19.7032 21.4268 19.4529 21=
.567 19.1725 21.6772C18.9021 21.7973 18.6217 21.8774 18.3313 21.9375C18.041=
 21.9976 17.7506 22.0276 17.4602 22.0276H11.392C11.0916 22.0276 10.8012 21.=
9976 10.5108 21.9375C10.2205 21.8774 9.94009 21.7973 9.66972 21.6772ZM10.86=
13 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 8.61965H17.4602C17.6404 8.=
61965 17.8107 8.63966 17.9909 8.6697C18.1611 8.70975 18.3314 8.75983 18.501=
6 8.82992C18.6618 8.90001 18.822 8.98012 18.9722 9.08026C19.1224 9.18039 19=
.2626 9.30055 19.3828 9.42071C19.513 9.55088 19.6231 9.69109 19.7232 9.8412=
9C19.8234 9.99149 19.9035 10.1517 19.9736 10.3219C20.0437 10.4821 20.0937 1=
0.6624 20.1338 10.8326C20.1638 11.0129 20.1838 11.1931 20.1838 11.3733V17.4=
915C20.1838 17.6718 20.1638 17.852 20.1338 18.0323C20.0937 18.2125 20.0437 =
18.3828 19.9736 18.543C19.9035 18.7132 19.8234 18.8734 19.7232 19.0236C19.6=
231 19.1738 19.513 19.314 19.3828 19.4342C19.2626 19.5643 19.1224 19.6845 1=
8.9722 19.7846C18.822 19.8848 18.6618 19.9649 18.5016 20.035C18.3314 20.105=
1 18.1611 20.1551 17.9909 20.1952C17.8107 20.2252 17.6404 20.2452 17.4602 2=
0.2452H11.392C11.2118 20.2452 11.0316 20.2252 10.8613 20.1952C10.6811 20.15=
51 10.5108 20.1051 10.3506 20.035C10.1804 19.9649 10.0202 19.8848 9.87 19.7=
846C9.72982 19.6845 9.58962 19.5643 9.45945 19.4342C9.33929 19.314 9.21913 =
19.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.7132 8.86866 18.543C8.7985=
7 18.3828 8.74847 18.2125 8.71843 18.0323C8.67838 17.852 8.65836 17.6718 8.=
65836 17.4915V11.3733C8.65836 11.1931 8.67838 11.0129 8.71843 10.8326C8.748=
47 10.6624 8.79857 10.4821 8.86866 10.3219C8.93875 10.1517 9.01886 9.99149 =
9.119 9.84129C9.21913 9.69109 9.33929 9.55088 9.45945 9.42071C9.58962 9.300=
55 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 10.1804 8.90001 10.3506 8.8=
2992C10.5108 8.75983 10.6811 8.70975 10.8613 8.6697Z" fill=3D"currentColor"=
></path></svg></div></div><div class=3D"ds-icon-button" tabindex=3D"0" styl=
e=3D"--ds-icon-button-text-color: #909090; --ds-icon-button-size: 20px; mar=
gin-left: 14px; opacity: 1;"><div class=3D"ds-icon" style=3D"font-size: 20p=
x; width: 20px; height: 20px;"><svg width=3D"20" height=3D"20" viewBox=3D"0=
 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rul=
e=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.712 2.79a1.854 1.854 0 0 1 2.6=
23 0l1.673 1.672a1.854 1.854 0 0 1 0 2.623l-9.714 9.714a2.91 2.91 0 0 1-2.0=
58.853H1.945a.8.8 0 0 1-.8-.8v-2.29c0-.773.307-1.513.853-2.058l9.714-9.715z=
m1.492 1.13c-.1-.1-.261-.1-.361 0l-1.327 1.326 2.035 2.035 1.327-1.326c.1-.=
1.1-.262 0-.362L13.204 3.92zm-.783 4.491l-2.035-2.034-7.258 7.257a1.31 1.31=
 0 0 0-.384.927v1.492h1.492c.348 0 .681-.138.927-.384l7.258-7.258z" fill=3D=
"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M17.772 17.608c.35 0 .633-.283.633-.633v-.492a.633.633 0 0 0-.633-.633H=
9.858L8.1 17.608h9.672z" fill=3D"currentColor"></path></svg></div></div></d=
iv></div></div></div><div class=3D"_4f9bf79 _43c05b5"><div class=3D"_7eb235=
8 _58dfa60"><svg viewBox=3D"0 0 30 30" fill=3D"none" xmlns=3D"http://www.w3=
.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink"><path id=3D"pat=
h" d=3D"M27.501 8.46875C27.249 8.3457 27.1406 8.58008 26.9932 8.69922C26.94=
34 8.73828 26.9004 8.78906 26.8584 8.83398C26.4902 9.22852 26.0605 9.48633 =
25.5 9.45508C24.6787 9.41016 23.9785 9.66797 23.3594 10.2969C23.2275 9.5214=
8 22.79 9.05859 22.125 8.76172C21.7764 8.60742 21.4238 8.45312 21.1807 8.11=
719C21.0098 7.87891 20.9639 7.61328 20.8779 7.35156C20.8242 7.19336 20.7695=
 7.03125 20.5879 7.00391C20.3906 6.97266 20.3135 7.13867 20.2363 7.27734C19=
.9258 7.84375 19.8066 8.46875 19.8174 9.10156C19.8447 10.5234 20.4453 11.65=
62 21.6367 12.4629C21.7725 12.5547 21.8076 12.6484 21.7646 12.7832C21.6836 =
13.0605 21.5869 13.3301 21.501 13.6074C21.4473 13.7852 21.3662 13.8242 21.1=
768 13.7461C20.5225 13.4727 19.957 13.0684 19.458 12.5781C18.6104 11.7578 1=
7.8438 10.8516 16.8877 10.1426C16.6631 9.97656 16.4395 9.82227 16.207 9.675=
78C15.2314 8.72656 16.335 7.94727 16.5898 7.85547C16.8574 7.75977 16.6826 7=
.42773 15.8193 7.43164C14.957 7.43555 14.167 7.72461 13.1611 8.10938C13.013=
7 8.16797 12.8594 8.21094 12.7002 8.24414C11.7871 8.07227 10.8389 8.0332 9.=
84766 8.14453C7.98242 8.35352 6.49219 9.23633 5.39648 10.7441C4.08105 12.55=
47 3.77148 14.6133 4.15039 16.7617C4.54883 19.0234 5.70215 20.8984 7.47559 =
22.3633C9.31348 23.8809 11.4307 24.625 13.8457 24.4824C15.3125 24.3984 16.9=
463 24.2012 18.7881 22.6406C19.2529 22.8711 19.7402 22.9629 20.5498 23.0332=
C21.1729 23.0918 21.7725 23.002 22.2373 22.9062C22.9648 22.752 22.9141 22.0=
781 22.6514 21.9531C20.5186 20.959 20.9863 21.3633 20.5605 21.0371C21.6445 =
19.752 23.2783 18.418 23.917 14.0977C23.9668 13.7539 23.9238 13.5391 23.917=
 13.2598C23.9131 13.0918 23.9512 13.0254 24.1445 13.0059C24.6787 12.9453 25=
.1973 12.7988 25.6738 12.5352C27.0557 11.7793 27.6123 10.5391 27.7441 9.050=
78C27.7637 8.82422 27.7402 8.58789 27.501 8.46875ZM15.46 21.8613C13.3926 20=
.2344 12.3906 19.6992 11.9766 19.7227C11.5898 19.7441 11.6592 20.1875 11.74=
41 20.4766C11.833 20.7617 11.9492 20.959 12.1123 21.209C12.2246 21.375 12.3=
018 21.623 12 21.8066C11.334 22.2207 10.1768 21.668 10.1221 21.6406C8.77539=
 20.8477 7.64941 19.7988 6.85547 18.3652C6.08984 16.9844 5.64453 15.5039 5.=
57129 13.9238C5.55176 13.541 5.66406 13.4062 6.04297 13.3379C6.54199 13.246=
1 7.05762 13.2266 7.55664 13.2988C9.66602 13.6074 11.4619 14.5527 12.9668 1=
6.0469C13.8262 16.9004 14.4766 17.918 15.1465 18.9121C15.8584 19.9688 16.62=
5 20.9746 17.6006 21.7988C17.9443 22.0879 18.2197 22.3086 18.4824 22.4707C1=
7.6895 22.5586 16.3652 22.5781 15.46 21.8613ZM16.4502 15.4805C16.4502 15.31=
05 16.5859 15.1758 16.7568 15.1758C16.7949 15.1758 16.8301 15.1836 16.8613 =
15.1953C16.9033 15.2109 16.9424 15.2344 16.9727 15.2695C17.0273 15.3223 17.=
0586 15.4004 17.0586 15.4805C17.0586 15.6504 16.9229 15.7852 16.7529 15.785=
2C16.582 15.7852 16.4502 15.6504 16.4502 15.4805ZM19.5273 17.0625C19.3301 1=
7.1426 19.1328 17.2129 18.9434 17.2207C18.6494 17.2344 18.3281 17.1152 18.1=
533 16.9688C17.8828 16.7422 17.6895 16.6152 17.6074 16.2168C17.5732 16.0469=
 17.5928 15.7852 17.623 15.6348C17.6934 15.3105 17.6152 15.1035 17.3877 14.=
9141C17.2012 14.7598 16.9658 14.7188 16.7061 14.7188C16.6094 14.7188 16.520=
5 14.6758 16.4541 14.6406C16.3457 14.5859 16.2568 14.4512 16.3418 14.2852C1=
6.3691 14.2324 16.501 14.1016 16.5322 14.0781C16.8838 13.877 17.29 13.9434 =
17.666 14.0938C18.0146 14.2363 18.2773 14.498 18.6562 14.8672C19.0439 15.31=
45 19.1133 15.4395 19.334 15.7734C19.5078 16.0371 19.667 16.3066 19.7754 16=
.6152C19.8408 16.8066 19.7559 16.9648 19.5273 17.0625Z" fill-rule=3D"nonzer=
o" fill=3D"#4D6BFE"></path></svg></div><div class=3D"_48edb25"><div class=
=3D"_58a6d71 _19db599"><div class=3D"ds-icon _7580acb" style=3D"font-size: =
12px; width: 12px; height: 12px;"><svg width=3D"20" height=3D"20" viewBox=
=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=
=3D"M2.656 17.344c-1.016-1.015-1.15-2.75-.313-4.925.325-.825.73-1.617 1.205=
-2.365L3.582 10l-.033-.054c-.5-.799-.91-1.596-1.206-2.365-.836-2.175-.703-3=
.91.313-4.926.56-.56 1.364-.86 2.335-.86 1.425 0 3.168.636 4.957 1.756l.053=
.034.053-.034c1.79-1.12 3.532-1.757 4.957-1.757.972 0 1.776.3 2.335.86 1.01=
4 1.015 1.148 2.752.312 4.926a13.892 13.892 0 0 1-1.206 2.365l-.034.054.034=
.053c.5.8.91 1.596 1.205 2.365.837 2.175.704 3.911-.311 4.926-.56.56-1.364.=
861-2.335.861-1.425 0-3.168-.637-4.957-1.757L10 16.415l-.053.033c-1.79 1.12=
-3.532 1.757-4.957 1.757-.972 0-1.776-.3-2.335-.86zm13.631-4.399c-.187-.488=
-.429-.988-.71-1.492l-.075-.132-.092.12a22.075 22.075 0 0 1-3.968 3.968l-.1=
2.093.132.074c1.308.734 2.559 1.162 3.556 1.162.563 0 1.006-.138 1.298-.43.=
3-.3.436-.774.428-1.346-.008-.575-.159-1.264-.449-2.017zm-6.345 1.65l.058.0=
42.058-.042a19.881 19.881 0 0 0 4.551-4.537l.043-.058-.043-.058a20.123 20.1=
23 0 0 0-2.093-2.458 19.732 19.732 0 0 0-2.458-2.08L10 5.364l-.058.042A19.8=
83 19.883 0 0 0 5.39 9.942L5.348 10l.042.059c.631.874 1.332 1.695 2.094 2.4=
57a19.74 19.74 0 0 0 2.458 2.08zm6.366-10.902c-.293-.293-.736-.431-1.298-.4=
31-.998 0-2.248.429-3.556 1.163l-.132.074.12.092a21.938 21.938 0 0 1 3.968 =
3.968l.092.12.074-.132c.282-.504.524-1.004.711-1.492.29-.753.442-1.442.45-2=
.017.007-.572-.129-1.045-.429-1.345zM3.712 7.055c.202.514.44 1.013.712 1.49=
3l.074.13.092-.119a21.94 21.94 0 0 1 3.968-3.968l.12-.092-.132-.074C7.238 3=
.69 5.987 3.262 4.99 3.262c-.563 0-1.006.138-1.298.43-.3.301-.436.774-.428 =
1.346.007.575.159 1.264.448 2.017zm0 5.89c-.29.753-.44 1.442-.448 2.017-.00=
8.572.127 1.045.428 1.345.293.293.736.431 1.298.431.997 0 2.247-.428 3.556-=
1.162l.131-.074-.12-.093a21.94 21.94 0 0 1-3.967-3.968l-.093-.12-.074.132a1=
1.712 11.712 0 0 0-.71 1.492z" fill=3D"currentColor" stroke=3D"currentColor=
" stroke-width=3D".1"></path><path d=3D"M10.706 11.704A1.843 1.843 0 0 1 8.=
155 10a1.845 1.845 0 1 1 2.551 1.704z" fill=3D"currentColor" stroke=3D"curr=
entColor" stroke-width=3D".2"></path></svg></div>Thought for 116 seconds<di=
v class=3D"ds-icon _54f4262" style=3D"font-size: 10px; width: 10px; height:=
 10px; transform: rotate(180deg);"><svg width=3D"10" height=3D"6" viewBox=
=3D"0 0 10 6" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D=
"M5.786 4.167L2.765 1.259c-.416-.4-.985-.482-1.273-.183-.287.298-.183.864.2=
33 1.264l3.021 2.908c.416.4.986.482 1.273.184.287-.299.183-.865-.233-1.265z=
" fill=3D"currentColor"></path><path d=3D"M8.197 1.206L5.288 4.208c-.4.413-=
.484.982-.187 1.27.298.289.864.187 1.265-.227L9.274 2.25c.401-.414.485-.983=
.187-1.271-.297-.288-.863-.187-1.264.227z" fill=3D"currentColor"></path></s=
vg></div></div><div class=3D"e1675d8b"><div class=3D"_9ecc93a"></div>We are=
 getting an error in the line that uses `cv2.addWeighted`. The issue is tha=
t `overlay[class_mask]` returns a 1D array of pixels (each pixel is a 3-ele=
ment array) and we are trying to blend it with a scalar color (a 3-element =
list). However, `cv2.addWeighted` expects two arrays of the same size and t=
he same number of channels.<div style=3D"height: 6px;"></div><div style=3D"=
height: 6px;"></div> Instead, we can do the blending manually for the maske=
d region.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></di=
v> Let's change the approach:<div style=3D"height: 6px;"></div><div style=
=3D"height: 6px;"></div> We want to create an overlay where we blend the or=
iginal image with the class color for the pixels that belong to that class.=
<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> We can=
 do:<div style=3D"height: 6px;"></div>   overlay[class_mask] =3D (1 - alpha=
) * original_image[class_mask] + alpha * np.array(color)<div style=3D"heigh=
t: 6px;"></div><div style=3D"height: 6px;"></div> But note: OpenCV uses BGR=
 format, and our color is in RGB? Actually, in our colormap we defined as R=
GB, but OpenCV reads as BGR. However, in our mask generation we are creatin=
g RGB masks. But the original image is in BGR (because we read with `cv2.im=
read` which returns BGR).<div style=3D"height: 6px;"></div><div style=3D"he=
ight: 6px;"></div> So, we must be cautious.<div style=3D"height: 6px;"></di=
v><div style=3D"height: 6px;"></div> Alternatively, we can convert the colo=
r to BGR? Or change the colormap to BGR? Since we are writing the mask as R=
GB and then displaying with OpenCV, which expects BGR, we might have color =
issues.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>=
 However, in our inference script, we are reading the image and then proces=
sing. The mask we create is in RGB, but when we display or save, OpenCV exp=
ects BGR. But in the overlay, we are using the original image (BGR) and the=
 color (RGB) which is inconsistent.<div style=3D"height: 6px;"></div><div s=
tyle=3D"height: 6px;"></div> Let's fix the color order:<div style=3D"height=
: 6px;"></div><div style=3D"height: 6px;"></div> Option 1: Define colormap =
in BGR.<div style=3D"height: 6px;"></div>   COLORMAP =3D [<div style=3D"hei=
ght: 6px;"></div>        [0, 0, 0],      # Background -&gt; black<div style=
=3D"height: 6px;"></div>        [128, 0, 0],    # Weed-1 -&gt; blue in BGR =
(was originally [0,0,128] in RGB)<div style=3D"height: 6px;"></div>        =
[0, 128, 0]     # Weed-2 -&gt; green in BGR (same as RGB? but wait, [0,128,=
0] is green in RGB, which in BGR would be [0,128,0] as well? Actually, no: =
in BGR, green is the middle. So [0,128,0] in RGB is blue in BGR? No, let me=
 clarify:<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></di=
v>        Our colormap was defined for RGB:<div style=3D"height: 6px;"></di=
v>          [0,0,128] in RGB is dark red in BGR? Actually, no: <div style=
=3D"height: 6px;"></div>          In RGB: [0,0,128] is dark blue.<div style=
=3D"height: 6px;"></div>          In BGR: [128,0,0] is dark blue.<div style=
=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>        So we sho=
uld define the colormap for BGR if we are going to use it in an image that =
is in BGR.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></d=
iv> But note: our `index_to_rgb_mask` function returns an RGB mask. Then we=
 are resizing and then trying to overlay on the original image (which is BG=
R). So the mask we created (RGB) is being treated as BGR when we do `overla=
y[class_mask] =3D ...`? That might cause the colors to be swapped.<div styl=
e=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> Alternatively, =
we can convert the original image to RGB and then work in RGB, but then whe=
n we display we convert back? Or we can work entirely in BGR.<div style=3D"=
height: 6px;"></div><div style=3D"height: 6px;"></div> Since we are using O=
penCV for display and saving, and OpenCV uses BGR, I think it's easier to:<=
div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   - Con=
vert the original image to RGB for processing? Actually, no. We can work in=
 BGR.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> L=
et me adjust:<div style=3D"height: 6px;"></div><div style=3D"height: 6px;">=
</div>   We'll define the colormap in BGR for the overlay? But note the mas=
k we save is in RGB. We don't want to change that because it's saved as an =
image and might be viewed in other software that expects RGB.<div style=3D"=
height: 6px;"></div><div style=3D"height: 6px;"></div> For the overlay, whi=
ch is on the original BGR image, we must use BGR colors.<div style=3D"heigh=
t: 6px;"></div><div style=3D"height: 6px;"></div> So for the overlay step, =
we should use the BGR equivalent of our colormap.<div style=3D"height: 6px;=
"></div><div style=3D"height: 6px;"></div> Alternatively, we can convert th=
e original image to RGB for the entire processing and then convert back for=
 display? That might be overkill.<div style=3D"height: 6px;"></div><div sty=
le=3D"height: 6px;"></div> I propose:<div style=3D"height: 6px;"></div><div=
 style=3D"height: 6px;"></div>   Step 1: Convert the original image to RGB =
for internal consistency? Actually, we don't have to. We can define a separ=
ate colormap for BGR for the overlay.<div style=3D"height: 6px;"></div><div=
 style=3D"height: 6px;"></div> But note: the mask we generate (pred_mask) i=
s in RGB. We are resizing it to the original size and then using it to crea=
te an overlay on the original image (which is in BGR). So we are comparing =
an RGB mask (pred_mask_resized) with a BGR image (original_image). This is =
problematic.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"><=
/div> Instead, we can convert the mask to BGR? But wait, we are using the m=
ask to extract the class regions. We don't care about the color for the pur=
pose of creating the overlay? Actually, we do: we are using the mask to get=
 the class_mask by comparing with the color.<div style=3D"height: 6px;"></d=
iv><div style=3D"height: 6px;"></div> However, the mask we generated (pred_=
mask) is in RGB, and we are comparing with the BGR color? That won't work.<=
div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> How abo=
ut we generate the mask in BGR? We can change the `index_to_rgb_mask` to `i=
ndex_to_bgr_mask`? But then when we save the mask, it will be BGR and if we=
 open it in an image viewer it will look wrong.<div style=3D"height: 6px;">=
</div><div style=3D"height: 6px;"></div> Alternatively, we can do:<div styl=
e=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   Instead of us=
ing the color to create the class_mask, we can use the class index. But we =
don't have the class index in the original size? We have the class index in=
 the resized size (256x256) and then we resized the mask (with interpolatio=
n) which changed the class indices? That's why we used nearest neighbor.<di=
v style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> But note:=
 we have the `pred` variable which is the class index in the resized size. =
We can resize that to the original size (with nearest neighbor) and then us=
e that to create the mask? Then we can avoid the color comparison.<div styl=
e=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> Let me restruct=
ure:<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   =
We have:<div style=3D"height: 6px;"></div>        pred: the class index map=
 (256,256)<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></d=
iv>   We resize it to the original image size (with nearest neighbor) to ge=
t `pred_orig` (H, W) of the original image.<div style=3D"height: 6px;"></di=
v><div style=3D"height: 6px;"></div>   Then we can do:<div style=3D"height:=
 6px;"></div><div style=3D"height: 6px;"></div>        for i, color in enum=
erate(COLORMAP[1:], start=3D1):<div style=3D"height: 6px;"></div>          =
  class_mask =3D (pred_orig =3D=3D i)   # This is a boolean mask of the cla=
ss<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>     =
   Then we can use the BGR color for that class for the overlay.<div style=
=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   How do we get =
the BGR color? We can define a separate colormap for BGR for the overlay? O=
r convert the RGB colormap to BGR.<div style=3D"height: 6px;"></div><div st=
yle=3D"height: 6px;"></div>   We'll define:<div style=3D"height: 6px;"></di=
v><div style=3D"height: 6px;"></div>        overlay_colors =3D [<div style=
=3D"height: 6px;"></div>            [0, 0, 0],          # Background (not u=
sed since we skip background)<div style=3D"height: 6px;"></div>            =
[128, 0, 0],        # Weed-1: in BGR, this is blue (was [0,0,128] in RGB)<d=
iv style=3D"height: 6px;"></div>            [0, 128, 0]         # Weed-2: i=
n BGR, this is green (same as [0,128,0] in RGB? Actually, no: [0,128,0] in =
RGB is green, but in BGR it would be [0,128,0] but wait: in BGR the order i=
s blue, green, red. So [0,128,0] in BGR is green? Yes, because the green ch=
annel is the middle.<div style=3D"height: 6px;"></div><div style=3D"height:=
 6px;"></div>        However, note our original colormap in RGB:<div style=
=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>            Weed-=
1: [0,0,128] -&gt; in BGR: [128,0,0] (blue)<div style=3D"height: 6px;"></di=
v>            Weed-2: [0,128,0] -&gt; in BGR: [0,128,0] (green)<div style=
=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>        So we can=
 create a BGR colormap for the overlay:<div style=3D"height: 6px;"></div><d=
iv style=3D"height: 6px;"></div>            overlay_colors_bgr =3D [<div st=
yle=3D"height: 6px;"></div>                [0, 0, 0],          # Background=
 (we skip background, but for completeness)<div style=3D"height: 6px;"></di=
v>                [128, 0, 0],        # Weed-1: blue<div style=3D"height: 6=
px;"></div>                [0, 128, 0]         # Weed-2: green<div style=3D=
"height: 6px;"></div>            ]<div style=3D"height: 6px;"></div><div st=
yle=3D"height: 6px;"></div>        But note: the background we skip. We are=
 iterating from index 1.<div style=3D"height: 6px;"></div><div style=3D"hei=
ght: 6px;"></div>   Alternatively, we can convert the RGB colormap to BGR b=
y reversing each color tuple.<div style=3D"height: 6px;"></div><div style=
=3D"height: 6px;"></div>   We can do:<div style=3D"height: 6px;"></div><div=
 style=3D"height: 6px;"></div>        overlay_colors_bgr =3D [list(reversed=
(color)) for color in COLORMAP]<div style=3D"height: 6px;"></div><div style=
=3D"height: 6px;"></div>   But wait, that would swap the entire list? Actua=
lly, we want to reverse each color array.<div style=3D"height: 6px;"></div>=
<div style=3D"height: 6px;"></div>   Example: [0,0,128] -&gt; [128,0,0]<div=
 style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   So:<div =
style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>        over=
lay_colors_bgr =3D [color[::-1] for color in COLORMAP]<div style=3D"height:=
 6px;"></div><div style=3D"height: 6px;"></div>   Then for class i, we use =
overlay_colors_bgr[i].<div style=3D"height: 6px;"></div><div style=3D"heigh=
t: 6px;"></div> However, we don't need to change the entire mask generation=
. We are going to use the class index to create the mask.<div style=3D"heig=
ht: 6px;"></div><div style=3D"height: 6px;"></div> Revised plan:<div style=
=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   1. Instead of =
converting the prediction to an RGB mask and then resizing, we resize the c=
lass index array (pred) to the original image size using nearest neighbor. =
This gives us `pred_orig` (a 2D array of class indices).<div style=3D"heigh=
t: 6px;"></div><div style=3D"height: 6px;"></div>   2. Then we create the R=
GB mask for saving from `pred_orig`? But we want the mask to be in RGB. We =
can do:<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>=
        rgb_mask =3D index_to_rgb_mask(pred_orig, COLORMAP)<div style=3D"he=
ight: 6px;"></div><div style=3D"height: 6px;"></div>      and then save tha=
t.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   3.=
 For the overlay, we use the class indices in `pred_orig` to create a boole=
an mask for each class (without going through the color).<div style=3D"heig=
ht: 6px;"></div><div style=3D"height: 6px;"></div>   4. Then we blend the o=
riginal image (in BGR) with the BGR color for that class.<div style=3D"heig=
ht: 6px;"></div><div style=3D"height: 6px;"></div> Let me adjust the code a=
ccordingly.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></=
div> Steps in the loop:<div style=3D"height: 6px;"></div><div style=3D"heig=
ht: 6px;"></div>   Read the image and keep the original.<div style=3D"heigh=
t: 6px;"></div><div style=3D"height: 6px;"></div>   Preprocess the image (r=
esize, normalize, etc.) and run the model to get `pred` (256x256 class indi=
ces).<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>  =
 Resize `pred` to the original dimensions (using nearest neighbor) -&gt; ca=
ll this `pred_orig`<div style=3D"height: 6px;"></div><div style=3D"height: =
6px;"></div>   Then:<div style=3D"height: 6px;"></div><div style=3D"height:=
 6px;"></div>        # Create the RGB mask from pred_orig and save it<div s=
tyle=3D"height: 6px;"></div>        rgb_mask =3D index_to_rgb_mask(pred_ori=
g, COLORMAP)<div style=3D"height: 6px;"></div>        cv2.imwrite(...)<div =
style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>        # Cr=
eate an overlay image (on the original image in BGR)<div style=3D"height: 6=
px;"></div>        overlay =3D original_image.copy()<div style=3D"height: 6=
px;"></div>        alpha =3D 0.5<div style=3D"height: 6px;"></div><div styl=
e=3D"height: 6px;"></div>        # We'll create a BGR version of the colorm=
ap for the overlay<div style=3D"height: 6px;"></div>        # But note: we =
are going to use the class index, so we can define:<div style=3D"height: 6p=
x;"></div>        overlay_colors_bgr =3D [color[::-1] for color in COLORMAP=
]   # Convert each color from RGB to BGR<div style=3D"height: 6px;"></div><=
div style=3D"height: 6px;"></div>        # But note: background is index0, =
which we skip? We can skip it in the overlay? Or we can just not draw it.<d=
iv style=3D"height: 6px;"></div>        for class_idx in range(1, len(COLOR=
MAP)):  # Skip background (0)<div style=3D"height: 6px;"></div>            =
class_mask =3D (pred_orig =3D=3D class_idx)<div style=3D"height: 6px;"></di=
v>            color_bgr =3D overlay_colors_bgr[class_idx]<div style=3D"heig=
ht: 6px;"></div><div style=3D"height: 6px;"></div>            # Now, for ea=
ch pixel in the class_mask, we blend<div style=3D"height: 6px;"></div>     =
       # We can do:<div style=3D"height: 6px;"></div>            #   overla=
y[class_mask] =3D (1-alpha) * original_image[class_mask] + alpha * np.array=
(color_bgr)<div style=3D"height: 6px;"></div>            # But we must be c=
areful with the data types.<div style=3D"height: 6px;"></div><div style=3D"=
height: 6px;"></div>            # Extract the region of the original image =
in the class_mask<div style=3D"height: 6px;"></div>            original_reg=
ion =3D original_image[class_mask]<div style=3D"height: 6px;"></div>       =
     blended_region =3D (1 - alpha) * original_region + alpha * np.array(co=
lor_bgr)<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div=
>            # But note: original_region is uint8, and the calculation will=
 be float. We need to convert to uint8.<div style=3D"height: 6px;"></div>  =
          blended_region =3D blended_region.astype(np.uint8)<div style=3D"h=
eight: 6px;"></div><div style=3D"height: 6px;"></div>            overlay[cl=
ass_mask] =3D blended_region<div style=3D"height: 6px;"></div><div style=3D=
"height: 6px;"></div>   Then display and save the overlay.<div style=3D"hei=
ght: 6px;"></div><div style=3D"height: 6px;"></div> Alternatively, we can u=
se the following without a loop for each class? But it's only 2 classes, so=
 it's okay.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></=
div> But note: the error we originally got was because we were using `cv2.a=
ddWeighted` on arrays of different shapes. Now we are doing it manually wit=
h array operations.<div style=3D"height: 6px;"></div><div style=3D"height: =
6px;"></div> Let me rewrite the overlay part accordingly.<div style=3D"heig=
ht: 6px;"></div><div style=3D"height: 6px;"></div> We'll change the code as=
 follows:<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></di=
v>   After getting `pred_orig` (the class indices in the original image siz=
e):<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>    =
    # Create RGB mask for saving (if desired) - note: this is in RGB<div st=
yle=3D"height: 6px;"></div>        rgb_mask =3D index_to_rgb_mask(pred_orig=
, COLORMAP)<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></=
div>        # For the overlay, we want to work in BGR for the original imag=
e<div style=3D"height: 6px;"></div>        # Convert the colormap to BGR fo=
r the overlay colors<div style=3D"height: 6px;"></div>        overlay_color=
s_bgr =3D [list(color[::-1]) for color in COLORMAP]<div style=3D"height: 6p=
x;"></div><div style=3D"height: 6px;"></div>        # Create overlay<div st=
yle=3D"height: 6px;"></div>        overlay =3D original_image.copy()<div st=
yle=3D"height: 6px;"></div>        alpha =3D 0.5<div style=3D"height: 6px;"=
></div><div style=3D"height: 6px;"></div>        # For each class (excludin=
g background)<div style=3D"height: 6px;"></div>        for class_idx in ran=
ge(1, len(COLORMAP)):<div style=3D"height: 6px;"></div>            # Create=
 a mask for this class<div style=3D"height: 6px;"></div>            class_m=
ask =3D (pred_orig =3D=3D class_idx)<div style=3D"height: 6px;"></div>     =
       # Get the BGR color for this class<div style=3D"height: 6px;"></div>=
            color_bgr =3D overlay_colors_bgr[class_idx]<div style=3D"height=
: 6px;"></div><div style=3D"height: 6px;"></div>            # For each chan=
nel, we blend: (1-alpha)*original + alpha*color_bgr<div style=3D"height: 6p=
x;"></div>            # We can do this without a loop over channels by usin=
g broadcasting<div style=3D"height: 6px;"></div>            # First, extrac=
t the region of the original image where the mask is True<div style=3D"heig=
ht: 6px;"></div>            region =3D original_image[class_mask]<div style=
=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>            # Ble=
nd: (1-alpha)*region + alpha * color_bgr<div style=3D"height: 6px;"></div> =
           # But note: region is (N,3) and color_bgr is (3,)<div style=3D"h=
eight: 6px;"></div>            blended =3D (1 - alpha) * region + alpha * n=
p.array(color_bgr)<div style=3D"height: 6px;"></div><div style=3D"height: 6=
px;"></div>            # Convert to integer<div style=3D"height: 6px;"></di=
v>            blended =3D blended.astype(np.uint8)<div style=3D"height: 6px=
;"></div><div style=3D"height: 6px;"></div>            # Assign back<div st=
yle=3D"height: 6px;"></div>            overlay[class_mask] =3D blended<div =
style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>   Then we d=
isplay and save.<div style=3D"height: 6px;"></div><div style=3D"height: 6px=
;"></div> This should avoid the error and also fix the color inconsistency.=
<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> Let me=
 update the script accordingly.<div style=3D"height: 6px;"></div><div style=
=3D"height: 6px;"></div> However, note: the original image is in BGR, and w=
e are using BGR colors for blending, so the overlay should look correct.<di=
v style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> Also, we =
are saving the mask in RGB, which is the standard.<div style=3D"height: 6px=
;"></div><div style=3D"height: 6px;"></div> Revised script (only the infere=
nce loop):</div></div><div class=3D"ds-markdown ds-markdown--block" style=
=3D"--ds-md-zoom: 1.143;"><p class=3D"ds-markdown-paragraph">The error occu=
rs because <code>cv2.addWeighted()</code> expects both input arrays to have=
 the same dimensions, but we're trying to blend a section of the image (whi=
ch has multiple pixels) with a single color value. Here's the fixed code wi=
th explanations:</p><div class=3D"md-code-block md-code-block-light"><div c=
lass=3D"md-code-block-banner-wrap"><div class=3D"md-code-block-banner md-co=
de-block-banner-lite"><div class=3D"_121d384"><div class=3D"d2a24f03"><span=
 class=3D"d813de27">python</span></div><div class=3D"d2a24f03"><div class=
=3D"efa13877"><div role=3D"button" class=3D"ds-button ds-button--secondary =
ds-button--borderless ds-button--rect ds-button--m _7db3914" tabindex=3D"0"=
 style=3D"margin-right: 8px; font-size: 13px; height: 28px; padding: 0px 4p=
x; --button-text-color: var(--dsr-text-2);"><div class=3D"ds-button__icon">=
<div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg"><path d=3D"M3.65169 12.9243C3.68173 13.1045=
 3.74181 13.2748 3.80189 13.445C3.87198 13.6052 3.96211 13.7654 4.06225 13.=
9156C4.16238 14.0658 4.27253 14.206 4.4027 14.3362C4.52286 14.4663 4.66306 =
14.5765 4.81326 14.6766C4.96346 14.7768 5.11366 14.8569 5.28389 14.927C5.44=
411 14.9971 5.61434 15.0571 5.79459 15.0872C5.97483 15.1272 6.14506 15.1373=
 6.3253 15.1373V16.9196C6.30739 16.9196 6.28949 16.9195 6.27159 16.9193C5.9=
991 16.9158 5.72659 16.8859 5.4541 16.8295C5.16371 16.7694 4.88334 16.6893 =
4.61298 16.5692C4.3326 16.459 4.08226 16.3188 3.83193 16.1586C3.59161 15.98=
84 3.3613 15.7981 3.15102 15.5878C2.94074 15.3776 2.7605 15.1473 2.59027 14=
.9069C2.43006 14.6566 2.28986 14.3962 2.17972 14.1259C2.06957 13.8455 1.979=
44 13.5651 1.91936 13.2747C1.86929 12.9843 1.83926 12.684 1.83926 12.3936V6=
.26532C1.83926 5.96492 1.86929 5.67456 1.91936 5.38417C1.97944 5.09378 2.06=
957 4.80338 2.17972 4.53302C2.28986 4.26265 2.43006 4.0023 2.59027 3.75197C=
2.7605 3.50163 2.94074 3.27132 3.15102 3.06104C3.3613 2.85076 3.59161 2.670=
52 3.83193 2.50029C4.08226 2.33006 4.3326 2.19987 4.61298 2.07971C4.88334 1=
.96956 5.16371 1.87943 5.4541 1.81935C5.74449 1.75927 6.03491 1.73926 6.325=
3 1.73926H12.3934C12.6838 1.73926 12.9842 1.75927 13.2746 1.81935C13.555 1.=
87943 13.8354 1.96956 14.1158 2.07971C14.3861 2.19987 14.6465 2.33006 14.88=
68 2.50029C15.1371 2.67052 15.3574 2.85076 15.5677 3.06104C15.778 3.27132 1=
5.9582 3.50163 16.1284 3.75197C16.2887 4.0023 16.4288 4.26265 16.539 4.5330=
2C16.6592 4.80338 16.7393 5.09378 16.7994 5.38417C16.8558 5.65722 16.8858 5=
.93024 16.8892 6.21161C16.8894 6.22948 16.8895 6.24739 16.8895 6.26532H15.1=
271C15.1271 6.08508 15.1071 5.90486 15.067 5.72462C15.037 5.55439 14.9869 5=
.38415 14.9168 5.21392C14.8467 5.04369 14.7566 4.88347 14.6665 4.73327C14.5=
664 4.58307 14.4462 4.45289 14.326 4.32271C14.1959 4.19254 14.0557 4.08239 =
13.9055 3.98226C13.7553 3.88212 13.6051 3.79202 13.4348 3.72193C13.2746 3.6=
5184 13.1044 3.60174 12.9242 3.5717C12.7539 3.53165 12.5737 3.51163 12.3934=
 3.51163H6.3253C6.14506 3.51163 5.97483 3.53165 5.79459 3.5717C5.61434 3.60=
174 5.44411 3.65184 5.28389 3.72193C5.11366 3.79202 4.96346 3.88212 4.81326=
 3.98226C4.66306 4.08239 4.52286 4.19254 4.4027 4.32271C4.27253 4.45289 4.1=
6238 4.58307 4.06225 4.73327C3.96211 4.88347 3.87198 5.04369 3.80189 5.2139=
2C3.74181 5.38415 3.68173 5.55439 3.65169 5.72462C3.61164 5.90486 3.60164 6=
.08508 3.60164 6.26532V12.3936C3.60164 12.5638 3.61164 12.744 3.65169 12.92=
43Z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"=
evenodd" d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.4268 8.8987 21.256=
6C8.64836 21.0964 8.42804 20.9061 8.21776 20.6959C8.00748 20.4856 7.81723 2=
0.2553 7.65701 20.015C7.4968 19.7646 7.3566 19.5043 7.24646 19.2239C7.12629=
 18.9535 7.04621 18.6731 6.98613 18.3727C6.92605 18.0823 6.89601 17.792 6.8=
9601 17.4915V11.3733C6.89601 11.0729 6.92605 10.7825 6.98613 10.4922C7.0462=
1 10.1918 7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 7.4968 9.10028 7.6=
5701 8.85996C7.81723 8.60962 8.00748 8.37931 8.21776 8.16903C8.42804 7.9587=
5 8.64836 7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 7.29785 9.66972 7.=
1877C9.94009 7.07755 10.2205 6.98745 10.5108 6.92737C10.8012 6.86729 11.091=
6 6.83725 11.392 6.83725H17.4602C17.7506 6.83725 18.041 6.86729 18.3313 6.9=
2737C18.6217 6.98745 18.9021 7.07755 19.1725 7.1877C19.4529 7.29785 19.7032=
 7.43805 19.9535 7.60828C20.1938 7.76849 20.4242 7.95875 20.6345 8.16903C20=
.8447 8.37931 21.025 8.60962 21.1952 8.85996C21.3554 9.10028 21.4956 9.3606=
3 21.6058 9.64101C21.7159 9.91137 21.806 10.1918 21.8661 10.4922C21.9162 10=
.7825 21.9462 11.0729 21.9462 11.3733V17.4915C21.9462 17.792 21.9162 18.082=
3 21.8661 18.3727C21.806 18.6731 21.7159 18.9535 21.6058 19.2239C21.4956 19=
.5043 21.3554 19.7646 21.1952 20.015C21.025 20.2553 20.8447 20.4856 20.6345=
 20.6959C20.4242 20.9061 20.1938 21.0964 19.9535 21.2566C19.7032 21.4268 19=
.4529 21.567 19.1725 21.6772C18.9021 21.7973 18.6217 21.8774 18.3313 21.937=
5C18.041 21.9976 17.7506 22.0276 17.4602 22.0276H11.392C11.0916 22.0276 10.=
8012 21.9976 10.5108 21.9375C10.2205 21.8774 9.94009 21.7973 9.66972 21.677=
2ZM10.8613 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 8.61965H17.4602C17=
.6404 8.61965 17.8107 8.63966 17.9909 8.6697C18.1611 8.70975 18.3314 8.7598=
3 18.5016 8.82992C18.6618 8.90001 18.822 8.98012 18.9722 9.08026C19.1224 9.=
18039 19.2626 9.30055 19.3828 9.42071C19.513 9.55088 19.6231 9.69109 19.723=
2 9.84129C19.8234 9.99149 19.9035 10.1517 19.9736 10.3219C20.0437 10.4821 2=
0.0937 10.6624 20.1338 10.8326C20.1638 11.0129 20.1838 11.1931 20.1838 11.3=
733V17.4915C20.1838 17.6718 20.1638 17.852 20.1338 18.0323C20.0937 18.2125 =
20.0437 18.3828 19.9736 18.543C19.9035 18.7132 19.8234 18.8734 19.7232 19.0=
236C19.6231 19.1738 19.513 19.314 19.3828 19.4342C19.2626 19.5643 19.1224 1=
9.6845 18.9722 19.7846C18.822 19.8848 18.6618 19.9649 18.5016 20.035C18.331=
4 20.1051 18.1611 20.1551 17.9909 20.1952C17.8107 20.2252 17.6404 20.2452 1=
7.4602 20.2452H11.392C11.2118 20.2452 11.0316 20.2252 10.8613 20.1952C10.68=
11 20.1551 10.5108 20.1051 10.3506 20.035C10.1804 19.9649 10.0202 19.8848 9=
.87 19.7846C9.72982 19.6845 9.58962 19.5643 9.45945 19.4342C9.33929 19.314 =
9.21913 19.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.7132 8.86866 18.54=
3C8.79857 18.3828 8.74847 18.2125 8.71843 18.0323C8.67838 17.852 8.65836 17=
.6718 8.65836 17.4915V11.3733C8.65836 11.1931 8.67838 11.0129 8.71843 10.83=
26C8.74847 10.6624 8.79857 10.4821 8.86866 10.3219C8.93875 10.1517 9.01886 =
9.99149 9.119 9.84129C9.21913 9.69109 9.33929 9.55088 9.45945 9.42071C9.589=
62 9.30055 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 10.1804 8.90001 10.=
3506 8.82992C10.5108 8.75983 10.6811 8.70975 10.8613 8.6697Z" fill=3D"curre=
ntColor"></path></svg></div></div><span class=3D"code-info-button-text">Cop=
y</span></div><div role=3D"button" class=3D"ds-button ds-button--secondary =
ds-button--borderless ds-button--rect ds-button--s _7db3914" tabindex=3D"0"=
 style=3D"padding: 0px 4px; height: 28px; --button-text-color: var(--dsr-te=
xt-2); --button-font-size: 13px;"><div class=3D"ds-button__icon"><div class=
=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg wid=
th=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:/=
/www.w3.org/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M12 2.55a.97.97 0 0 1 .982.956v13.04a.97.97 0 0 1-.982.957.97.97 0 0 1-=
.982-.956V3.507A.97.97 0 0 1 12 2.55z" fill=3D"currentColor"></path><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M19.418 9.808c.382.375.37.9=
71-.027 1.332l-6.7 6.085a1.04 1.04 0 0 1-1.41-.025.905.905 0 0 1 .027-1.332=
l6.7-6.085a1.04 1.04 0 0 1 1.41.025z" fill=3D"currentColor"></path><path fi=
ll-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M4.582 9.808a1.04 1.04 0 0 1=
 1.41-.025l6.7 6.085c.397.361.409.957.027 1.332a1.04 1.04 0 0 1-1.41.025l-6=
.7-6.085a.905.905 0 0 1-.027-1.332z" fill=3D"currentColor"></path><path fil=
l-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3.068 16.46a.97.97 0 0 1 .98=
3.956v1.739c0 .432.36.782.803.782h14.291c.445 0 .804-.35.804-.782v-1.739a.9=
7.97 0 0 1 .983-.956.97.97 0 0 1 .982.956v1.739c0 1.488-1.24 2.695-2.769 2.=
695H4.855c-1.53 0-2.77-1.207-2.77-2.695v-1.739a.97.97 0 0 1 .983-.956z" fil=
l=3D"currentColor"></path></svg></div></div><span class=3D"code-info-button=
-text">Download</span></div></div></div></div></div></div><pre><span class=
=3D"token keyword">import</span> os
<span class=3D"token keyword">import</span> cv2
<span class=3D"token keyword">import</span> numpy <span class=3D"token keyw=
ord">as</span> np
<span class=3D"token keyword">import</span> torch
<span class=3D"token keyword">from</span> model <span class=3D"token keywor=
d">import</span> build_unet
<span class=3D"token keyword">from</span> utils <span class=3D"token keywor=
d">import</span> create_dir

<span class=3D"token comment"># Configuration</span>
IMAGE_SIZE <span class=3D"token operator">=3D</span> <span class=3D"token p=
unctuation">(</span><span class=3D"token number">256</span><span class=3D"t=
oken punctuation">,</span> <span class=3D"token number">256</span><span cla=
ss=3D"token punctuation">)</span>
COLORMAP <span class=3D"token operator">=3D</span> <span class=3D"token pun=
ctuation">[</span>
    <span class=3D"token punctuation">[</span><span class=3D"token number">=
0</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">0</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">0</span><span class=3D"token punctuation">]</span><span class=3D"=
token punctuation">,</span>      <span class=3D"token comment"># Background=
 (black)</span>
    <span class=3D"token punctuation">[</span><span class=3D"token number">=
0</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">0</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">128</span><span class=3D"token punctuation">]</span><span class=
=3D"token punctuation">,</span>    <span class=3D"token comment"># Weed-1 (=
dark blue)</span>
    <span class=3D"token punctuation">[</span><span class=3D"token number">=
0</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">128</span><span class=3D"token punctuation">,</span> <span class=3D"to=
ken number">0</span><span class=3D"token punctuation">]</span>     <span cl=
ass=3D"token comment"># Weed-2 (green)</span>
<span class=3D"token punctuation">]</span>
<span class=3D"token comment"># BGR version for OpenCV operations (reverse =
RGB colors)</span>
COLORMAP_BGR <span class=3D"token operator">=3D</span> <span class=3D"token=
 punctuation">[</span>color<span class=3D"token punctuation">[</span><span =
class=3D"token punctuation">:</span><span class=3D"token punctuation">:</sp=
an><span class=3D"token operator">-</span><span class=3D"token number">1</s=
pan><span class=3D"token punctuation">]</span> <span class=3D"token keyword=
">for</span> color <span class=3D"token keyword">in</span> COLORMAP<span cl=
ass=3D"token punctuation">]</span>

CHECKPOINT_PATH <span class=3D"token operator">=3D</span> <span class=3D"to=
ken string">"files/checkpoint.pth"</span>
INPUT_DIR <span class=3D"token operator">=3D</span> <span class=3D"token st=
ring">"your_images/"</span>
OUTPUT_DIR <span class=3D"token operator">=3D</span> <span class=3D"token s=
tring">"inference_results/"</span>

<span class=3D"token keyword">def</span> <span class=3D"token function">ind=
ex_to_rgb_mask</span><span class=3D"token punctuation">(</span>mask<span cl=
ass=3D"token punctuation">,</span> colormap<span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">:</span>
    height<span class=3D"token punctuation">,</span> width <span class=3D"t=
oken operator">=3D</span> mask<span class=3D"token punctuation">.</span>sha=
pe
    rgb_mask <span class=3D"token operator">=3D</span> np<span class=3D"tok=
en punctuation">.</span>zeros<span class=3D"token punctuation">(</span><spa=
n class=3D"token punctuation">(</span>height<span class=3D"token punctuatio=
n">,</span> width<span class=3D"token punctuation">,</span> <span class=3D"=
token number">3</span><span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">,</span> dtype<span class=3D"token operator">=3D</sp=
an>np<span class=3D"token punctuation">.</span>uint8<span class=3D"token pu=
nctuation">)</span>
    <span class=3D"token keyword">for</span> class_id<span class=3D"token p=
unctuation">,</span> rgb <span class=3D"token keyword">in</span> <span clas=
s=3D"token builtin">enumerate</span><span class=3D"token punctuation">(</sp=
an>colormap<span class=3D"token punctuation">)</span><span class=3D"token p=
unctuation">:</span>
        rgb_mask<span class=3D"token punctuation">[</span>mask <span class=
=3D"token operator">=3D=3D</span> class_id<span class=3D"token punctuation"=
>]</span> <span class=3D"token operator">=3D</span> rgb
    <span class=3D"token keyword">return</span> rgb_mask

<span class=3D"token comment"># Load model</span>
device <span class=3D"token operator">=3D</span> torch<span class=3D"token =
punctuation">.</span>device<span class=3D"token punctuation">(</span><span =
class=3D"token string">'cuda'</span> <span class=3D"token keyword">if</span=
> torch<span class=3D"token punctuation">.</span>cuda<span class=3D"token p=
unctuation">.</span>is_available<span class=3D"token punctuation">(</span><=
span class=3D"token punctuation">)</span> <span class=3D"token keyword">els=
e</span> <span class=3D"token string">'cpu'</span><span class=3D"token punc=
tuation">)</span>
model <span class=3D"token operator">=3D</span> build_unet<span class=3D"to=
ken punctuation">(</span>num_classes<span class=3D"token operator">=3D</spa=
n><span class=3D"token builtin">len</span><span class=3D"token punctuation"=
>(</span>COLORMAP<span class=3D"token punctuation">)</span><span class=3D"t=
oken punctuation">)</span><span class=3D"token punctuation">.</span>to<span=
 class=3D"token punctuation">(</span>device<span class=3D"token punctuation=
">)</span>
model<span class=3D"token punctuation">.</span>load_state_dict<span class=
=3D"token punctuation">(</span>torch<span class=3D"token punctuation">.</sp=
an>load<span class=3D"token punctuation">(</span>CHECKPOINT_PATH<span class=
=3D"token punctuation">,</span> map_location<span class=3D"token operator">=
=3D</span>device<span class=3D"token punctuation">)</span><span class=3D"to=
ken punctuation">[</span><span class=3D"token string">"model_state_dict"</s=
pan><span class=3D"token punctuation">]</span><span class=3D"token punctuat=
ion">)</span>
model<span class=3D"token punctuation">.</span><span class=3D"token builtin=
">eval</span><span class=3D"token punctuation">(</span><span class=3D"token=
 punctuation">)</span>

<span class=3D"token comment"># Create output directories</span>
create_dir<span class=3D"token punctuation">(</span><span class=3D"token st=
ring-interpolation"><span class=3D"token string">f"</span><span class=3D"to=
ken interpolation"><span class=3D"token punctuation">{</span>OUTPUT_DIR<spa=
n class=3D"token punctuation">}</span></span><span class=3D"token string">/=
overlays"</span></span><span class=3D"token punctuation">)</span>
create_dir<span class=3D"token punctuation">(</span><span class=3D"token st=
ring-interpolation"><span class=3D"token string">f"</span><span class=3D"to=
ken interpolation"><span class=3D"token punctuation">{</span>OUTPUT_DIR<spa=
n class=3D"token punctuation">}</span></span><span class=3D"token string">/=
masks"</span></span><span class=3D"token punctuation">)</span>

<span class=3D"token keyword">for</span> image_path <span class=3D"token ke=
yword">in</span> os<span class=3D"token punctuation">.</span>listdir<span c=
lass=3D"token punctuation">(</span>INPUT_DIR<span class=3D"token punctuatio=
n">)</span><span class=3D"token punctuation">:</span>
    <span class=3D"token keyword">if</span> <span class=3D"token keyword">n=
ot</span> image_path<span class=3D"token punctuation">.</span>lower<span cl=
ass=3D"token punctuation">(</span><span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">.</span>endswith<span class=3D"token pun=
ctuation">(</span><span class=3D"token punctuation">(</span><span class=3D"=
token string">'.png'</span><span class=3D"token punctuation">,</span> <span=
 class=3D"token string">'.jpg'</span><span class=3D"token punctuation">,</s=
pan> <span class=3D"token string">'.jpeg'</span><span class=3D"token punctu=
ation">)</span><span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">:</span>
        <span class=3D"token keyword">continue</span>

    <span class=3D"token comment"># Load image</span>
    image <span class=3D"token operator">=3D</span> cv2<span class=3D"token=
 punctuation">.</span>imread<span class=3D"token punctuation">(</span>os<sp=
an class=3D"token punctuation">.</span>path<span class=3D"token punctuation=
">.</span>join<span class=3D"token punctuation">(</span>INPUT_DIR<span clas=
s=3D"token punctuation">,</span> image_path<span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">)</span>
    <span class=3D"token keyword">if</span> image <span class=3D"token keyw=
ord">is</span> <span class=3D"token boolean">None</span><span class=3D"toke=
n punctuation">:</span>
        <span class=3D"token keyword">continue</span>
    original_image <span class=3D"token operator">=3D</span> image<span cla=
ss=3D"token punctuation">.</span>copy<span class=3D"token punctuation">(</s=
pan><span class=3D"token punctuation">)</span>
   =20
    <span class=3D"token comment"># Preprocess</span>
    resized_image <span class=3D"token operator">=3D</span> cv2<span class=
=3D"token punctuation">.</span>resize<span class=3D"token punctuation">(</s=
pan>image<span class=3D"token punctuation">,</span> IMAGE_SIZE<span class=
=3D"token punctuation">)</span>
    x <span class=3D"token operator">=3D</span> resized_image <span class=
=3D"token operator">/</span> <span class=3D"token number">255.0</span>
    x <span class=3D"token operator">=3D</span> np<span class=3D"token punc=
tuation">.</span>transpose<span class=3D"token punctuation">(</span>x<span =
class=3D"token punctuation">,</span> <span class=3D"token punctuation">(</s=
pan><span class=3D"token number">2</span><span class=3D"token punctuation">=
,</span> <span class=3D"token number">0</span><span class=3D"token punctuat=
ion">,</span> <span class=3D"token number">1</span><span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">)</span>            <sp=
an class=3D"token comment"># HWC to CHW</span>
    x <span class=3D"token operator">=3D</span> torch<span class=3D"token p=
unctuation">.</span>from_numpy<span class=3D"token punctuation">(</span>x<s=
pan class=3D"token punctuation">)</span><span class=3D"token punctuation">.=
</span>unsqueeze<span class=3D"token punctuation">(</span><span class=3D"to=
ken number">0</span><span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">.</span><span class=3D"token builtin">float</span><s=
pan class=3D"token punctuation">(</span><span class=3D"token punctuation">)=
</span><span class=3D"token punctuation">.</span>to<span class=3D"token pun=
ctuation">(</span>device<span class=3D"token punctuation">)</span>

    <span class=3D"token comment"># Inference</span>
    <span class=3D"token keyword">with</span> torch<span class=3D"token pun=
ctuation">.</span>no_grad<span class=3D"token punctuation">(</span><span cl=
ass=3D"token punctuation">)</span><span class=3D"token punctuation">:</span=
>
        pred <span class=3D"token operator">=3D</span> model<span class=3D"=
token punctuation">(</span>x<span class=3D"token punctuation">)</span>
        pred <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>softmax<span class=3D"token punctuation">(</span=
>pred<span class=3D"token punctuation">,</span> dim<span class=3D"token ope=
rator">=3D</span><span class=3D"token number">1</span><span class=3D"token =
punctuation">)</span>
        pred <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>argmax<span class=3D"token punctuation">(</span>=
pred<span class=3D"token punctuation">,</span> dim<span class=3D"token oper=
ator">=3D</span><span class=3D"token number">1</span><span class=3D"token p=
unctuation">)</span>
        pred <span class=3D"token operator">=3D</span> pred<span class=3D"t=
oken punctuation">.</span>squeeze<span class=3D"token punctuation">(</span>=
<span class=3D"token punctuation">)</span><span class=3D"token punctuation"=
>.</span>cpu<span class=3D"token punctuation">(</span><span class=3D"token =
punctuation">)</span><span class=3D"token punctuation">.</span>numpy<span c=
lass=3D"token punctuation">(</span><span class=3D"token punctuation">)</spa=
n><span class=3D"token punctuation">.</span>astype<span class=3D"token punc=
tuation">(</span>np<span class=3D"token punctuation">.</span>uint8<span cla=
ss=3D"token punctuation">)</span>

    <span class=3D"token comment"># Convert prediction to RGB mask and resi=
ze to original dimensions</span>
    pred_mask <span class=3D"token operator">=3D</span> index_to_rgb_mask<s=
pan class=3D"token punctuation">(</span>pred<span class=3D"token punctuatio=
n">,</span> COLORMAP<span class=3D"token punctuation">)</span>
    pred_mask_orig_size <span class=3D"token operator">=3D</span> cv2<span =
class=3D"token punctuation">.</span>resize<span class=3D"token punctuation"=
>(</span>
        pred_mask<span class=3D"token punctuation">,</span>=20
        <span class=3D"token punctuation">(</span>original_image<span class=
=3D"token punctuation">.</span>shape<span class=3D"token punctuation">[</sp=
an><span class=3D"token number">1</span><span class=3D"token punctuation">]=
</span><span class=3D"token punctuation">,</span> original_image<span class=
=3D"token punctuation">.</span>shape<span class=3D"token punctuation">[</sp=
an><span class=3D"token number">0</span><span class=3D"token punctuation">]=
</span><span class=3D"token punctuation">)</span><span class=3D"token punct=
uation">,</span>
        interpolation<span class=3D"token operator">=3D</span>cv2<span clas=
s=3D"token punctuation">.</span>INTER_NEAREST
    <span class=3D"token punctuation">)</span>

    <span class=3D"token comment"># Create overlay (FIXED)</span>
    overlay <span class=3D"token operator">=3D</span> original_image<span c=
lass=3D"token punctuation">.</span>copy<span class=3D"token punctuation">(<=
/span><span class=3D"token punctuation">)</span>
    alpha <span class=3D"token operator">=3D</span> <span class=3D"token nu=
mber">0.5</span>
   =20
    <span class=3D"token comment"># Create binary mask for each class (back=
ground excluded)</span>
    <span class=3D"token keyword">for</span> class_idx <span class=3D"token=
 keyword">in</span> <span class=3D"token builtin">range</span><span class=
=3D"token punctuation">(</span><span class=3D"token number">1</span><span c=
lass=3D"token punctuation">,</span> <span class=3D"token builtin">len</span=
><span class=3D"token punctuation">(</span>COLORMAP<span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">:</span>
        <span class=3D"token comment"># Create mask for current class (BGR =
space)</span>
        color_bgr <span class=3D"token operator">=3D</span> np<span class=
=3D"token punctuation">.</span>array<span class=3D"token punctuation">(</sp=
an>COLORMAP_BGR<span class=3D"token punctuation">[</span>class_idx<span cla=
ss=3D"token punctuation">]</span><span class=3D"token punctuation">)</span>
        class_mask <span class=3D"token operator">=3D</span> np<span class=
=3D"token punctuation">.</span><span class=3D"token builtin">all</span><spa=
n class=3D"token punctuation">(</span>pred_mask_orig_size <span class=3D"to=
ken operator">=3D=3D</span> COLORMAP<span class=3D"token punctuation">[</sp=
an>class_idx<span class=3D"token punctuation">]</span><span class=3D"token =
punctuation">,</span> axis<span class=3D"token operator">=3D</span><span cl=
ass=3D"token operator">-</span><span class=3D"token number">1</span><span c=
lass=3D"token punctuation">)</span>
       =20
        <span class=3D"token comment"># Create colored overlay for this cla=
ss</span>
        colored_overlay <span class=3D"token operator">=3D</span> np<span c=
lass=3D"token punctuation">.</span>zeros_like<span class=3D"token punctuati=
on">(</span>overlay<span class=3D"token punctuation">)</span>
        colored_overlay<span class=3D"token punctuation">[</span>class_mask=
<span class=3D"token punctuation">]</span> <span class=3D"token operator">=
=3D</span> color_bgr
       =20
        <span class=3D"token comment"># Blend with original image</span>
        overlay <span class=3D"token operator">=3D</span> cv2<span class=3D=
"token punctuation">.</span>addWeighted<span class=3D"token punctuation">(<=
/span>overlay<span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">1</span><span class=3D"token punctuation">,</span> colored_overla=
y<span class=3D"token punctuation">,</span> alpha<span class=3D"token punct=
uation">,</span> <span class=3D"token number">0</span><span class=3D"token =
punctuation">)</span>

    <span class=3D"token comment"># Display results</span>
    cv2<span class=3D"token punctuation">.</span>imshow<span class=3D"token=
 punctuation">(</span><span class=3D"token string">"Original Image"</span><=
span class=3D"token punctuation">,</span> original_image<span class=3D"toke=
n punctuation">)</span>
    cv2<span class=3D"token punctuation">.</span>imshow<span class=3D"token=
 punctuation">(</span><span class=3D"token string">"Predicted Mask"</span><=
span class=3D"token punctuation">,</span> pred_mask_orig_size<span class=3D=
"token punctuation">)</span>
    cv2<span class=3D"token punctuation">.</span>imshow<span class=3D"token=
 punctuation">(</span><span class=3D"token string">"Segmentation Overlay"</=
span><span class=3D"token punctuation">,</span> overlay<span class=3D"token=
 punctuation">)</span>
   =20
    <span class=3D"token comment"># Save results</span>
    base_name <span class=3D"token operator">=3D</span> os<span class=3D"to=
ken punctuation">.</span>path<span class=3D"token punctuation">.</span>spli=
text<span class=3D"token punctuation">(</span>image_path<span class=3D"toke=
n punctuation">)</span><span class=3D"token punctuation">[</span><span clas=
s=3D"token number">0</span><span class=3D"token punctuation">]</span>
    cv2<span class=3D"token punctuation">.</span>imwrite<span class=3D"toke=
n punctuation">(</span><span class=3D"token string-interpolation"><span cla=
ss=3D"token string">f"</span><span class=3D"token interpolation"><span clas=
s=3D"token punctuation">{</span>OUTPUT_DIR<span class=3D"token punctuation"=
>}</span></span><span class=3D"token string">/masks/</span><span class=3D"t=
oken interpolation"><span class=3D"token punctuation">{</span>base_name<spa=
n class=3D"token punctuation">}</span></span><span class=3D"token string">_=
mask.png"</span></span><span class=3D"token punctuation">,</span> pred_mask=
_orig_size<span class=3D"token punctuation">)</span>
    cv2<span class=3D"token punctuation">.</span>imwrite<span class=3D"toke=
n punctuation">(</span><span class=3D"token string-interpolation"><span cla=
ss=3D"token string">f"</span><span class=3D"token interpolation"><span clas=
s=3D"token punctuation">{</span>OUTPUT_DIR<span class=3D"token punctuation"=
>}</span></span><span class=3D"token string">/overlays/</span><span class=
=3D"token interpolation"><span class=3D"token punctuation">{</span>base_nam=
e<span class=3D"token punctuation">}</span></span><span class=3D"token stri=
ng">_overlay.png"</span></span><span class=3D"token punctuation">,</span> o=
verlay<span class=3D"token punctuation">)</span>
   =20
    <span class=3D"token comment"># Wait for key press (0=3Dwait indefinite=
ly, 1=3Dwait 1ms)</span>
    key <span class=3D"token operator">=3D</span> cv2<span class=3D"token p=
unctuation">.</span>waitKey<span class=3D"token punctuation">(</span><span =
class=3D"token number">0</span><span class=3D"token punctuation">)</span>
    <span class=3D"token keyword">if</span> key <span class=3D"token operat=
or">=3D=3D</span> <span class=3D"token number">27</span><span class=3D"toke=
n punctuation">:</span>  <span class=3D"token comment"># ESC key to exit</s=
pan>
        <span class=3D"token keyword">break</span>

cv2<span class=3D"token punctuation">.</span>destroyAllWindows<span class=
=3D"token punctuation">(</span><span class=3D"token punctuation">)</span></=
pre></div><h3>Key Fixes:</h3><ol start=3D"1"><li><p class=3D"ds-markdown-pa=
ragraph"><strong>Color Space Consistency</strong>:</p><ul><li><p class=3D"d=
s-markdown-paragraph">Created <code>COLORMAP_BGR</code> for OpenCV operatio=
ns (BGR format)</p></li><li><p class=3D"ds-markdown-paragraph">Separated ma=
sk creation (RGB) from overlay operations (BGR)</p></li></ul></li><li><p cl=
ass=3D"ds-markdown-paragraph"><strong>Fixed Blending Logic</strong>:</p><ul=
><li><p class=3D"ds-markdown-paragraph">Instead of blending directly, creat=
e a colored overlay image</p></li><li><p class=3D"ds-markdown-paragraph">Us=
e <code>cv2.addWeighted()</code> on entire images instead of pixel subsets<=
/p></li><li><p class=3D"ds-markdown-paragraph">Process each class separatel=
y (excluding background)</p></li></ul></li><li><p class=3D"ds-markdown-para=
graph"><strong>Error Handling</strong>:</p><ul><li><p class=3D"ds-markdown-=
paragraph">Added check for valid image loading</p></li><li><p class=3D"ds-m=
arkdown-paragraph">Added ESC key to exit during display</p></li></ul></li><=
li><p class=3D"ds-markdown-paragraph"><strong>Efficient Resizing</strong>:<=
/p><ul><li><p class=3D"ds-markdown-paragraph">Only resize the prediction ma=
sk once to original dimensions</p></li><li><p class=3D"ds-markdown-paragrap=
h">Use nearest-neighbor interpolation to preserve class labels</p></li></ul=
></li></ol><h3>How the Blending Works Now:</h3><ol start=3D"1"><li><p class=
=3D"ds-markdown-paragraph">For each class (excluding background):</p><ul><l=
i><p class=3D"ds-markdown-paragraph">Create a binary mask of where the clas=
s appears</p></li><li><p class=3D"ds-markdown-paragraph">Generate a solid c=
olor image using the class's BGR color</p></li><li><p class=3D"ds-markdown-=
paragraph">Blend this colored image with the original using transparency</p=
></li></ul></li><li><p class=3D"ds-markdown-paragraph">Repeat for each clas=
s, accumulating the overlay effect</p></li></ol><p class=3D"ds-markdown-par=
agraph">This approach ensures all operations use properly sized images, avo=
iding the dimension mismatch error while maintaining correct color represen=
tation across different operations.</p></div><div class=3D"ds-flex" style=
=3D"margin-top: 12px; height: 20px; margin-bottom: 20px; align-items: cente=
r; gap: 10px;"><div class=3D"ds-flex _965abe9" style=3D"align-items: center=
; gap: 16px;"><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-ic=
on-button-text-color: #909090; --ds-icon-button-size: 20px;"><div class=3D"=
ds-icon" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg"><path d=3D"M3.65169 12.9243C3.68173 13.1045 3.74181 13.=
2748 3.80189 13.445C3.87198 13.6052 3.96211 13.7654 4.06225 13.9156C4.16238=
 14.0658 4.27253 14.206 4.4027 14.3362C4.52286 14.4663 4.66306 14.5765 4.81=
326 14.6766C4.96346 14.7768 5.11366 14.8569 5.28389 14.927C5.44411 14.9971 =
5.61434 15.0571 5.79459 15.0872C5.97483 15.1272 6.14506 15.1373 6.3253 15.1=
373V16.9196C6.30739 16.9196 6.28949 16.9195 6.27159 16.9193C5.9991 16.9158 =
5.72659 16.8859 5.4541 16.8295C5.16371 16.7694 4.88334 16.6893 4.61298 16.5=
692C4.3326 16.459 4.08226 16.3188 3.83193 16.1586C3.59161 15.9884 3.3613 15=
.7981 3.15102 15.5878C2.94074 15.3776 2.7605 15.1473 2.59027 14.9069C2.4300=
6 14.6566 2.28986 14.3962 2.17972 14.1259C2.06957 13.8455 1.97944 13.5651 1=
.91936 13.2747C1.86929 12.9843 1.83926 12.684 1.83926 12.3936V6.26532C1.839=
26 5.96492 1.86929 5.67456 1.91936 5.38417C1.97944 5.09378 2.06957 4.80338 =
2.17972 4.53302C2.28986 4.26265 2.43006 4.0023 2.59027 3.75197C2.7605 3.501=
63 2.94074 3.27132 3.15102 3.06104C3.3613 2.85076 3.59161 2.67052 3.83193 2=
.50029C4.08226 2.33006 4.3326 2.19987 4.61298 2.07971C4.88334 1.96956 5.163=
71 1.87943 5.4541 1.81935C5.74449 1.75927 6.03491 1.73926 6.3253 1.73926H12=
.3934C12.6838 1.73926 12.9842 1.75927 13.2746 1.81935C13.555 1.87943 13.835=
4 1.96956 14.1158 2.07971C14.3861 2.19987 14.6465 2.33006 14.8868 2.50029C1=
5.1371 2.67052 15.3574 2.85076 15.5677 3.06104C15.778 3.27132 15.9582 3.501=
63 16.1284 3.75197C16.2887 4.0023 16.4288 4.26265 16.539 4.53302C16.6592 4.=
80338 16.7393 5.09378 16.7994 5.38417C16.8558 5.65722 16.8858 5.93024 16.88=
92 6.21161C16.8894 6.22948 16.8895 6.24739 16.8895 6.26532H15.1271C15.1271 =
6.08508 15.1071 5.90486 15.067 5.72462C15.037 5.55439 14.9869 5.38415 14.91=
68 5.21392C14.8467 5.04369 14.7566 4.88347 14.6665 4.73327C14.5664 4.58307 =
14.4462 4.45289 14.326 4.32271C14.1959 4.19254 14.0557 4.08239 13.9055 3.98=
226C13.7553 3.88212 13.6051 3.79202 13.4348 3.72193C13.2746 3.65184 13.1044=
 3.60174 12.9242 3.5717C12.7539 3.53165 12.5737 3.51163 12.3934 3.51163H6.3=
253C6.14506 3.51163 5.97483 3.53165 5.79459 3.5717C5.61434 3.60174 5.44411 =
3.65184 5.28389 3.72193C5.11366 3.79202 4.96346 3.88212 4.81326 3.98226C4.6=
6306 4.08239 4.52286 4.19254 4.4027 4.32271C4.27253 4.45289 4.16238 4.58307=
 4.06225 4.73327C3.96211 4.88347 3.87198 5.04369 3.80189 5.21392C3.74181 5.=
38415 3.68173 5.55439 3.65169 5.72462C3.61164 5.90486 3.60164 6.08508 3.601=
64 6.26532V12.3936C3.60164 12.5638 3.61164 12.744 3.65169 12.9243Z" fill=3D=
"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.4268 8.8987 21.2566C8.64836 =
21.0964 8.42804 20.9061 8.21776 20.6959C8.00748 20.4856 7.81723 20.2553 7.6=
5701 20.015C7.4968 19.7646 7.3566 19.5043 7.24646 19.2239C7.12629 18.9535 7=
.04621 18.6731 6.98613 18.3727C6.92605 18.0823 6.89601 17.792 6.89601 17.49=
15V11.3733C6.89601 11.0729 6.92605 10.7825 6.98613 10.4922C7.04621 10.1918 =
7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 7.4968 9.10028 7.65701 8.859=
96C7.81723 8.60962 8.00748 8.37931 8.21776 8.16903C8.42804 7.95875 8.64836 =
7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 7.29785 9.66972 7.1877C9.940=
09 7.07755 10.2205 6.98745 10.5108 6.92737C10.8012 6.86729 11.0916 6.83725 =
11.392 6.83725H17.4602C17.7506 6.83725 18.041 6.86729 18.3313 6.92737C18.62=
17 6.98745 18.9021 7.07755 19.1725 7.1877C19.4529 7.29785 19.7032 7.43805 1=
9.9535 7.60828C20.1938 7.76849 20.4242 7.95875 20.6345 8.16903C20.8447 8.37=
931 21.025 8.60962 21.1952 8.85996C21.3554 9.10028 21.4956 9.36063 21.6058 =
9.64101C21.7159 9.91137 21.806 10.1918 21.8661 10.4922C21.9162 10.7825 21.9=
462 11.0729 21.9462 11.3733V17.4915C21.9462 17.792 21.9162 18.0823 21.8661 =
18.3727C21.806 18.6731 21.7159 18.9535 21.6058 19.2239C21.4956 19.5043 21.3=
554 19.7646 21.1952 20.015C21.025 20.2553 20.8447 20.4856 20.6345 20.6959C2=
0.4242 20.9061 20.1938 21.0964 19.9535 21.2566C19.7032 21.4268 19.4529 21.5=
67 19.1725 21.6772C18.9021 21.7973 18.6217 21.8774 18.3313 21.9375C18.041 2=
1.9976 17.7506 22.0276 17.4602 22.0276H11.392C11.0916 22.0276 10.8012 21.99=
76 10.5108 21.9375C10.2205 21.8774 9.94009 21.7973 9.66972 21.6772ZM10.8613=
 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 8.61965H17.4602C17.6404 8.61=
965 17.8107 8.63966 17.9909 8.6697C18.1611 8.70975 18.3314 8.75983 18.5016 =
8.82992C18.6618 8.90001 18.822 8.98012 18.9722 9.08026C19.1224 9.18039 19.2=
626 9.30055 19.3828 9.42071C19.513 9.55088 19.6231 9.69109 19.7232 9.84129C=
19.8234 9.99149 19.9035 10.1517 19.9736 10.3219C20.0437 10.4821 20.0937 10.=
6624 20.1338 10.8326C20.1638 11.0129 20.1838 11.1931 20.1838 11.3733V17.491=
5C20.1838 17.6718 20.1638 17.852 20.1338 18.0323C20.0937 18.2125 20.0437 18=
.3828 19.9736 18.543C19.9035 18.7132 19.8234 18.8734 19.7232 19.0236C19.623=
1 19.1738 19.513 19.314 19.3828 19.4342C19.2626 19.5643 19.1224 19.6845 18.=
9722 19.7846C18.822 19.8848 18.6618 19.9649 18.5016 20.035C18.3314 20.1051 =
18.1611 20.1551 17.9909 20.1952C17.8107 20.2252 17.6404 20.2452 17.4602 20.=
2452H11.392C11.2118 20.2452 11.0316 20.2252 10.8613 20.1952C10.6811 20.1551=
 10.5108 20.1051 10.3506 20.035C10.1804 19.9649 10.0202 19.8848 9.87 19.784=
6C9.72982 19.6845 9.58962 19.5643 9.45945 19.4342C9.33929 19.314 9.21913 19=
.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.7132 8.86866 18.543C8.79857 =
18.3828 8.74847 18.2125 8.71843 18.0323C8.67838 17.852 8.65836 17.6718 8.65=
836 17.4915V11.3733C8.65836 11.1931 8.67838 11.0129 8.71843 10.8326C8.74847=
 10.6624 8.79857 10.4821 8.86866 10.3219C8.93875 10.1517 9.01886 9.99149 9.=
119 9.84129C9.21913 9.69109 9.33929 9.55088 9.45945 9.42071C9.58962 9.30055=
 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 10.1804 8.90001 10.3506 8.829=
92C10.5108 8.75983 10.6811 8.70975 10.8613 8.6697Z" fill=3D"currentColor"><=
/path></svg></div></div><div class=3D"ds-icon-button" tabindex=3D"0" style=
=3D"--ds-icon-button-text-color: #909090; --ds-icon-button-size: 20px;"><di=
v class=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: 20px; op=
acity: 1;"><svg viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink"><defs><clipPath =
id=3D"clip1258_20811"><rect id=3D"=E9=87=8D=E6=96=B0=E7=94=9F=E6=88=90" wid=
th=3D"20.000000" height=3D"20.000000" fill=3D"white" fill-opacity=3D"0"></r=
ect></clipPath></defs><rect id=3D"=E9=87=8D=E6=96=B0=E7=94=9F=E6=88=90" wid=
th=3D"20.000000" height=3D"20.000000" fill=3D"#FFFFFF" fill-opacity=3D"0"><=
/rect><g clip-path=3D"url(#clip1258_20811)"><path id=3D"path" d=3D"M17.01 7=
.63L13.98 7.62C13.88 7.62 13.79 7.6 13.7 7.56C13.62 7.52 13.54 7.47 13.47 7=
.4C13.4 7.33 13.35 7.25 13.32 7.16C13.28 7.07 13.26 6.98 13.26 6.88C13.26 6=
.79 13.28 6.69 13.32 6.6C13.35 6.51 13.4 6.43 13.47 6.36C13.54 6.3 13.62 6.=
24 13.7 6.21C13.79 6.17 13.88 6.15 13.98 6.15L15.57 6.16C15.67 6.16 15.76 6=
.14 15.85 6.1C15.94 6.06 16.01 6.01 16.08 5.94C16.15 5.87 16.2 5.79 16.23 5=
.7C16.27 5.61 16.29 5.52 16.29 5.42L16.3 3.89C16.3 3.79 16.32 3.7 16.36 3.6=
1C16.39 3.52 16.44 3.44 16.51 3.37C16.58 3.3 16.66 3.25 16.74 3.21C16.83 3.=
17 16.92 3.16 17.02 3.16C17.11 3.16 17.2 3.17 17.29 3.21C17.38 3.25 17.46 3=
.3 17.52 3.37C17.59 3.44 17.64 3.52 17.68 3.61C17.71 3.7 17.73 3.79 17.73 3=
.89L17.72 6.9C17.72 7 17.71 7.09 17.67 7.18C17.63 7.27 17.58 7.34 17.52 7.4=
1C17.45 7.48 17.37 7.53 17.29 7.57C17.2 7.61 17.11 7.63 17.01 7.63Z" fill=
=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><p=
ath id=3D"path" d=3D"M2.31 16.29L2.32 13.3C2.32 13.21 2.34 13.11 2.37 13.02=
C2.41 12.93 2.46 12.85 2.53 12.78C2.6 12.71 2.67 12.66 2.76 12.62C2.85 12.5=
8 2.94 12.56 3.03 12.56L6.07 12.57C6.16 12.57 6.25 12.59 6.34 12.63C6.43 12=
.67 6.51 12.72 6.57 12.79C6.64 12.86 6.69 12.94 6.73 13.03C6.76 13.12 6.78 =
13.22 6.78 13.32C6.78 13.41 6.76 13.51 6.73 13.6C6.69 13.69 6.64 13.77 6.57=
 13.84C6.51 13.91 6.43 13.96 6.34 14C6.25 14.04 6.16 14.06 6.07 14.06L4.47 =
14.05C4.38 14.05 4.29 14.07 4.2 14.11C4.11 14.15 4.03 14.2 3.97 14.27C3.9 1=
4.34 3.85 14.42 3.81 14.51C3.78 14.6 3.76 14.7 3.76 14.8L3.75 16.29C3.75 16=
.39 3.73 16.48 3.69 16.58C3.65 16.67 3.6 16.75 3.54 16.82C3.47 16.89 3.39 1=
6.94 3.3 16.98C3.22 17.01 3.13 17.03 3.03 17.03C2.94 17.03 2.85 17.02 2.76 =
16.98C2.67 16.94 2.59 16.89 2.52 16.82C2.46 16.75 2.4 16.67 2.37 16.58C2.33=
 16.49 2.31 16.39 2.31 16.29Z" fill=3D"currentColor" fill-opacity=3D"1.0000=
00" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M9.88 18.01C9.51 18=
.01 9.15 17.99 8.79 17.94C8.42 17.89 8.07 17.82 7.71 17.73C7.36 17.63 7.02 =
17.51 6.68 17.37C6.34 17.23 6.02 17.07 5.7 16.89C5.39 16.7 5.09 16.5 4.8 16=
.28C4.52 16.05 4.25 15.81 3.99 15.55C3.74 15.29 3.5 15.02 3.29 14.73C3.07 1=
4.44 2.88 14.13 2.7 13.82L4.15 13.05C4.32 13.35 4.51 13.64 4.72 13.91C4.93 =
14.18 5.17 14.43 5.42 14.66C5.67 14.9 5.94 15.11 6.23 15.3C6.52 15.49 6.83 =
15.66 7.14 15.81C7.46 15.95 7.78 16.07 8.12 16.16C8.45 16.25 8.8 16.32 9.14=
 16.36C9.49 16.39 9.83 16.4 10.18 16.39C10.53 16.37 10.87 16.33 11.22 16.26=
C11.56 16.19 11.89 16.09 12.21 15.97C12.54 15.84 12.85 15.7 13.15 15.53C13.=
45 15.35 13.74 15.16 14.01 14.94C14.28 14.72 14.53 14.49 14.76 14.23C14.99 =
13.97 15.2 13.7 15.38 13.41C15.57 13.12 15.73 12.82 15.87 12.5C16 12.19 16.=
11 11.87 16.2 11.53C16.28 11.2 16.34 10.87 16.36 10.52C16.37 10.42 16.4 10.=
33 16.44 10.24C16.48 10.15 16.54 10.07 16.61 10C16.69 9.93 16.77 9.87 16.86=
 9.84C16.96 9.8 17.05 9.77 17.16 9.77C17.27 9.77 17.38 9.79 17.49 9.83C17.6=
 9.87 17.7 9.94 17.78 10.02C17.86 10.1 17.92 10.2 17.96 10.3C18 10.41 18.01=
 10.52 18 10.64C17.98 10.89 17.95 11.13 17.91 11.38C17.86 11.62 17.81 11.87=
 17.74 12.11C17.68 12.35 17.6 12.58 17.51 12.82C17.42 13.05 17.32 13.28 17.=
21 13.5C17.1 13.73 16.98 13.95 16.85 14.16C16.71 14.37 16.57 14.58 16.42 14=
.78C16.27 14.98 16.11 15.17 15.94 15.36C15.77 15.54 15.59 15.72 15.41 15.89=
C15.22 16.06 15.03 16.22 14.83 16.37C14.63 16.52 14.42 16.66 14.2 16.79C13.=
99 16.93 13.77 17.05 13.54 17.16C13.31 17.27 13.08 17.37 12.85 17.46C12.61 =
17.55 12.37 17.63 12.13 17.7C11.88 17.77 11.64 17.83 11.39 17.87C11.14 17.9=
2 10.89 17.96 10.63 17.98C10.38 18 10.13 18.01 9.88 18.01Z" fill=3D"current=
Color" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"p=
ath" d=3D"M2.85 10.27C2.73 10.28 2.62 10.26 2.51 10.22C2.4 10.17 2.31 10.11=
 2.23 10.03C2.14 9.95 2.08 9.85 2.04 9.74C2 9.63 1.99 9.52 2 9.41C2.03 8.98=
 2.1 8.56 2.2 8.15C2.3 7.73 2.43 7.33 2.6 6.94C2.76 6.54 2.96 6.16 3.19 5.8=
C3.41 5.44 3.67 5.1 3.95 4.77C4.24 4.45 4.54 4.15 4.88 3.88C5.21 3.6 5.56 3=
.35 5.93 3.13C6.3 2.91 6.69 2.73 7.09 2.57C7.5 2.41 7.91 2.28 8.33 2.19C8.7=
5 2.09 9.18 2.03 9.62 2.01C10.05 1.98 10.48 1.99 10.91 2.03C11.35 2.07 11.7=
7 2.14 12.19 2.25C12.61 2.36 13.02 2.5 13.42 2.67C13.81 2.84 14.19 3.04 14.=
56 3.28C14.92 3.51 15.27 3.77 15.59 4.05C15.91 4.34 16.21 4.64 16.48 4.98C1=
6.75 5.31 17 5.66 17.21 6.03L15.78 6.83C15.61 6.54 15.42 6.25 15.2 5.99C14.=
98 5.73 14.74 5.48 14.49 5.25C14.23 5.02 13.96 4.82 13.66 4.63C13.37 4.45 1=
3.07 4.29 12.75 4.15C12.44 4.01 12.11 3.9 11.77 3.82C11.44 3.73 11.1 3.67 1=
0.76 3.64C10.41 3.61 10.07 3.6 9.72 3.62C9.37 3.64 9.03 3.69 8.69 3.77C8.36=
 3.84 8.03 3.94 7.71 4.07C7.38 4.2 7.08 4.35 6.78 4.52C6.48 4.7 6.2 4.89 5.=
94 5.11C5.67 5.33 5.43 5.57 5.2 5.83C4.97 6.08 4.77 6.36 4.59 6.65C4.41 6.9=
4 4.25 7.24 4.12 7.55C3.98 7.87 3.88 8.19 3.8 8.52C3.72 8.85 3.66 9.19 3.64=
 9.53C3.63 9.62 3.6 9.72 3.56 9.81C3.52 9.9 3.46 9.98 3.39 10.05C3.32 10.12=
 3.23 10.17 3.14 10.21C3.05 10.25 2.95 10.27 2.85 10.27Z" fill=3D"currentCo=
lor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path></g></svg></div=
></div><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-butt=
on-text-color: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon=
" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg width=3D"20" h=
eight=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M18.14 9.=
428l-.003.019L17.114 15a3.774 3.774 0 0 1-1.313 2.27 3.673 3.673 0 0 1-2.43=
8.894H3.895c-.57 0-1.055-.205-1.458-.614a2.033 2.033 0 0 1-.604-1.48v-5.438=
c0-.578.201-1.071.604-1.48.402-.41.888-.614 1.458-.614h1.932l2.317-5.293c.2=
4-.548.6-.948 1.083-1.2.599-.312 1.156-.278 1.672.103.782.577 1.172 1.355 1=
.172 2.334V6.997h3.994c.638-.007 1.167.235 1.588.726.421.492.584 1.06.488 1=
.705zm-2.076-2.6c.686-.007 1.262.256 1.714.785.453.529.63 1.146.527 1.84v.0=
04l-.005.02v.003l-1.022 5.552a3.943 3.943 0 0 1-1.37 2.368 3.838 3.838 0 0 =
1-2.545.933H3.895a2.137 2.137 0 0 1-1.576-.663 2.203 2.203 0 0 1-.652-1.6v-=
5.437c0-.622.218-1.159.652-1.6.434-.44.962-.663 1.576-.663H5.72l2.273-5.192=
c.254-.58.64-1.01 1.159-1.282.32-.167.64-.246.953-.227.315.02.613.137.893.3=
44.824.608 1.24 1.437 1.24 2.47v2.345h3.827zM9.741 3.063c-.247.128-.437.344=
-.57.647L6.708 9.34v7.683h6.655a2.59 2.59 0 0 0 1.72-.63c.498-.42.807-.955.=
926-1.601l1.02-5.544a.936.936 0 0 0-.225-.773.917.917 0 0 0-.739-.335h-4.55=
7a.567.567 0 0 1-.562-.571V4.483c0-.591-.236-1.061-.708-1.41-.143-.105-.309=
-.109-.497-.01zm7.124 6.157a.766.766 0 0 0-.186-.636.753.753 0 0 0-.612-.27=
6h-4.559a.734.734 0 0 1-.728-.74V4.483c0-.537-.21-.956-.64-1.273a.233.233 0=
 0 0-.137-.05.387.387 0 0 0-.185.053c-.208.108-.374.291-.495.566m0 0L6.874 =
9.375v7.479h6.489c.609 0 1.145-.197 1.614-.592.468-.396.757-.894.869-1.502l=
1.02-5.54M3.35 16.623c.152.155.33.23.545.23h1.522V9.85H3.895a.732.732 0 0 0=
-.545.23.755.755 0 0 0-.226.553v5.437c0 .218.074.4.226.553zm.545-6.941a.897=
.897 0 0 0-.663.278.924.924 0 0 0-.274.673v5.437c0 .263.091.487.274.673.183=
.186.404.28.663.28h1.688V9.681H3.895z" fill=3D"currentColor"></path><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M18.137 9.447l.004-.02a2.04=
4 2.044 0 0 0-.488-1.704c-.421-.491-.95-.733-1.588-.726h-2.282l1.584 1.142h=
.698a.917.917 0 0 1 .739.335.936.936 0 0 1 .225.773l-1.02 5.543a2.663 2.663=
 0 0 1-.926 1.602 2.59 2.59 0 0 1-1.72.63H6.708V9.34L9.171 3.71c.133-.303.3=
23-.519.57-.647.188-.099.354-.095.497.01.472.349.708.819.708 1.41v.467l1.12=
5.811V4.483c0-.98-.39-1.757-1.171-2.334-.517-.38-1.074-.415-1.673-.103-.482=
.252-.843.652-1.083 1.2L5.827 8.54H3.895c-.57 0-1.056.205-1.458.614a2.033 2=
.033 0 0 0-.604 1.48v5.437c0 .578.201 1.072.604 1.48.403.41.889.615 1.458.6=
15h9.468c.918 0 1.731-.299 2.438-.895A3.774 3.774 0 0 0 17.114 15l1.023-5.5=
53zm-14.242.235a.897.897 0 0 0-.663.278.924.924 0 0 0-.274.673v5.437c0 .263=
.091.487.274.673.183.186.404.28.663.28h1.688V9.681H3.895z" fill=3D"currentC=
olor"></path><path d=3D"M10.946 7.568c0 .316.252.571.563.571h3.858l-1.584-1=
.142h-1.712V5.76l-1.125-.811v2.618z" fill=3D"currentColor"></path></svg></d=
iv></div><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-bu=
tton-text-color: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-ic=
on" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg width=3D"20"=
 height=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.o=
rg/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M18.304=
 10.543v.004a2.214 2.214 0 0 1-.526 1.84c-.452.528-1.028.792-1.714.784h-3.8=
27v2.345c0 1.034-.416 1.863-1.24 2.471-.28.207-.578.324-.893.343-.314.02-.6=
32-.06-.953-.226-.519-.271-.905-.702-1.159-1.282l-2.273-5.193H3.895a2.136 2=
.136 0 0 1-1.576-.663 2.203 2.203 0 0 1-.652-1.6V3.93c0-.623.218-1.16.652-1=
.6.434-.441.963-.663 1.576-.663h9.468c.957 0 1.807.311 2.544.933a3.943 3.94=
3 0 0 1 1.37 2.368L18.3 10.52v.002l.004.02zm-1.19-5.544a3.774 3.774 0 0 0-1=
.313-2.27 3.673 3.673 0 0 0-2.438-.894H3.895c-.57 0-1.055.205-1.458.614a2.0=
33 2.033 0 0 0-.604 1.48v5.437c0 .578.201 1.072.604 1.48.402.41.888.615 1.4=
58.615h1.932l2.317 5.292c.24.549.6.949 1.083 1.2.599.313 1.156.279 1.672-.1=
02.782-.577 1.172-1.355 1.172-2.335v-2.513h3.994c.638.007 1.167-.235 1.588-=
.727.421-.491.584-1.06.488-1.704l-.004-.02L17.114 5zM9.819 16.787c.076.04.1=
37.053.185.052a.233.233 0 0 0 .137-.05c.43-.316.64-.735.64-1.273v-3.084c0-.=
41.327-.74.729-.74h4.558a.752.752 0 0 0 .612-.277.766.766 0 0 0 .186-.635l-=
1.02-5.54a2.495 2.495 0 0 0-.869-1.502 2.426 2.426 0 0 0-1.613-.592H6.874v7=
.48l2.449 5.595m-2.615-5.56V2.978h6.655c.648 0 1.221.21 1.72.63.498.42.807.=
954.926 1.601l1.02 5.543a.936.936 0 0 1-.225.774.917.917 0 0 1-.739.335h-4.=
557a.567.567 0 0 0-.562.57v3.085c0 .592-.236 1.062-.708 1.41-.143.106-.309.=
11-.497.01-.247-.128-.437-.343-.57-.647l-2.463-5.628zM3.35 3.376a.754.754 0=
 0 0-.226.554v5.436c0 .218.074.4.226.554.152.154.33.23.545.23h1.522V3.146H3=
.895a.731.731 0 0 0-.545.23zm2.233-.398v7.34H3.895a.897.897 0 0 1-.663-.279=
.925.925 0 0 1-.274-.673V3.93c0-.263.091-.487.274-.673a.895.895 0 0 1 .663-=
.28h1.688zm4.235 13.809c-.208-.108-.375-.292-.495-.566l.495.566z" fill=3D"c=
urrentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M15.801 2.73a3.774 3.774 0 0 1 1.313 2.269l1.023 5.554.004.019a2.044 2.044 =
0 0 1-.488 1.704c-.421.492-.95.734-1.588.727h-3.994v2.513c0 .98-.39 1.758-1=
.171 2.335-.517.38-1.074.415-1.673.102-.482-.251-.843-.651-1.083-1.2l-2.317=
-5.292H3.895c-.57 0-1.056-.205-1.458-.614a2.033 2.033 0 0 1-.604-1.48V3.93c=
0-.579.201-1.072.604-1.481.403-.41.889-.614 1.458-.614h9.468c.918 0 1.731.2=
98 2.438.894zm-2.438.248c.648 0 1.221.21 1.72.63.498.42.807.954.926 1.601l1=
.02 5.543a.936.936 0 0 1-.225.774.917.917 0 0 1-.739.335h-4.557a.567.567 0 =
0 0-.562.57v3.085c0 .592-.236 1.062-.708 1.41-.143.106-.309.11-.497.01-.247=
-.128-.437-.343-.57-.647l-2.463-5.628V2.978h6.655zm-9.468 7.34a.897.897 0 0=
 1-.663-.279.925.925 0 0 1-.274-.673V3.93c0-.263.091-.487.274-.673a.895.895=
 0 0 1 .663-.28h1.688v7.341H3.895z" fill=3D"currentColor"></path></svg></di=
v></div></div><div style=3D"flex: 1 1 0%;"></div></div></div><div class=3D"=
_9663006"><div class=3D"fbb737a4">fix below.
Traceback (most recent call last):
  File "C:\Users\RYZEN\Multiclass-Segmentation-in-PyTorch\infer.py", line 8=
8, in &lt;module&gt;
    cv2.imshow("Original Image", original_image)
cv2.error: OpenCV(4.11.0) D:\a\opencv-python\opencv-python\opencv\modules\h=
ighgui\src\window.cpp:1301: error: (-2:Unspecified error) The function is n=
ot implemented. Rebuild the library with Windows, GTK+ 2.x or Cocoa support=
. If you are on Ubuntu or Debian, install libgtk2.0-dev and pkg-config, the=
n re-run cmake or configure script in function 'cvShowImage'</div><div clas=
s=3D"e13328ad _3a26104"><div class=3D"_425ea0b"><div class=3D"ds-flex _78e0=
558" style=3D"align-items: flex-end; gap: 0px;"><div class=3D"ds-icon-butto=
n" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #909090; --ds-icon-=
button-size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 20px; width:=
 20px; height: 20px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24"=
 fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M3.65169 12.=
9243C3.68173 13.1045 3.74181 13.2748 3.80189 13.445C3.87198 13.6052 3.96211=
 13.7654 4.06225 13.9156C4.16238 14.0658 4.27253 14.206 4.4027 14.3362C4.52=
286 14.4663 4.66306 14.5765 4.81326 14.6766C4.96346 14.7768 5.11366 14.8569=
 5.28389 14.927C5.44411 14.9971 5.61434 15.0571 5.79459 15.0872C5.97483 15.=
1272 6.14506 15.1373 6.3253 15.1373V16.9196C6.30739 16.9196 6.28949 16.9195=
 6.27159 16.9193C5.9991 16.9158 5.72659 16.8859 5.4541 16.8295C5.16371 16.7=
694 4.88334 16.6893 4.61298 16.5692C4.3326 16.459 4.08226 16.3188 3.83193 1=
6.1586C3.59161 15.9884 3.3613 15.7981 3.15102 15.5878C2.94074 15.3776 2.760=
5 15.1473 2.59027 14.9069C2.43006 14.6566 2.28986 14.3962 2.17972 14.1259C2=
.06957 13.8455 1.97944 13.5651 1.91936 13.2747C1.86929 12.9843 1.83926 12.6=
84 1.83926 12.3936V6.26532C1.83926 5.96492 1.86929 5.67456 1.91936 5.38417C=
1.97944 5.09378 2.06957 4.80338 2.17972 4.53302C2.28986 4.26265 2.43006 4.0=
023 2.59027 3.75197C2.7605 3.50163 2.94074 3.27132 3.15102 3.06104C3.3613 2=
.85076 3.59161 2.67052 3.83193 2.50029C4.08226 2.33006 4.3326 2.19987 4.612=
98 2.07971C4.88334 1.96956 5.16371 1.87943 5.4541 1.81935C5.74449 1.75927 6=
.03491 1.73926 6.3253 1.73926H12.3934C12.6838 1.73926 12.9842 1.75927 13.27=
46 1.81935C13.555 1.87943 13.8354 1.96956 14.1158 2.07971C14.3861 2.19987 1=
4.6465 2.33006 14.8868 2.50029C15.1371 2.67052 15.3574 2.85076 15.5677 3.06=
104C15.778 3.27132 15.9582 3.50163 16.1284 3.75197C16.2887 4.0023 16.4288 4=
.26265 16.539 4.53302C16.6592 4.80338 16.7393 5.09378 16.7994 5.38417C16.85=
58 5.65722 16.8858 5.93024 16.8892 6.21161C16.8894 6.22948 16.8895 6.24739 =
16.8895 6.26532H15.1271C15.1271 6.08508 15.1071 5.90486 15.067 5.72462C15.0=
37 5.55439 14.9869 5.38415 14.9168 5.21392C14.8467 5.04369 14.7566 4.88347 =
14.6665 4.73327C14.5664 4.58307 14.4462 4.45289 14.326 4.32271C14.1959 4.19=
254 14.0557 4.08239 13.9055 3.98226C13.7553 3.88212 13.6051 3.79202 13.4348=
 3.72193C13.2746 3.65184 13.1044 3.60174 12.9242 3.5717C12.7539 3.53165 12.=
5737 3.51163 12.3934 3.51163H6.3253C6.14506 3.51163 5.97483 3.53165 5.79459=
 3.5717C5.61434 3.60174 5.44411 3.65184 5.28389 3.72193C5.11366 3.79202 4.9=
6346 3.88212 4.81326 3.98226C4.66306 4.08239 4.52286 4.19254 4.4027 4.32271=
C4.27253 4.45289 4.16238 4.58307 4.06225 4.73327C3.96211 4.88347 3.87198 5.=
04369 3.80189 5.21392C3.74181 5.38415 3.68173 5.55439 3.65169 5.72462C3.611=
64 5.90486 3.60164 6.08508 3.60164 6.26532V12.3936C3.60164 12.5638 3.61164 =
12.744 3.65169 12.9243Z" fill=3D"currentColor"></path><path fill-rule=3D"ev=
enodd" clip-rule=3D"evenodd" d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 2=
1.4268 8.8987 21.2566C8.64836 21.0964 8.42804 20.9061 8.21776 20.6959C8.007=
48 20.4856 7.81723 20.2553 7.65701 20.015C7.4968 19.7646 7.3566 19.5043 7.2=
4646 19.2239C7.12629 18.9535 7.04621 18.6731 6.98613 18.3727C6.92605 18.082=
3 6.89601 17.792 6.89601 17.4915V11.3733C6.89601 11.0729 6.92605 10.7825 6.=
98613 10.4922C7.04621 10.1918 7.12629 9.91137 7.24646 9.64101C7.3566 9.3606=
3 7.4968 9.10028 7.65701 8.85996C7.81723 8.60962 8.00748 8.37931 8.21776 8.=
16903C8.42804 7.95875 8.64836 7.76849 8.8987 7.60828C9.13902 7.43805 9.3993=
6 7.29785 9.66972 7.1877C9.94009 7.07755 10.2205 6.98745 10.5108 6.92737C10=
.8012 6.86729 11.0916 6.83725 11.392 6.83725H17.4602C17.7506 6.83725 18.041=
 6.86729 18.3313 6.92737C18.6217 6.98745 18.9021 7.07755 19.1725 7.1877C19.=
4529 7.29785 19.7032 7.43805 19.9535 7.60828C20.1938 7.76849 20.4242 7.9587=
5 20.6345 8.16903C20.8447 8.37931 21.025 8.60962 21.1952 8.85996C21.3554 9.=
10028 21.4956 9.36063 21.6058 9.64101C21.7159 9.91137 21.806 10.1918 21.866=
1 10.4922C21.9162 10.7825 21.9462 11.0729 21.9462 11.3733V17.4915C21.9462 1=
7.792 21.9162 18.0823 21.8661 18.3727C21.806 18.6731 21.7159 18.9535 21.605=
8 19.2239C21.4956 19.5043 21.3554 19.7646 21.1952 20.015C21.025 20.2553 20.=
8447 20.4856 20.6345 20.6959C20.4242 20.9061 20.1938 21.0964 19.9535 21.256=
6C19.7032 21.4268 19.4529 21.567 19.1725 21.6772C18.9021 21.7973 18.6217 21=
.8774 18.3313 21.9375C18.041 21.9976 17.7506 22.0276 17.4602 22.0276H11.392=
C11.0916 22.0276 10.8012 21.9976 10.5108 21.9375C10.2205 21.8774 9.94009 21=
.7973 9.66972 21.6772ZM10.8613 8.6697C11.0316 8.63966 11.2118 8.61965 11.39=
2 8.61965H17.4602C17.6404 8.61965 17.8107 8.63966 17.9909 8.6697C18.1611 8.=
70975 18.3314 8.75983 18.5016 8.82992C18.6618 8.90001 18.822 8.98012 18.972=
2 9.08026C19.1224 9.18039 19.2626 9.30055 19.3828 9.42071C19.513 9.55088 19=
.6231 9.69109 19.7232 9.84129C19.8234 9.99149 19.9035 10.1517 19.9736 10.32=
19C20.0437 10.4821 20.0937 10.6624 20.1338 10.8326C20.1638 11.0129 20.1838 =
11.1931 20.1838 11.3733V17.4915C20.1838 17.6718 20.1638 17.852 20.1338 18.0=
323C20.0937 18.2125 20.0437 18.3828 19.9736 18.543C19.9035 18.7132 19.8234 =
18.8734 19.7232 19.0236C19.6231 19.1738 19.513 19.314 19.3828 19.4342C19.26=
26 19.5643 19.1224 19.6845 18.9722 19.7846C18.822 19.8848 18.6618 19.9649 1=
8.5016 20.035C18.3314 20.1051 18.1611 20.1551 17.9909 20.1952C17.8107 20.22=
52 17.6404 20.2452 17.4602 20.2452H11.392C11.2118 20.2452 11.0316 20.2252 1=
0.8613 20.1952C10.6811 20.1551 10.5108 20.1051 10.3506 20.035C10.1804 19.96=
49 10.0202 19.8848 9.87 19.7846C9.72982 19.6845 9.58962 19.5643 9.45945 19.=
4342C9.33929 19.314 9.21913 19.1738 9.119 19.0236C9.01886 18.8734 8.93875 1=
8.7132 8.86866 18.543C8.79857 18.3828 8.74847 18.2125 8.71843 18.0323C8.678=
38 17.852 8.65836 17.6718 8.65836 17.4915V11.3733C8.65836 11.1931 8.67838 1=
1.0129 8.71843 10.8326C8.74847 10.6624 8.79857 10.4821 8.86866 10.3219C8.93=
875 10.1517 9.01886 9.99149 9.119 9.84129C9.21913 9.69109 9.33929 9.55088 9=
.45945 9.42071C9.58962 9.30055 9.72982 9.18039 9.87 9.08026C10.0202 8.98012=
 10.1804 8.90001 10.3506 8.82992C10.5108 8.75983 10.6811 8.70975 10.8613 8.=
6697Z" fill=3D"currentColor"></path></svg></div></div><div class=3D"ds-icon=
-button" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #909090; --ds=
-icon-button-size: 20px; margin-left: 14px; opacity: 1;"><div class=3D"ds-i=
con" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg width=3D"20=
" height=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.71=
2 2.79a1.854 1.854 0 0 1 2.623 0l1.673 1.672a1.854 1.854 0 0 1 0 2.623l-9.7=
14 9.714a2.91 2.91 0 0 1-2.058.853H1.945a.8.8 0 0 1-.8-.8v-2.29c0-.773.307-=
1.513.853-2.058l9.714-9.715zm1.492 1.13c-.1-.1-.261-.1-.361 0l-1.327 1.326 =
2.035 2.035 1.327-1.326c.1-.1.1-.262 0-.362L13.204 3.92zm-.783 4.491l-2.035=
-2.034-7.258 7.257a1.31 1.31 0 0 0-.384.927v1.492h1.492c.348 0 .681-.138.92=
7-.384l7.258-7.258z" fill=3D"currentColor"></path><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M17.772 17.608c.35 0 .633-.283.633-.633v-.492=
a.633.633 0 0 0-.633-.633H9.858L8.1 17.608h9.672z" fill=3D"currentColor"></=
path></svg></div></div></div></div></div></div><div class=3D"_4f9bf79 _43c0=
5b5"><div class=3D"_7eb2358 _58dfa60"><svg viewBox=3D"0 0 30 30" fill=3D"no=
ne" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1=
999/xlink"><path id=3D"path" d=3D"M27.501 8.46875C27.249 8.3457 27.1406 8.5=
8008 26.9932 8.69922C26.9434 8.73828 26.9004 8.78906 26.8584 8.83398C26.490=
2 9.22852 26.0605 9.48633 25.5 9.45508C24.6787 9.41016 23.9785 9.66797 23.3=
594 10.2969C23.2275 9.52148 22.79 9.05859 22.125 8.76172C21.7764 8.60742 21=
.4238 8.45312 21.1807 8.11719C21.0098 7.87891 20.9639 7.61328 20.8779 7.351=
56C20.8242 7.19336 20.7695 7.03125 20.5879 7.00391C20.3906 6.97266 20.3135 =
7.13867 20.2363 7.27734C19.9258 7.84375 19.8066 8.46875 19.8174 9.10156C19.=
8447 10.5234 20.4453 11.6562 21.6367 12.4629C21.7725 12.5547 21.8076 12.648=
4 21.7646 12.7832C21.6836 13.0605 21.5869 13.3301 21.501 13.6074C21.4473 13=
.7852 21.3662 13.8242 21.1768 13.7461C20.5225 13.4727 19.957 13.0684 19.458=
 12.5781C18.6104 11.7578 17.8438 10.8516 16.8877 10.1426C16.6631 9.97656 16=
.4395 9.82227 16.207 9.67578C15.2314 8.72656 16.335 7.94727 16.5898 7.85547=
C16.8574 7.75977 16.6826 7.42773 15.8193 7.43164C14.957 7.43555 14.167 7.72=
461 13.1611 8.10938C13.0137 8.16797 12.8594 8.21094 12.7002 8.24414C11.7871=
 8.07227 10.8389 8.0332 9.84766 8.14453C7.98242 8.35352 6.49219 9.23633 5.3=
9648 10.7441C4.08105 12.5547 3.77148 14.6133 4.15039 16.7617C4.54883 19.023=
4 5.70215 20.8984 7.47559 22.3633C9.31348 23.8809 11.4307 24.625 13.8457 24=
.4824C15.3125 24.3984 16.9463 24.2012 18.7881 22.6406C19.2529 22.8711 19.74=
02 22.9629 20.5498 23.0332C21.1729 23.0918 21.7725 23.002 22.2373 22.9062C2=
2.9648 22.752 22.9141 22.0781 22.6514 21.9531C20.5186 20.959 20.9863 21.363=
3 20.5605 21.0371C21.6445 19.752 23.2783 18.418 23.917 14.0977C23.9668 13.7=
539 23.9238 13.5391 23.917 13.2598C23.9131 13.0918 23.9512 13.0254 24.1445 =
13.0059C24.6787 12.9453 25.1973 12.7988 25.6738 12.5352C27.0557 11.7793 27.=
6123 10.5391 27.7441 9.05078C27.7637 8.82422 27.7402 8.58789 27.501 8.46875=
ZM15.46 21.8613C13.3926 20.2344 12.3906 19.6992 11.9766 19.7227C11.5898 19.=
7441 11.6592 20.1875 11.7441 20.4766C11.833 20.7617 11.9492 20.959 12.1123 =
21.209C12.2246 21.375 12.3018 21.623 12 21.8066C11.334 22.2207 10.1768 21.6=
68 10.1221 21.6406C8.77539 20.8477 7.64941 19.7988 6.85547 18.3652C6.08984 =
16.9844 5.64453 15.5039 5.57129 13.9238C5.55176 13.541 5.66406 13.4062 6.04=
297 13.3379C6.54199 13.2461 7.05762 13.2266 7.55664 13.2988C9.66602 13.6074=
 11.4619 14.5527 12.9668 16.0469C13.8262 16.9004 14.4766 17.918 15.1465 18.=
9121C15.8584 19.9688 16.625 20.9746 17.6006 21.7988C17.9443 22.0879 18.2197=
 22.3086 18.4824 22.4707C17.6895 22.5586 16.3652 22.5781 15.46 21.8613ZM16.=
4502 15.4805C16.4502 15.3105 16.5859 15.1758 16.7568 15.1758C16.7949 15.175=
8 16.8301 15.1836 16.8613 15.1953C16.9033 15.2109 16.9424 15.2344 16.9727 1=
5.2695C17.0273 15.3223 17.0586 15.4004 17.0586 15.4805C17.0586 15.6504 16.9=
229 15.7852 16.7529 15.7852C16.582 15.7852 16.4502 15.6504 16.4502 15.4805Z=
M19.5273 17.0625C19.3301 17.1426 19.1328 17.2129 18.9434 17.2207C18.6494 17=
.2344 18.3281 17.1152 18.1533 16.9688C17.8828 16.7422 17.6895 16.6152 17.60=
74 16.2168C17.5732 16.0469 17.5928 15.7852 17.623 15.6348C17.6934 15.3105 1=
7.6152 15.1035 17.3877 14.9141C17.2012 14.7598 16.9658 14.7188 16.7061 14.7=
188C16.6094 14.7188 16.5205 14.6758 16.4541 14.6406C16.3457 14.5859 16.2568=
 14.4512 16.3418 14.2852C16.3691 14.2324 16.501 14.1016 16.5322 14.0781C16.=
8838 13.877 17.29 13.9434 17.666 14.0938C18.0146 14.2363 18.2773 14.498 18.=
6562 14.8672C19.0439 15.3145 19.1133 15.4395 19.334 15.7734C19.5078 16.0371=
 19.667 16.3066 19.7754 16.6152C19.8408 16.8066 19.7559 16.9648 19.5273 17.=
0625Z" fill-rule=3D"nonzero" fill=3D"#4D6BFE"></path></svg></div><div class=
=3D"_48edb25"><div class=3D"_58a6d71 _19db599"><div class=3D"ds-icon _7580a=
cb" style=3D"font-size: 12px; width: 12px; height: 12px;"><svg width=3D"20"=
 height=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.o=
rg/2000/svg"><path d=3D"M2.656 17.344c-1.016-1.015-1.15-2.75-.313-4.925.325=
-.825.73-1.617 1.205-2.365L3.582 10l-.033-.054c-.5-.799-.91-1.596-1.206-2.3=
65-.836-2.175-.703-3.91.313-4.926.56-.56 1.364-.86 2.335-.86 1.425 0 3.168.=
636 4.957 1.756l.053.034.053-.034c1.79-1.12 3.532-1.757 4.957-1.757.972 0 1=
.776.3 2.335.86 1.014 1.015 1.148 2.752.312 4.926a13.892 13.892 0 0 1-1.206=
 2.365l-.034.054.034.053c.5.8.91 1.596 1.205 2.365.837 2.175.704 3.911-.311=
 4.926-.56.56-1.364.861-2.335.861-1.425 0-3.168-.637-4.957-1.757L10 16.415l=
-.053.033c-1.79 1.12-3.532 1.757-4.957 1.757-.972 0-1.776-.3-2.335-.86zm13.=
631-4.399c-.187-.488-.429-.988-.71-1.492l-.075-.132-.092.12a22.075 22.075 0=
 0 1-3.968 3.968l-.12.093.132.074c1.308.734 2.559 1.162 3.556 1.162.563 0 1=
.006-.138 1.298-.43.3-.3.436-.774.428-1.346-.008-.575-.159-1.264-.449-2.017=
zm-6.345 1.65l.058.042.058-.042a19.881 19.881 0 0 0 4.551-4.537l.043-.058-.=
043-.058a20.123 20.123 0 0 0-2.093-2.458 19.732 19.732 0 0 0-2.458-2.08L10 =
5.364l-.058.042A19.883 19.883 0 0 0 5.39 9.942L5.348 10l.042.059c.631.874 1=
.332 1.695 2.094 2.457a19.74 19.74 0 0 0 2.458 2.08zm6.366-10.902c-.293-.29=
3-.736-.431-1.298-.431-.998 0-2.248.429-3.556 1.163l-.132.074.12.092a21.938=
 21.938 0 0 1 3.968 3.968l.092.12.074-.132c.282-.504.524-1.004.711-1.492.29=
-.753.442-1.442.45-2.017.007-.572-.129-1.045-.429-1.345zM3.712 7.055c.202.5=
14.44 1.013.712 1.493l.074.13.092-.119a21.94 21.94 0 0 1 3.968-3.968l.12-.0=
92-.132-.074C7.238 3.69 5.987 3.262 4.99 3.262c-.563 0-1.006.138-1.298.43-.=
3.301-.436.774-.428 1.346.007.575.159 1.264.448 2.017zm0 5.89c-.29.753-.44 =
1.442-.448 2.017-.008.572.127 1.045.428 1.345.293.293.736.431 1.298.431.997=
 0 2.247-.428 3.556-1.162l.131-.074-.12-.093a21.94 21.94 0 0 1-3.967-3.968l=
-.093-.12-.074.132a11.712 11.712 0 0 0-.71 1.492z" fill=3D"currentColor" st=
roke=3D"currentColor" stroke-width=3D".1"></path><path d=3D"M10.706 11.704A=
1.843 1.843 0 0 1 8.155 10a1.845 1.845 0 1 1 2.551 1.704z" fill=3D"currentC=
olor" stroke=3D"currentColor" stroke-width=3D".2"></path></svg></div>Though=
t for 7 seconds<div class=3D"ds-icon _54f4262" style=3D"font-size: 10px; wi=
dth: 10px; height: 10px; transform: rotate(180deg);"><svg width=3D"10" heig=
ht=3D"6" viewBox=3D"0 0 10 6" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg"><path d=3D"M5.786 4.167L2.765 1.259c-.416-.4-.985-.482-1.273-.183-.28=
7.298-.183.864.233 1.264l3.021 2.908c.416.4.986.482 1.273.184.287-.299.183-=
.865-.233-1.265z" fill=3D"currentColor"></path><path d=3D"M8.197 1.206L5.28=
8 4.208c-.4.413-.484.982-.187 1.27.298.289.864.187 1.265-.227L9.274 2.25c.4=
01-.414.485-.983.187-1.271-.297-.288-.863-.187-1.264.227z" fill=3D"currentC=
olor"></path></svg></div></div><div class=3D"e1675d8b"><div class=3D"_9ecc9=
3a"></div>We are encountering an error with `cv2.imshow` which is related t=
o the backend of OpenCV on Windows. This is a common issue when OpenCV is n=
ot compiled with GUI support. Since we are on Windows, we might not have th=
e necessary libraries for the GUI functions.<div style=3D"height: 6px;"></d=
iv><div style=3D"height: 6px;"></div>However, note that the error also sugg=
ests that we might be in an environment that doesn't support GUI (like a re=
mote server without display). But if we are running locally, we can try to =
fix it by reinstalling OpenCV with the correct dependencies, but that might=
 be cumbersome.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;=
"></div>Alternatively, we can avoid using `cv2.imshow` and instead just sav=
e the images. Since we are already saving the overlays and masks, we can re=
move the display part.<div style=3D"height: 6px;"></div><div style=3D"heigh=
t: 6px;"></div>Let's adjust the script to remove the display part and only =
save the results.<div style=3D"height: 6px;"></div><div style=3D"height: 6p=
x;"></div>Here's the modified version without the display:</div></div><div =
class=3D"ds-markdown ds-markdown--block" style=3D"--ds-md-zoom: 1.143;"><p =
class=3D"ds-markdown-paragraph">The error occurs because your OpenCV instal=
lation lacks GUI support (specifically, it's missing the necessary backend =
for displaying images). This is common in headless or minimal OpenCV instal=
lations. Here's the fixed script that removes the display functionality and=
 focuses on saving the results:</p><div class=3D"md-code-block md-code-bloc=
k-light"><div class=3D"md-code-block-banner-wrap"><div class=3D"md-code-blo=
ck-banner md-code-block-banner-lite"><div class=3D"_121d384"><div class=3D"=
d2a24f03"><span class=3D"d813de27">python</span></div><div class=3D"d2a24f0=
3"><div class=3D"efa13877"><div role=3D"button" class=3D"ds-button ds-butto=
n--secondary ds-button--borderless ds-button--rect ds-button--m _7db3914" t=
abindex=3D"0" style=3D"margin-right: 8px; font-size: 13px; height: 28px; pa=
dding: 0px 4px; --button-text-color: var(--dsr-text-2);"><div class=3D"ds-b=
utton__icon"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; =
height: 16px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M3.65169 12.9243C=
3.68173 13.1045 3.74181 13.2748 3.80189 13.445C3.87198 13.6052 3.96211 13.7=
654 4.06225 13.9156C4.16238 14.0658 4.27253 14.206 4.4027 14.3362C4.52286 1=
4.4663 4.66306 14.5765 4.81326 14.6766C4.96346 14.7768 5.11366 14.8569 5.28=
389 14.927C5.44411 14.9971 5.61434 15.0571 5.79459 15.0872C5.97483 15.1272 =
6.14506 15.1373 6.3253 15.1373V16.9196C6.30739 16.9196 6.28949 16.9195 6.27=
159 16.9193C5.9991 16.9158 5.72659 16.8859 5.4541 16.8295C5.16371 16.7694 4=
.88334 16.6893 4.61298 16.5692C4.3326 16.459 4.08226 16.3188 3.83193 16.158=
6C3.59161 15.9884 3.3613 15.7981 3.15102 15.5878C2.94074 15.3776 2.7605 15.=
1473 2.59027 14.9069C2.43006 14.6566 2.28986 14.3962 2.17972 14.1259C2.0695=
7 13.8455 1.97944 13.5651 1.91936 13.2747C1.86929 12.9843 1.83926 12.684 1.=
83926 12.3936V6.26532C1.83926 5.96492 1.86929 5.67456 1.91936 5.38417C1.979=
44 5.09378 2.06957 4.80338 2.17972 4.53302C2.28986 4.26265 2.43006 4.0023 2=
.59027 3.75197C2.7605 3.50163 2.94074 3.27132 3.15102 3.06104C3.3613 2.8507=
6 3.59161 2.67052 3.83193 2.50029C4.08226 2.33006 4.3326 2.19987 4.61298 2.=
07971C4.88334 1.96956 5.16371 1.87943 5.4541 1.81935C5.74449 1.75927 6.0349=
1 1.73926 6.3253 1.73926H12.3934C12.6838 1.73926 12.9842 1.75927 13.2746 1.=
81935C13.555 1.87943 13.8354 1.96956 14.1158 2.07971C14.3861 2.19987 14.646=
5 2.33006 14.8868 2.50029C15.1371 2.67052 15.3574 2.85076 15.5677 3.06104C1=
5.778 3.27132 15.9582 3.50163 16.1284 3.75197C16.2887 4.0023 16.4288 4.2626=
5 16.539 4.53302C16.6592 4.80338 16.7393 5.09378 16.7994 5.38417C16.8558 5.=
65722 16.8858 5.93024 16.8892 6.21161C16.8894 6.22948 16.8895 6.24739 16.88=
95 6.26532H15.1271C15.1271 6.08508 15.1071 5.90486 15.067 5.72462C15.037 5.=
55439 14.9869 5.38415 14.9168 5.21392C14.8467 5.04369 14.7566 4.88347 14.66=
65 4.73327C14.5664 4.58307 14.4462 4.45289 14.326 4.32271C14.1959 4.19254 1=
4.0557 4.08239 13.9055 3.98226C13.7553 3.88212 13.6051 3.79202 13.4348 3.72=
193C13.2746 3.65184 13.1044 3.60174 12.9242 3.5717C12.7539 3.53165 12.5737 =
3.51163 12.3934 3.51163H6.3253C6.14506 3.51163 5.97483 3.53165 5.79459 3.57=
17C5.61434 3.60174 5.44411 3.65184 5.28389 3.72193C5.11366 3.79202 4.96346 =
3.88212 4.81326 3.98226C4.66306 4.08239 4.52286 4.19254 4.4027 4.32271C4.27=
253 4.45289 4.16238 4.58307 4.06225 4.73327C3.96211 4.88347 3.87198 5.04369=
 3.80189 5.21392C3.74181 5.38415 3.68173 5.55439 3.65169 5.72462C3.61164 5.=
90486 3.60164 6.08508 3.60164 6.26532V12.3936C3.60164 12.5638 3.61164 12.74=
4 3.65169 12.9243Z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd=
" clip-rule=3D"evenodd" d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.426=
8 8.8987 21.2566C8.64836 21.0964 8.42804 20.9061 8.21776 20.6959C8.00748 20=
.4856 7.81723 20.2553 7.65701 20.015C7.4968 19.7646 7.3566 19.5043 7.24646 =
19.2239C7.12629 18.9535 7.04621 18.6731 6.98613 18.3727C6.92605 18.0823 6.8=
9601 17.792 6.89601 17.4915V11.3733C6.89601 11.0729 6.92605 10.7825 6.98613=
 10.4922C7.04621 10.1918 7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 7.4=
968 9.10028 7.65701 8.85996C7.81723 8.60962 8.00748 8.37931 8.21776 8.16903=
C8.42804 7.95875 8.64836 7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 7.2=
9785 9.66972 7.1877C9.94009 7.07755 10.2205 6.98745 10.5108 6.92737C10.8012=
 6.86729 11.0916 6.83725 11.392 6.83725H17.4602C17.7506 6.83725 18.041 6.86=
729 18.3313 6.92737C18.6217 6.98745 18.9021 7.07755 19.1725 7.1877C19.4529 =
7.29785 19.7032 7.43805 19.9535 7.60828C20.1938 7.76849 20.4242 7.95875 20.=
6345 8.16903C20.8447 8.37931 21.025 8.60962 21.1952 8.85996C21.3554 9.10028=
 21.4956 9.36063 21.6058 9.64101C21.7159 9.91137 21.806 10.1918 21.8661 10.=
4922C21.9162 10.7825 21.9462 11.0729 21.9462 11.3733V17.4915C21.9462 17.792=
 21.9162 18.0823 21.8661 18.3727C21.806 18.6731 21.7159 18.9535 21.6058 19.=
2239C21.4956 19.5043 21.3554 19.7646 21.1952 20.015C21.025 20.2553 20.8447 =
20.4856 20.6345 20.6959C20.4242 20.9061 20.1938 21.0964 19.9535 21.2566C19.=
7032 21.4268 19.4529 21.567 19.1725 21.6772C18.9021 21.7973 18.6217 21.8774=
 18.3313 21.9375C18.041 21.9976 17.7506 22.0276 17.4602 22.0276H11.392C11.0=
916 22.0276 10.8012 21.9976 10.5108 21.9375C10.2205 21.8774 9.94009 21.7973=
 9.66972 21.6772ZM10.8613 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 8.6=
1965H17.4602C17.6404 8.61965 17.8107 8.63966 17.9909 8.6697C18.1611 8.70975=
 18.3314 8.75983 18.5016 8.82992C18.6618 8.90001 18.822 8.98012 18.9722 9.0=
8026C19.1224 9.18039 19.2626 9.30055 19.3828 9.42071C19.513 9.55088 19.6231=
 9.69109 19.7232 9.84129C19.8234 9.99149 19.9035 10.1517 19.9736 10.3219C20=
.0437 10.4821 20.0937 10.6624 20.1338 10.8326C20.1638 11.0129 20.1838 11.19=
31 20.1838 11.3733V17.4915C20.1838 17.6718 20.1638 17.852 20.1338 18.0323C2=
0.0937 18.2125 20.0437 18.3828 19.9736 18.543C19.9035 18.7132 19.8234 18.87=
34 19.7232 19.0236C19.6231 19.1738 19.513 19.314 19.3828 19.4342C19.2626 19=
.5643 19.1224 19.6845 18.9722 19.7846C18.822 19.8848 18.6618 19.9649 18.501=
6 20.035C18.3314 20.1051 18.1611 20.1551 17.9909 20.1952C17.8107 20.2252 17=
.6404 20.2452 17.4602 20.2452H11.392C11.2118 20.2452 11.0316 20.2252 10.861=
3 20.1952C10.6811 20.1551 10.5108 20.1051 10.3506 20.035C10.1804 19.9649 10=
.0202 19.8848 9.87 19.7846C9.72982 19.6845 9.58962 19.5643 9.45945 19.4342C=
9.33929 19.314 9.21913 19.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.713=
2 8.86866 18.543C8.79857 18.3828 8.74847 18.2125 8.71843 18.0323C8.67838 17=
.852 8.65836 17.6718 8.65836 17.4915V11.3733C8.65836 11.1931 8.67838 11.012=
9 8.71843 10.8326C8.74847 10.6624 8.79857 10.4821 8.86866 10.3219C8.93875 1=
0.1517 9.01886 9.99149 9.119 9.84129C9.21913 9.69109 9.33929 9.55088 9.4594=
5 9.42071C9.58962 9.30055 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 10.1=
804 8.90001 10.3506 8.82992C10.5108 8.75983 10.6811 8.70975 10.8613 8.6697Z=
" fill=3D"currentColor"></path></svg></div></div><span class=3D"code-info-b=
utton-text">Copy</span></div><div role=3D"button" class=3D"ds-button ds-but=
ton--secondary ds-button--borderless ds-button--rect ds-button--s _7db3914"=
 tabindex=3D"0" style=3D"padding: 0px 4px; height: 28px; --button-text-colo=
r: var(--dsr-text-2); --button-font-size: 13px;"><div class=3D"ds-button__i=
con"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: =
16px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" =
xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M12 2.55a.97.97 0 0 1 .982.956v13.04a.97.97 0 0 1-.982.95=
7.97.97 0 0 1-.982-.956V3.507A.97.97 0 0 1 12 2.55z" fill=3D"currentColor">=
</path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M19.418 9.808=
c.382.375.37.971-.027 1.332l-6.7 6.085a1.04 1.04 0 0 1-1.41-.025.905.905 0 =
0 1 .027-1.332l6.7-6.085a1.04 1.04 0 0 1 1.41.025z" fill=3D"currentColor"><=
/path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M4.582 9.808a1=
.04 1.04 0 0 1 1.41-.025l6.7 6.085c.397.361.409.957.027 1.332a1.04 1.04 0 0=
 1-1.41.025l-6.7-6.085a.905.905 0 0 1-.027-1.332z" fill=3D"currentColor"></=
path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3.068 16.46a.9=
7.97 0 0 1 .983.956v1.739c0 .432.36.782.803.782h14.291c.445 0 .804-.35.804-=
.782v-1.739a.97.97 0 0 1 .983-.956.97.97 0 0 1 .982.956v1.739c0 1.488-1.24 =
2.695-2.769 2.695H4.855c-1.53 0-2.77-1.207-2.77-2.695v-1.739a.97.97 0 0 1 .=
983-.956z" fill=3D"currentColor"></path></svg></div></div><span class=3D"co=
de-info-button-text">Download</span></div></div></div></div></div></div><pr=
e><span class=3D"token keyword">import</span> os
<span class=3D"token keyword">import</span> cv2
<span class=3D"token keyword">import</span> numpy <span class=3D"token keyw=
ord">as</span> np
<span class=3D"token keyword">import</span> torch
<span class=3D"token keyword">from</span> model <span class=3D"token keywor=
d">import</span> build_unet
<span class=3D"token keyword">from</span> utils <span class=3D"token keywor=
d">import</span> create_dir

<span class=3D"token comment"># Configuration</span>
IMAGE_SIZE <span class=3D"token operator">=3D</span> <span class=3D"token p=
unctuation">(</span><span class=3D"token number">256</span><span class=3D"t=
oken punctuation">,</span> <span class=3D"token number">256</span><span cla=
ss=3D"token punctuation">)</span>
COLORMAP <span class=3D"token operator">=3D</span> <span class=3D"token pun=
ctuation">[</span>
    <span class=3D"token punctuation">[</span><span class=3D"token number">=
0</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">0</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">0</span><span class=3D"token punctuation">]</span><span class=3D"=
token punctuation">,</span>      <span class=3D"token comment"># Background=
 (black)</span>
    <span class=3D"token punctuation">[</span><span class=3D"token number">=
0</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">0</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">128</span><span class=3D"token punctuation">]</span><span class=
=3D"token punctuation">,</span>    <span class=3D"token comment"># Weed-1 (=
dark blue)</span>
    <span class=3D"token punctuation">[</span><span class=3D"token number">=
0</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">128</span><span class=3D"token punctuation">,</span> <span class=3D"to=
ken number">0</span><span class=3D"token punctuation">]</span>     <span cl=
ass=3D"token comment"># Weed-2 (green)</span>
<span class=3D"token punctuation">]</span>
CHECKPOINT_PATH <span class=3D"token operator">=3D</span> <span class=3D"to=
ken string">"files/checkpoint.pth"</span>
INPUT_DIR <span class=3D"token operator">=3D</span> <span class=3D"token st=
ring">"your_images/"</span>
OUTPUT_DIR <span class=3D"token operator">=3D</span> <span class=3D"token s=
tring">"inference_results/"</span>

<span class=3D"token keyword">def</span> <span class=3D"token function">ind=
ex_to_rgb_mask</span><span class=3D"token punctuation">(</span>mask<span cl=
ass=3D"token punctuation">,</span> colormap<span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">:</span>
    <span class=3D"token triple-quoted-string string">"""Convert class inde=
x mask to RGB mask"""</span>
    height<span class=3D"token punctuation">,</span> width <span class=3D"t=
oken operator">=3D</span> mask<span class=3D"token punctuation">.</span>sha=
pe
    rgb_mask <span class=3D"token operator">=3D</span> np<span class=3D"tok=
en punctuation">.</span>zeros<span class=3D"token punctuation">(</span><spa=
n class=3D"token punctuation">(</span>height<span class=3D"token punctuatio=
n">,</span> width<span class=3D"token punctuation">,</span> <span class=3D"=
token number">3</span><span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">,</span> dtype<span class=3D"token operator">=3D</sp=
an>np<span class=3D"token punctuation">.</span>uint8<span class=3D"token pu=
nctuation">)</span>
    <span class=3D"token keyword">for</span> class_id<span class=3D"token p=
unctuation">,</span> rgb <span class=3D"token keyword">in</span> <span clas=
s=3D"token builtin">enumerate</span><span class=3D"token punctuation">(</sp=
an>colormap<span class=3D"token punctuation">)</span><span class=3D"token p=
unctuation">:</span>
        rgb_mask<span class=3D"token punctuation">[</span>mask <span class=
=3D"token operator">=3D=3D</span> class_id<span class=3D"token punctuation"=
>]</span> <span class=3D"token operator">=3D</span> rgb
    <span class=3D"token keyword">return</span> rgb_mask

<span class=3D"token comment"># Load model</span>
device <span class=3D"token operator">=3D</span> torch<span class=3D"token =
punctuation">.</span>device<span class=3D"token punctuation">(</span><span =
class=3D"token string">'cuda'</span> <span class=3D"token keyword">if</span=
> torch<span class=3D"token punctuation">.</span>cuda<span class=3D"token p=
unctuation">.</span>is_available<span class=3D"token punctuation">(</span><=
span class=3D"token punctuation">)</span> <span class=3D"token keyword">els=
e</span> <span class=3D"token string">'cpu'</span><span class=3D"token punc=
tuation">)</span>
model <span class=3D"token operator">=3D</span> build_unet<span class=3D"to=
ken punctuation">(</span>num_classes<span class=3D"token operator">=3D</spa=
n><span class=3D"token builtin">len</span><span class=3D"token punctuation"=
>(</span>COLORMAP<span class=3D"token punctuation">)</span><span class=3D"t=
oken punctuation">)</span><span class=3D"token punctuation">.</span>to<span=
 class=3D"token punctuation">(</span>device<span class=3D"token punctuation=
">)</span>
model<span class=3D"token punctuation">.</span>load_state_dict<span class=
=3D"token punctuation">(</span>torch<span class=3D"token punctuation">.</sp=
an>load<span class=3D"token punctuation">(</span>CHECKPOINT_PATH<span class=
=3D"token punctuation">,</span> map_location<span class=3D"token operator">=
=3D</span>device<span class=3D"token punctuation">)</span><span class=3D"to=
ken punctuation">[</span><span class=3D"token string">"model_state_dict"</s=
pan><span class=3D"token punctuation">]</span><span class=3D"token punctuat=
ion">)</span>
model<span class=3D"token punctuation">.</span><span class=3D"token builtin=
">eval</span><span class=3D"token punctuation">(</span><span class=3D"token=
 punctuation">)</span>

<span class=3D"token comment"># Create output directories</span>
create_dir<span class=3D"token punctuation">(</span>OUTPUT_DIR<span class=
=3D"token punctuation">)</span>
create_dir<span class=3D"token punctuation">(</span><span class=3D"token st=
ring-interpolation"><span class=3D"token string">f"</span><span class=3D"to=
ken interpolation"><span class=3D"token punctuation">{</span>OUTPUT_DIR<spa=
n class=3D"token punctuation">}</span></span><span class=3D"token string">/=
overlays"</span></span><span class=3D"token punctuation">)</span>
create_dir<span class=3D"token punctuation">(</span><span class=3D"token st=
ring-interpolation"><span class=3D"token string">f"</span><span class=3D"to=
ken interpolation"><span class=3D"token punctuation">{</span>OUTPUT_DIR<spa=
n class=3D"token punctuation">}</span></span><span class=3D"token string">/=
masks"</span></span><span class=3D"token punctuation">)</span>

<span class=3D"token keyword">print</span><span class=3D"token punctuation"=
>(</span><span class=3D"token string-interpolation"><span class=3D"token st=
ring">f"Starting inference on images in: </span><span class=3D"token interp=
olation"><span class=3D"token punctuation">{</span>INPUT_DIR<span class=3D"=
token punctuation">}</span></span><span class=3D"token string">"</span></sp=
an><span class=3D"token punctuation">)</span>
<span class=3D"token keyword">for</span> image_name <span class=3D"token ke=
yword">in</span> os<span class=3D"token punctuation">.</span>listdir<span c=
lass=3D"token punctuation">(</span>INPUT_DIR<span class=3D"token punctuatio=
n">)</span><span class=3D"token punctuation">:</span>
    <span class=3D"token keyword">if</span> <span class=3D"token keyword">n=
ot</span> image_name<span class=3D"token punctuation">.</span>lower<span cl=
ass=3D"token punctuation">(</span><span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">.</span>endswith<span class=3D"token pun=
ctuation">(</span><span class=3D"token punctuation">(</span><span class=3D"=
token string">'.png'</span><span class=3D"token punctuation">,</span> <span=
 class=3D"token string">'.jpg'</span><span class=3D"token punctuation">,</s=
pan> <span class=3D"token string">'.jpeg'</span><span class=3D"token punctu=
ation">)</span><span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">:</span>
        <span class=3D"token keyword">continue</span>

    image_path <span class=3D"token operator">=3D</span> os<span class=3D"t=
oken punctuation">.</span>path<span class=3D"token punctuation">.</span>joi=
n<span class=3D"token punctuation">(</span>INPUT_DIR<span class=3D"token pu=
nctuation">,</span> image_name<span class=3D"token punctuation">)</span>
    image <span class=3D"token operator">=3D</span> cv2<span class=3D"token=
 punctuation">.</span>imread<span class=3D"token punctuation">(</span>image=
_path<span class=3D"token punctuation">)</span>
    <span class=3D"token keyword">if</span> image <span class=3D"token keyw=
ord">is</span> <span class=3D"token boolean">None</span><span class=3D"toke=
n punctuation">:</span>
        <span class=3D"token keyword">print</span><span class=3D"token punc=
tuation">(</span><span class=3D"token string-interpolation"><span class=3D"=
token string">f"Warning: Could not read image </span><span class=3D"token i=
nterpolation"><span class=3D"token punctuation">{</span>image_path<span cla=
ss=3D"token punctuation">}</span></span><span class=3D"token string">"</spa=
n></span><span class=3D"token punctuation">)</span>
        <span class=3D"token keyword">continue</span>

    original_h<span class=3D"token punctuation">,</span> original_w <span c=
lass=3D"token operator">=3D</span> image<span class=3D"token punctuation">.=
</span>shape<span class=3D"token punctuation">[</span><span class=3D"token =
punctuation">:</span><span class=3D"token number">2</span><span class=3D"to=
ken punctuation">]</span>
    <span class=3D"token keyword">print</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token string-interpolation"><span class=3D"toke=
n string">f"Processing: </span><span class=3D"token interpolation"><span cl=
ass=3D"token punctuation">{</span>image_name<span class=3D"token punctuatio=
n">}</span></span><span class=3D"token string"> (</span><span class=3D"toke=
n interpolation"><span class=3D"token punctuation">{</span>original_w<span =
class=3D"token punctuation">}</span></span><span class=3D"token string">x</=
span><span class=3D"token interpolation"><span class=3D"token punctuation">=
{</span>original_h<span class=3D"token punctuation">}</span></span><span cl=
ass=3D"token string">)"</span></span><span class=3D"token punctuation">)</s=
pan>
   =20
    <span class=3D"token comment"># Preprocess image</span>
    resized_image <span class=3D"token operator">=3D</span> cv2<span class=
=3D"token punctuation">.</span>resize<span class=3D"token punctuation">(</s=
pan>image<span class=3D"token punctuation">,</span> IMAGE_SIZE<span class=
=3D"token punctuation">)</span>
    x <span class=3D"token operator">=3D</span> resized_image <span class=
=3D"token operator">/</span> <span class=3D"token number">255.0</span>
    x <span class=3D"token operator">=3D</span> np<span class=3D"token punc=
tuation">.</span>transpose<span class=3D"token punctuation">(</span>x<span =
class=3D"token punctuation">,</span> <span class=3D"token punctuation">(</s=
pan><span class=3D"token number">2</span><span class=3D"token punctuation">=
,</span> <span class=3D"token number">0</span><span class=3D"token punctuat=
ion">,</span> <span class=3D"token number">1</span><span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">)</span>  <span class=
=3D"token comment"># HWC to CHW</span>
    x <span class=3D"token operator">=3D</span> torch<span class=3D"token p=
unctuation">.</span>from_numpy<span class=3D"token punctuation">(</span>x<s=
pan class=3D"token punctuation">)</span><span class=3D"token punctuation">.=
</span>unsqueeze<span class=3D"token punctuation">(</span><span class=3D"to=
ken number">0</span><span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">.</span><span class=3D"token builtin">float</span><s=
pan class=3D"token punctuation">(</span><span class=3D"token punctuation">)=
</span><span class=3D"token punctuation">.</span>to<span class=3D"token pun=
ctuation">(</span>device<span class=3D"token punctuation">)</span>

    <span class=3D"token comment"># Run inference</span>
    <span class=3D"token keyword">with</span> torch<span class=3D"token pun=
ctuation">.</span>no_grad<span class=3D"token punctuation">(</span><span cl=
ass=3D"token punctuation">)</span><span class=3D"token punctuation">:</span=
>
        pred <span class=3D"token operator">=3D</span> model<span class=3D"=
token punctuation">(</span>x<span class=3D"token punctuation">)</span>
        pred <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>softmax<span class=3D"token punctuation">(</span=
>pred<span class=3D"token punctuation">,</span> dim<span class=3D"token ope=
rator">=3D</span><span class=3D"token number">1</span><span class=3D"token =
punctuation">)</span>
        pred <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>argmax<span class=3D"token punctuation">(</span>=
pred<span class=3D"token punctuation">,</span> dim<span class=3D"token oper=
ator">=3D</span><span class=3D"token number">1</span><span class=3D"token p=
unctuation">)</span>
        pred <span class=3D"token operator">=3D</span> pred<span class=3D"t=
oken punctuation">.</span>squeeze<span class=3D"token punctuation">(</span>=
<span class=3D"token punctuation">)</span><span class=3D"token punctuation"=
>.</span>cpu<span class=3D"token punctuation">(</span><span class=3D"token =
punctuation">)</span><span class=3D"token punctuation">.</span>numpy<span c=
lass=3D"token punctuation">(</span><span class=3D"token punctuation">)</spa=
n><span class=3D"token punctuation">.</span>astype<span class=3D"token punc=
tuation">(</span>np<span class=3D"token punctuation">.</span>uint8<span cla=
ss=3D"token punctuation">)</span>

    <span class=3D"token comment"># Convert prediction to RGB mask</span>
    pred_mask <span class=3D"token operator">=3D</span> index_to_rgb_mask<s=
pan class=3D"token punctuation">(</span>pred<span class=3D"token punctuatio=
n">,</span> COLORMAP<span class=3D"token punctuation">)</span>
   =20
    <span class=3D"token comment"># Resize mask to original dimensions</spa=
n>
    pred_mask_orig <span class=3D"token operator">=3D</span> cv2<span class=
=3D"token punctuation">.</span>resize<span class=3D"token punctuation">(</s=
pan>
        pred_mask<span class=3D"token punctuation">,</span>=20
        <span class=3D"token punctuation">(</span>original_w<span class=3D"=
token punctuation">,</span> original_h<span class=3D"token punctuation">)</=
span><span class=3D"token punctuation">,</span>
        interpolation<span class=3D"token operator">=3D</span>cv2<span clas=
s=3D"token punctuation">.</span>INTER_NEAREST
    <span class=3D"token punctuation">)</span>

    <span class=3D"token comment"># Create overlay</span>
    overlay <span class=3D"token operator">=3D</span> image<span class=3D"t=
oken punctuation">.</span>copy<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">)</span>
    alpha <span class=3D"token operator">=3D</span> <span class=3D"token nu=
mber">0.5</span>
   =20
    <span class=3D"token comment"># Process each class (skip background)</s=
pan>
    <span class=3D"token keyword">for</span> class_idx <span class=3D"token=
 keyword">in</span> <span class=3D"token builtin">range</span><span class=
=3D"token punctuation">(</span><span class=3D"token number">1</span><span c=
lass=3D"token punctuation">,</span> <span class=3D"token builtin">len</span=
><span class=3D"token punctuation">(</span>COLORMAP<span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">:</span>
        class_color <span class=3D"token operator">=3D</span> COLORMAP<span=
 class=3D"token punctuation">[</span>class_idx<span class=3D"token punctuat=
ion">]</span>
        <span class=3D"token comment"># Create mask for current class</span=
>
        class_mask <span class=3D"token operator">=3D</span> np<span class=
=3D"token punctuation">.</span><span class=3D"token builtin">all</span><spa=
n class=3D"token punctuation">(</span>pred_mask_orig <span class=3D"token o=
perator">=3D=3D</span> class_color<span class=3D"token punctuation">,</span=
> axis<span class=3D"token operator">=3D</span><span class=3D"token operato=
r">-</span><span class=3D"token number">1</span><span class=3D"token punctu=
ation">)</span>
       =20
        <span class=3D"token comment"># Create colored image for this class=
</span>
        color_overlay <span class=3D"token operator">=3D</span> np<span cla=
ss=3D"token punctuation">.</span>zeros_like<span class=3D"token punctuation=
">(</span>image<span class=3D"token punctuation">)</span>
        color_overlay<span class=3D"token punctuation">[</span>class_mask<s=
pan class=3D"token punctuation">]</span> <span class=3D"token operator">=3D=
</span> class_color
       =20
        <span class=3D"token comment"># Blend with original image</span>
        overlay <span class=3D"token operator">=3D</span> cv2<span class=3D=
"token punctuation">.</span>addWeighted<span class=3D"token punctuation">(<=
/span>overlay<span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">1</span><span class=3D"token punctuation">,</span> color_overlay<=
span class=3D"token punctuation">,</span> alpha<span class=3D"token punctua=
tion">,</span> <span class=3D"token number">0</span><span class=3D"token pu=
nctuation">)</span>

    <span class=3D"token comment"># Save results</span>
    base_name <span class=3D"token operator">=3D</span> os<span class=3D"to=
ken punctuation">.</span>path<span class=3D"token punctuation">.</span>spli=
text<span class=3D"token punctuation">(</span>image_name<span class=3D"toke=
n punctuation">)</span><span class=3D"token punctuation">[</span><span clas=
s=3D"token number">0</span><span class=3D"token punctuation">]</span>
   =20
    <span class=3D"token comment"># Save mask</span>
    mask_path <span class=3D"token operator">=3D</span> <span class=3D"toke=
n string-interpolation"><span class=3D"token string">f"</span><span class=
=3D"token interpolation"><span class=3D"token punctuation">{</span>OUTPUT_D=
IR<span class=3D"token punctuation">}</span></span><span class=3D"token str=
ing">/masks/</span><span class=3D"token interpolation"><span class=3D"token=
 punctuation">{</span>base_name<span class=3D"token punctuation">}</span></=
span><span class=3D"token string">_mask.png"</span></span>
    cv2<span class=3D"token punctuation">.</span>imwrite<span class=3D"toke=
n punctuation">(</span>mask_path<span class=3D"token punctuation">,</span> =
pred_mask_orig<span class=3D"token punctuation">)</span>
   =20
    <span class=3D"token comment"># Save overlay</span>
    overlay_path <span class=3D"token operator">=3D</span> <span class=3D"t=
oken string-interpolation"><span class=3D"token string">f"</span><span clas=
s=3D"token interpolation"><span class=3D"token punctuation">{</span>OUTPUT_=
DIR<span class=3D"token punctuation">}</span></span><span class=3D"token st=
ring">/overlays/</span><span class=3D"token interpolation"><span class=3D"t=
oken punctuation">{</span>base_name<span class=3D"token punctuation">}</spa=
n></span><span class=3D"token string">_overlay.png"</span></span>
    cv2<span class=3D"token punctuation">.</span>imwrite<span class=3D"toke=
n punctuation">(</span>overlay_path<span class=3D"token punctuation">,</spa=
n> overlay<span class=3D"token punctuation">)</span>
   =20
    <span class=3D"token keyword">print</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token string-interpolation"><span class=3D"toke=
n string">f"Saved results for </span><span class=3D"token interpolation"><s=
pan class=3D"token punctuation">{</span>image_name<span class=3D"token punc=
tuation">}</span></span><span class=3D"token string">:"</span></span><span =
class=3D"token punctuation">)</span>
    <span class=3D"token keyword">print</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token string-interpolation"><span class=3D"toke=
n string">f"  - Mask: </span><span class=3D"token interpolation"><span clas=
s=3D"token punctuation">{</span>mask_path<span class=3D"token punctuation">=
}</span></span><span class=3D"token string">"</span></span><span class=3D"t=
oken punctuation">)</span>
    <span class=3D"token keyword">print</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token string-interpolation"><span class=3D"toke=
n string">f"  - Overlay: </span><span class=3D"token interpolation"><span c=
lass=3D"token punctuation">{</span>overlay_path<span class=3D"token punctua=
tion">}</span></span><span class=3D"token string">"</span></span><span clas=
s=3D"token punctuation">)</span>

<span class=3D"token keyword">print</span><span class=3D"token punctuation"=
>(</span><span class=3D"token string">"\nInference complete! All results sa=
ved to:"</span><span class=3D"token punctuation">,</span> OUTPUT_DIR<span c=
lass=3D"token punctuation">)</span></pre></div><h3>Key Changes:</h3><ol sta=
rt=3D"1"><li><p class=3D"ds-markdown-paragraph"><strong>Removed Display Fun=
ctions</strong>:</p><ul><li><p class=3D"ds-markdown-paragraph">Removed all =
<code>cv2.imshow()</code> and <code>cv2.waitKey()</code> calls</p></li><li>=
<p class=3D"ds-markdown-paragraph">Removed <code>cv2.destroyAllWindows()</c=
ode></p></li></ul></li><li><p class=3D"ds-markdown-paragraph"><strong>Enhan=
ced Logging</strong>:</p><ul><li><p class=3D"ds-markdown-paragraph">Added p=
rogress messages showing which image is being processed</p></li><li><p clas=
s=3D"ds-markdown-paragraph">Added output paths for saved images</p></li><li=
><p class=3D"ds-markdown-paragraph">Added warning for unreadable images</p>=
</li><li><p class=3D"ds-markdown-paragraph">Added completion message with o=
utput directory</p></li></ul></li><li><p class=3D"ds-markdown-paragraph"><s=
trong>Improved Output Structure</strong>:</p><ul><li><p class=3D"ds-markdow=
n-paragraph">Created main output directory first</p></li><li><p class=3D"ds=
-markdown-paragraph">Added more descriptive save paths</p></li><li><p class=
=3D"ds-markdown-paragraph">Maintained separate folders for masks and overla=
ys</p></li></ul></li><li><p class=3D"ds-markdown-paragraph"><strong>Fixed C=
olor Handling</strong>:</p><ul><li><p class=3D"ds-markdown-paragraph">Corre=
cted color assignment in overlay creation</p></li><li><p class=3D"ds-markdo=
wn-paragraph">Used consistent color space throughout</p></li></ul></li></ol=
><h3>How to Use:</h3><ol start=3D"1"><li><p class=3D"ds-markdown-paragraph"=
>Place your images in <code>your_images/</code> folder</p></li><li><p class=
=3D"ds-markdown-paragraph">Run the script</p></li><li><p class=3D"ds-markdo=
wn-paragraph">Find results in <code>inference_results/</code>:</p><ul><li><=
p class=3D"ds-markdown-paragraph"><code>masks/</code>: Contains colored seg=
mentation masks</p></li><li><p class=3D"ds-markdown-paragraph"><code>overla=
ys/</code>: Contains original images with transparent mask overlays</p></li=
></ul></li></ol><h3>Alternative Solutions:</h3><p class=3D"ds-markdown-para=
graph">If you want to display results, consider these options:</p><p class=
=3D"ds-markdown-paragraph"><strong>Option 1: Install OpenCV with GUI suppor=
t</strong></p><div class=3D"md-code-block md-code-block-light"><div class=
=3D"md-code-block-banner-wrap"><div class=3D"md-code-block-banner md-code-b=
lock-banner-lite"><div class=3D"_121d384"><div class=3D"d2a24f03"><span cla=
ss=3D"d813de27">bash</span></div><div class=3D"d2a24f03"><div class=3D"efa1=
3877"><div role=3D"button" class=3D"ds-button ds-button--secondary ds-butto=
n--borderless ds-button--rect ds-button--m _7db3914" tabindex=3D"0" style=
=3D"margin-right: 8px; font-size: 13px; height: 28px; padding: 0px 4px; --b=
utton-text-color: var(--dsr-text-2);"><div class=3D"ds-button__icon"><div c=
lass=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg=
 width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"ht=
tp://www.w3.org/2000/svg"><path d=3D"M3.65169 12.9243C3.68173 13.1045 3.741=
81 13.2748 3.80189 13.445C3.87198 13.6052 3.96211 13.7654 4.06225 13.9156C4=
.16238 14.0658 4.27253 14.206 4.4027 14.3362C4.52286 14.4663 4.66306 14.576=
5 4.81326 14.6766C4.96346 14.7768 5.11366 14.8569 5.28389 14.927C5.44411 14=
.9971 5.61434 15.0571 5.79459 15.0872C5.97483 15.1272 6.14506 15.1373 6.325=
3 15.1373V16.9196C6.30739 16.9196 6.28949 16.9195 6.27159 16.9193C5.9991 16=
.9158 5.72659 16.8859 5.4541 16.8295C5.16371 16.7694 4.88334 16.6893 4.6129=
8 16.5692C4.3326 16.459 4.08226 16.3188 3.83193 16.1586C3.59161 15.9884 3.3=
613 15.7981 3.15102 15.5878C2.94074 15.3776 2.7605 15.1473 2.59027 14.9069C=
2.43006 14.6566 2.28986 14.3962 2.17972 14.1259C2.06957 13.8455 1.97944 13.=
5651 1.91936 13.2747C1.86929 12.9843 1.83926 12.684 1.83926 12.3936V6.26532=
C1.83926 5.96492 1.86929 5.67456 1.91936 5.38417C1.97944 5.09378 2.06957 4.=
80338 2.17972 4.53302C2.28986 4.26265 2.43006 4.0023 2.59027 3.75197C2.7605=
 3.50163 2.94074 3.27132 3.15102 3.06104C3.3613 2.85076 3.59161 2.67052 3.8=
3193 2.50029C4.08226 2.33006 4.3326 2.19987 4.61298 2.07971C4.88334 1.96956=
 5.16371 1.87943 5.4541 1.81935C5.74449 1.75927 6.03491 1.73926 6.3253 1.73=
926H12.3934C12.6838 1.73926 12.9842 1.75927 13.2746 1.81935C13.555 1.87943 =
13.8354 1.96956 14.1158 2.07971C14.3861 2.19987 14.6465 2.33006 14.8868 2.5=
0029C15.1371 2.67052 15.3574 2.85076 15.5677 3.06104C15.778 3.27132 15.9582=
 3.50163 16.1284 3.75197C16.2887 4.0023 16.4288 4.26265 16.539 4.53302C16.6=
592 4.80338 16.7393 5.09378 16.7994 5.38417C16.8558 5.65722 16.8858 5.93024=
 16.8892 6.21161C16.8894 6.22948 16.8895 6.24739 16.8895 6.26532H15.1271C15=
.1271 6.08508 15.1071 5.90486 15.067 5.72462C15.037 5.55439 14.9869 5.38415=
 14.9168 5.21392C14.8467 5.04369 14.7566 4.88347 14.6665 4.73327C14.5664 4.=
58307 14.4462 4.45289 14.326 4.32271C14.1959 4.19254 14.0557 4.08239 13.905=
5 3.98226C13.7553 3.88212 13.6051 3.79202 13.4348 3.72193C13.2746 3.65184 1=
3.1044 3.60174 12.9242 3.5717C12.7539 3.53165 12.5737 3.51163 12.3934 3.511=
63H6.3253C6.14506 3.51163 5.97483 3.53165 5.79459 3.5717C5.61434 3.60174 5.=
44411 3.65184 5.28389 3.72193C5.11366 3.79202 4.96346 3.88212 4.81326 3.982=
26C4.66306 4.08239 4.52286 4.19254 4.4027 4.32271C4.27253 4.45289 4.16238 4=
.58307 4.06225 4.73327C3.96211 4.88347 3.87198 5.04369 3.80189 5.21392C3.74=
181 5.38415 3.68173 5.55439 3.65169 5.72462C3.61164 5.90486 3.60164 6.08508=
 3.60164 6.26532V12.3936C3.60164 12.5638 3.61164 12.744 3.65169 12.9243Z" f=
ill=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenod=
d" d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.4268 8.8987 21.2566C8.64=
836 21.0964 8.42804 20.9061 8.21776 20.6959C8.00748 20.4856 7.81723 20.2553=
 7.65701 20.015C7.4968 19.7646 7.3566 19.5043 7.24646 19.2239C7.12629 18.95=
35 7.04621 18.6731 6.98613 18.3727C6.92605 18.0823 6.89601 17.792 6.89601 1=
7.4915V11.3733C6.89601 11.0729 6.92605 10.7825 6.98613 10.4922C7.04621 10.1=
918 7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 7.4968 9.10028 7.65701 8=
.85996C7.81723 8.60962 8.00748 8.37931 8.21776 8.16903C8.42804 7.95875 8.64=
836 7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 7.29785 9.66972 7.1877C9=
.94009 7.07755 10.2205 6.98745 10.5108 6.92737C10.8012 6.86729 11.0916 6.83=
725 11.392 6.83725H17.4602C17.7506 6.83725 18.041 6.86729 18.3313 6.92737C1=
8.6217 6.98745 18.9021 7.07755 19.1725 7.1877C19.4529 7.29785 19.7032 7.438=
05 19.9535 7.60828C20.1938 7.76849 20.4242 7.95875 20.6345 8.16903C20.8447 =
8.37931 21.025 8.60962 21.1952 8.85996C21.3554 9.10028 21.4956 9.36063 21.6=
058 9.64101C21.7159 9.91137 21.806 10.1918 21.8661 10.4922C21.9162 10.7825 =
21.9462 11.0729 21.9462 11.3733V17.4915C21.9462 17.792 21.9162 18.0823 21.8=
661 18.3727C21.806 18.6731 21.7159 18.9535 21.6058 19.2239C21.4956 19.5043 =
21.3554 19.7646 21.1952 20.015C21.025 20.2553 20.8447 20.4856 20.6345 20.69=
59C20.4242 20.9061 20.1938 21.0964 19.9535 21.2566C19.7032 21.4268 19.4529 =
21.567 19.1725 21.6772C18.9021 21.7973 18.6217 21.8774 18.3313 21.9375C18.0=
41 21.9976 17.7506 22.0276 17.4602 22.0276H11.392C11.0916 22.0276 10.8012 2=
1.9976 10.5108 21.9375C10.2205 21.8774 9.94009 21.7973 9.66972 21.6772ZM10.=
8613 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 8.61965H17.4602C17.6404 =
8.61965 17.8107 8.63966 17.9909 8.6697C18.1611 8.70975 18.3314 8.75983 18.5=
016 8.82992C18.6618 8.90001 18.822 8.98012 18.9722 9.08026C19.1224 9.18039 =
19.2626 9.30055 19.3828 9.42071C19.513 9.55088 19.6231 9.69109 19.7232 9.84=
129C19.8234 9.99149 19.9035 10.1517 19.9736 10.3219C20.0437 10.4821 20.0937=
 10.6624 20.1338 10.8326C20.1638 11.0129 20.1838 11.1931 20.1838 11.3733V17=
.4915C20.1838 17.6718 20.1638 17.852 20.1338 18.0323C20.0937 18.2125 20.043=
7 18.3828 19.9736 18.543C19.9035 18.7132 19.8234 18.8734 19.7232 19.0236C19=
.6231 19.1738 19.513 19.314 19.3828 19.4342C19.2626 19.5643 19.1224 19.6845=
 18.9722 19.7846C18.822 19.8848 18.6618 19.9649 18.5016 20.035C18.3314 20.1=
051 18.1611 20.1551 17.9909 20.1952C17.8107 20.2252 17.6404 20.2452 17.4602=
 20.2452H11.392C11.2118 20.2452 11.0316 20.2252 10.8613 20.1952C10.6811 20.=
1551 10.5108 20.1051 10.3506 20.035C10.1804 19.9649 10.0202 19.8848 9.87 19=
.7846C9.72982 19.6845 9.58962 19.5643 9.45945 19.4342C9.33929 19.314 9.2191=
3 19.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.7132 8.86866 18.543C8.79=
857 18.3828 8.74847 18.2125 8.71843 18.0323C8.67838 17.852 8.65836 17.6718 =
8.65836 17.4915V11.3733C8.65836 11.1931 8.67838 11.0129 8.71843 10.8326C8.7=
4847 10.6624 8.79857 10.4821 8.86866 10.3219C8.93875 10.1517 9.01886 9.9914=
9 9.119 9.84129C9.21913 9.69109 9.33929 9.55088 9.45945 9.42071C9.58962 9.3=
0055 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 10.1804 8.90001 10.3506 8=
.82992C10.5108 8.75983 10.6811 8.70975 10.8613 8.6697Z" fill=3D"currentColo=
r"></path></svg></div></div><span class=3D"code-info-button-text">Copy</spa=
n></div><div role=3D"button" class=3D"ds-button ds-button--secondary ds-but=
ton--borderless ds-button--rect ds-button--s _7db3914" tabindex=3D"0" style=
=3D"padding: 0px 4px; height: 28px; --button-text-color: var(--dsr-text-2);=
 --button-font-size: 13px;"><div class=3D"ds-button__icon"><div class=3D"ds=
-icon" style=3D"font-size: 16px; width: 16px; height: 16px;"><svg width=3D"=
24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w=
3.org/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 =
2.55a.97.97 0 0 1 .982.956v13.04a.97.97 0 0 1-.982.957.97.97 0 0 1-.982-.95=
6V3.507A.97.97 0 0 1 12 2.55z" fill=3D"currentColor"></path><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M19.418 9.808c.382.375.37.971-.027 =
1.332l-6.7 6.085a1.04 1.04 0 0 1-1.41-.025.905.905 0 0 1 .027-1.332l6.7-6.0=
85a1.04 1.04 0 0 1 1.41.025z" fill=3D"currentColor"></path><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M4.582 9.808a1.04 1.04 0 0 1 1.41-.=
025l6.7 6.085c.397.361.409.957.027 1.332a1.04 1.04 0 0 1-1.41.025l-6.7-6.08=
5a.905.905 0 0 1-.027-1.332z" fill=3D"currentColor"></path><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3.068 16.46a.97.97 0 0 1 .983.956v=
1.739c0 .432.36.782.803.782h14.291c.445 0 .804-.35.804-.782v-1.739a.97.97 0=
 0 1 .983-.956.97.97 0 0 1 .982.956v1.739c0 1.488-1.24 2.695-2.769 2.695H4.=
855c-1.53 0-2.77-1.207-2.77-2.695v-1.739a.97.97 0 0 1 .983-.956z" fill=3D"c=
urrentColor"></path></svg></div></div><span class=3D"code-info-button-text"=
>Download</span></div></div></div></div></div></div><pre>pip uninstall open=
cv-python
pip <span class=3D"token function">install</span> opencv-python-headless  <=
span class=3D"token comment"># First uninstall headless if present</span>
pip <span class=3D"token function">install</span> opencv-python           <=
span class=3D"token comment"># Install full version</span></pre></div><p cl=
ass=3D"ds-markdown-paragraph"><strong>Option 2: Use matplotlib for display =
(if GUI available):</strong></p><div class=3D"md-code-block md-code-block-l=
ight"><div class=3D"md-code-block-banner-wrap"><div class=3D"md-code-block-=
banner md-code-block-banner-lite"><div class=3D"_121d384"><div class=3D"d2a=
24f03"><span class=3D"d813de27">python</span></div><div class=3D"d2a24f03">=
<div class=3D"efa13877"><div role=3D"button" class=3D"ds-button ds-button--=
secondary ds-button--borderless ds-button--rect ds-button--m _7db3914" tabi=
ndex=3D"0" style=3D"margin-right: 8px; font-size: 13px; height: 28px; paddi=
ng: 0px 4px; --button-text-color: var(--dsr-text-2);"><div class=3D"ds-butt=
on__icon"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; hei=
ght: 16px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M3.65169 12.9243C3.681=
73 13.1045 3.74181 13.2748 3.80189 13.445C3.87198 13.6052 3.96211 13.7654 4=
.06225 13.9156C4.16238 14.0658 4.27253 14.206 4.4027 14.3362C4.52286 14.466=
3 4.66306 14.5765 4.81326 14.6766C4.96346 14.7768 5.11366 14.8569 5.28389 1=
4.927C5.44411 14.9971 5.61434 15.0571 5.79459 15.0872C5.97483 15.1272 6.145=
06 15.1373 6.3253 15.1373V16.9196C6.30739 16.9196 6.28949 16.9195 6.27159 1=
6.9193C5.9991 16.9158 5.72659 16.8859 5.4541 16.8295C5.16371 16.7694 4.8833=
4 16.6893 4.61298 16.5692C4.3326 16.459 4.08226 16.3188 3.83193 16.1586C3.5=
9161 15.9884 3.3613 15.7981 3.15102 15.5878C2.94074 15.3776 2.7605 15.1473 =
2.59027 14.9069C2.43006 14.6566 2.28986 14.3962 2.17972 14.1259C2.06957 13.=
8455 1.97944 13.5651 1.91936 13.2747C1.86929 12.9843 1.83926 12.684 1.83926=
 12.3936V6.26532C1.83926 5.96492 1.86929 5.67456 1.91936 5.38417C1.97944 5.=
09378 2.06957 4.80338 2.17972 4.53302C2.28986 4.26265 2.43006 4.0023 2.5902=
7 3.75197C2.7605 3.50163 2.94074 3.27132 3.15102 3.06104C3.3613 2.85076 3.5=
9161 2.67052 3.83193 2.50029C4.08226 2.33006 4.3326 2.19987 4.61298 2.07971=
C4.88334 1.96956 5.16371 1.87943 5.4541 1.81935C5.74449 1.75927 6.03491 1.7=
3926 6.3253 1.73926H12.3934C12.6838 1.73926 12.9842 1.75927 13.2746 1.81935=
C13.555 1.87943 13.8354 1.96956 14.1158 2.07971C14.3861 2.19987 14.6465 2.3=
3006 14.8868 2.50029C15.1371 2.67052 15.3574 2.85076 15.5677 3.06104C15.778=
 3.27132 15.9582 3.50163 16.1284 3.75197C16.2887 4.0023 16.4288 4.26265 16.=
539 4.53302C16.6592 4.80338 16.7393 5.09378 16.7994 5.38417C16.8558 5.65722=
 16.8858 5.93024 16.8892 6.21161C16.8894 6.22948 16.8895 6.24739 16.8895 6.=
26532H15.1271C15.1271 6.08508 15.1071 5.90486 15.067 5.72462C15.037 5.55439=
 14.9869 5.38415 14.9168 5.21392C14.8467 5.04369 14.7566 4.88347 14.6665 4.=
73327C14.5664 4.58307 14.4462 4.45289 14.326 4.32271C14.1959 4.19254 14.055=
7 4.08239 13.9055 3.98226C13.7553 3.88212 13.6051 3.79202 13.4348 3.72193C1=
3.2746 3.65184 13.1044 3.60174 12.9242 3.5717C12.7539 3.53165 12.5737 3.511=
63 12.3934 3.51163H6.3253C6.14506 3.51163 5.97483 3.53165 5.79459 3.5717C5.=
61434 3.60174 5.44411 3.65184 5.28389 3.72193C5.11366 3.79202 4.96346 3.882=
12 4.81326 3.98226C4.66306 4.08239 4.52286 4.19254 4.4027 4.32271C4.27253 4=
.45289 4.16238 4.58307 4.06225 4.73327C3.96211 4.88347 3.87198 5.04369 3.80=
189 5.21392C3.74181 5.38415 3.68173 5.55439 3.65169 5.72462C3.61164 5.90486=
 3.60164 6.08508 3.60164 6.26532V12.3936C3.60164 12.5638 3.61164 12.744 3.6=
5169 12.9243Z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.4268 8.8=
987 21.2566C8.64836 21.0964 8.42804 20.9061 8.21776 20.6959C8.00748 20.4856=
 7.81723 20.2553 7.65701 20.015C7.4968 19.7646 7.3566 19.5043 7.24646 19.22=
39C7.12629 18.9535 7.04621 18.6731 6.98613 18.3727C6.92605 18.0823 6.89601 =
17.792 6.89601 17.4915V11.3733C6.89601 11.0729 6.92605 10.7825 6.98613 10.4=
922C7.04621 10.1918 7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 7.4968 9=
.10028 7.65701 8.85996C7.81723 8.60962 8.00748 8.37931 8.21776 8.16903C8.42=
804 7.95875 8.64836 7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 7.29785 =
9.66972 7.1877C9.94009 7.07755 10.2205 6.98745 10.5108 6.92737C10.8012 6.86=
729 11.0916 6.83725 11.392 6.83725H17.4602C17.7506 6.83725 18.041 6.86729 1=
8.3313 6.92737C18.6217 6.98745 18.9021 7.07755 19.1725 7.1877C19.4529 7.297=
85 19.7032 7.43805 19.9535 7.60828C20.1938 7.76849 20.4242 7.95875 20.6345 =
8.16903C20.8447 8.37931 21.025 8.60962 21.1952 8.85996C21.3554 9.10028 21.4=
956 9.36063 21.6058 9.64101C21.7159 9.91137 21.806 10.1918 21.8661 10.4922C=
21.9162 10.7825 21.9462 11.0729 21.9462 11.3733V17.4915C21.9462 17.792 21.9=
162 18.0823 21.8661 18.3727C21.806 18.6731 21.7159 18.9535 21.6058 19.2239C=
21.4956 19.5043 21.3554 19.7646 21.1952 20.015C21.025 20.2553 20.8447 20.48=
56 20.6345 20.6959C20.4242 20.9061 20.1938 21.0964 19.9535 21.2566C19.7032 =
21.4268 19.4529 21.567 19.1725 21.6772C18.9021 21.7973 18.6217 21.8774 18.3=
313 21.9375C18.041 21.9976 17.7506 22.0276 17.4602 22.0276H11.392C11.0916 2=
2.0276 10.8012 21.9976 10.5108 21.9375C10.2205 21.8774 9.94009 21.7973 9.66=
972 21.6772ZM10.8613 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 8.61965H=
17.4602C17.6404 8.61965 17.8107 8.63966 17.9909 8.6697C18.1611 8.70975 18.3=
314 8.75983 18.5016 8.82992C18.6618 8.90001 18.822 8.98012 18.9722 9.08026C=
19.1224 9.18039 19.2626 9.30055 19.3828 9.42071C19.513 9.55088 19.6231 9.69=
109 19.7232 9.84129C19.8234 9.99149 19.9035 10.1517 19.9736 10.3219C20.0437=
 10.4821 20.0937 10.6624 20.1338 10.8326C20.1638 11.0129 20.1838 11.1931 20=
.1838 11.3733V17.4915C20.1838 17.6718 20.1638 17.852 20.1338 18.0323C20.093=
7 18.2125 20.0437 18.3828 19.9736 18.543C19.9035 18.7132 19.8234 18.8734 19=
.7232 19.0236C19.6231 19.1738 19.513 19.314 19.3828 19.4342C19.2626 19.5643=
 19.1224 19.6845 18.9722 19.7846C18.822 19.8848 18.6618 19.9649 18.5016 20.=
035C18.3314 20.1051 18.1611 20.1551 17.9909 20.1952C17.8107 20.2252 17.6404=
 20.2452 17.4602 20.2452H11.392C11.2118 20.2452 11.0316 20.2252 10.8613 20.=
1952C10.6811 20.1551 10.5108 20.1051 10.3506 20.035C10.1804 19.9649 10.0202=
 19.8848 9.87 19.7846C9.72982 19.6845 9.58962 19.5643 9.45945 19.4342C9.339=
29 19.314 9.21913 19.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.7132 8.8=
6866 18.543C8.79857 18.3828 8.74847 18.2125 8.71843 18.0323C8.67838 17.852 =
8.65836 17.6718 8.65836 17.4915V11.3733C8.65836 11.1931 8.67838 11.0129 8.7=
1843 10.8326C8.74847 10.6624 8.79857 10.4821 8.86866 10.3219C8.93875 10.151=
7 9.01886 9.99149 9.119 9.84129C9.21913 9.69109 9.33929 9.55088 9.45945 9.4=
2071C9.58962 9.30055 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 10.1804 8=
.90001 10.3506 8.82992C10.5108 8.75983 10.6811 8.70975 10.8613 8.6697Z" fil=
l=3D"currentColor"></path></svg></div></div><span class=3D"code-info-button=
-text">Copy</span></div><div role=3D"button" class=3D"ds-button ds-button--=
secondary ds-button--borderless ds-button--rect ds-button--s _7db3914" tabi=
ndex=3D"0" style=3D"padding: 0px 4px; height: 28px; --button-text-color: va=
r(--dsr-text-2); --button-font-size: 13px;"><div class=3D"ds-button__icon">=
<div class=3D"ds-icon" style=3D"font-size: 16px; width: 16px; height: 16px;=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M12 2.55a.97.97 0 0 1 .982.956v13.04a.97.97 0 0 1-.982.957.97.9=
7 0 0 1-.982-.956V3.507A.97.97 0 0 1 12 2.55z" fill=3D"currentColor"></path=
><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M19.418 9.808c.382.=
375.37.971-.027 1.332l-6.7 6.085a1.04 1.04 0 0 1-1.41-.025.905.905 0 0 1 .0=
27-1.332l6.7-6.085a1.04 1.04 0 0 1 1.41.025z" fill=3D"currentColor"></path>=
<path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M4.582 9.808a1.04 1.=
04 0 0 1 1.41-.025l6.7 6.085c.397.361.409.957.027 1.332a1.04 1.04 0 0 1-1.4=
1.025l-6.7-6.085a.905.905 0 0 1-.027-1.332z" fill=3D"currentColor"></path><=
path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3.068 16.46a.97.97 0=
 0 1 .983.956v1.739c0 .432.36.782.803.782h14.291c.445 0 .804-.35.804-.782v-=
1.739a.97.97 0 0 1 .983-.956.97.97 0 0 1 .982.956v1.739c0 1.488-1.24 2.695-=
2.769 2.695H4.855c-1.53 0-2.77-1.207-2.77-2.695v-1.739a.97.97 0 0 1 .983-.9=
56z" fill=3D"currentColor"></path></svg></div></div><span class=3D"code-inf=
o-button-text">Download</span></div></div></div></div></div></div><pre><spa=
n class=3D"token comment"># Add at top</span>
<span class=3D"token keyword">import</span> matplotlib<span class=3D"token =
punctuation">.</span>pyplot <span class=3D"token keyword">as</span> plt

<span class=3D"token comment"># Replace display code with:</span>
plt<span class=3D"token punctuation">.</span>figure<span class=3D"token pun=
ctuation">(</span>figsize<span class=3D"token operator">=3D</span><span cla=
ss=3D"token punctuation">(</span><span class=3D"token number">15</span><spa=
n class=3D"token punctuation">,</span> <span class=3D"token number">5</span=
><span class=3D"token punctuation">)</span><span class=3D"token punctuation=
">)</span>
plt<span class=3D"token punctuation">.</span>subplot<span class=3D"token pu=
nctuation">(</span><span class=3D"token number">131</span><span class=3D"to=
ken punctuation">)</span><span class=3D"token punctuation">,</span> plt<spa=
n class=3D"token punctuation">.</span>imshow<span class=3D"token punctuatio=
n">(</span>cv2<span class=3D"token punctuation">.</span>cvtColor<span class=
=3D"token punctuation">(</span>original_image<span class=3D"token punctuati=
on">,</span> cv2<span class=3D"token punctuation">.</span>COLOR_BGR2RGB<spa=
n class=3D"token punctuation">)</span><span class=3D"token punctuation">)</=
span><span class=3D"token punctuation">,</span> plt<span class=3D"token pun=
ctuation">.</span>title<span class=3D"token punctuation">(</span><span clas=
s=3D"token string">'Original'</span><span class=3D"token punctuation">)</sp=
an>
plt<span class=3D"token punctuation">.</span>subplot<span class=3D"token pu=
nctuation">(</span><span class=3D"token number">132</span><span class=3D"to=
ken punctuation">)</span><span class=3D"token punctuation">,</span> plt<spa=
n class=3D"token punctuation">.</span>imshow<span class=3D"token punctuatio=
n">(</span>cv2<span class=3D"token punctuation">.</span>cvtColor<span class=
=3D"token punctuation">(</span>pred_mask_orig<span class=3D"token punctuati=
on">,</span> cv2<span class=3D"token punctuation">.</span>COLOR_BGR2RGB<spa=
n class=3D"token punctuation">)</span><span class=3D"token punctuation">)</=
span><span class=3D"token punctuation">,</span> plt<span class=3D"token pun=
ctuation">.</span>title<span class=3D"token punctuation">(</span><span clas=
s=3D"token string">'Mask'</span><span class=3D"token punctuation">)</span>
plt<span class=3D"token punctuation">.</span>subplot<span class=3D"token pu=
nctuation">(</span><span class=3D"token number">133</span><span class=3D"to=
ken punctuation">)</span><span class=3D"token punctuation">,</span> plt<spa=
n class=3D"token punctuation">.</span>imshow<span class=3D"token punctuatio=
n">(</span>cv2<span class=3D"token punctuation">.</span>cvtColor<span class=
=3D"token punctuation">(</span>overlay<span class=3D"token punctuation">,</=
span> cv2<span class=3D"token punctuation">.</span>COLOR_BGR2RGB<span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">)</span><s=
pan class=3D"token punctuation">,</span> plt<span class=3D"token punctuatio=
n">.</span>title<span class=3D"token punctuation">(</span><span class=3D"to=
ken string">'Overlay'</span><span class=3D"token punctuation">)</span>
plt<span class=3D"token punctuation">.</span>show<span class=3D"token punct=
uation">(</span><span class=3D"token punctuation">)</span></pre></div><p cl=
ass=3D"ds-markdown-paragraph">The provided script focuses on robust saving =
of results without requiring GUI components, which is the most reliable app=
roach for server/headless environments.</p></div><div class=3D"ds-flex" sty=
le=3D"margin-top: 12px; height: 20px; margin-bottom: 20px; align-items: cen=
ter; gap: 10px;"><div class=3D"ds-flex _965abe9" style=3D"align-items: cent=
er; gap: 16px;"><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-=
icon-button-text-color: #909090; --ds-icon-button-size: 20px;"><div class=
=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg wid=
th=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:/=
/www.w3.org/2000/svg"><path d=3D"M3.65169 12.9243C3.68173 13.1045 3.74181 1=
3.2748 3.80189 13.445C3.87198 13.6052 3.96211 13.7654 4.06225 13.9156C4.162=
38 14.0658 4.27253 14.206 4.4027 14.3362C4.52286 14.4663 4.66306 14.5765 4.=
81326 14.6766C4.96346 14.7768 5.11366 14.8569 5.28389 14.927C5.44411 14.997=
1 5.61434 15.0571 5.79459 15.0872C5.97483 15.1272 6.14506 15.1373 6.3253 15=
.1373V16.9196C6.30739 16.9196 6.28949 16.9195 6.27159 16.9193C5.9991 16.915=
8 5.72659 16.8859 5.4541 16.8295C5.16371 16.7694 4.88334 16.6893 4.61298 16=
.5692C4.3326 16.459 4.08226 16.3188 3.83193 16.1586C3.59161 15.9884 3.3613 =
15.7981 3.15102 15.5878C2.94074 15.3776 2.7605 15.1473 2.59027 14.9069C2.43=
006 14.6566 2.28986 14.3962 2.17972 14.1259C2.06957 13.8455 1.97944 13.5651=
 1.91936 13.2747C1.86929 12.9843 1.83926 12.684 1.83926 12.3936V6.26532C1.8=
3926 5.96492 1.86929 5.67456 1.91936 5.38417C1.97944 5.09378 2.06957 4.8033=
8 2.17972 4.53302C2.28986 4.26265 2.43006 4.0023 2.59027 3.75197C2.7605 3.5=
0163 2.94074 3.27132 3.15102 3.06104C3.3613 2.85076 3.59161 2.67052 3.83193=
 2.50029C4.08226 2.33006 4.3326 2.19987 4.61298 2.07971C4.88334 1.96956 5.1=
6371 1.87943 5.4541 1.81935C5.74449 1.75927 6.03491 1.73926 6.3253 1.73926H=
12.3934C12.6838 1.73926 12.9842 1.75927 13.2746 1.81935C13.555 1.87943 13.8=
354 1.96956 14.1158 2.07971C14.3861 2.19987 14.6465 2.33006 14.8868 2.50029=
C15.1371 2.67052 15.3574 2.85076 15.5677 3.06104C15.778 3.27132 15.9582 3.5=
0163 16.1284 3.75197C16.2887 4.0023 16.4288 4.26265 16.539 4.53302C16.6592 =
4.80338 16.7393 5.09378 16.7994 5.38417C16.8558 5.65722 16.8858 5.93024 16.=
8892 6.21161C16.8894 6.22948 16.8895 6.24739 16.8895 6.26532H15.1271C15.127=
1 6.08508 15.1071 5.90486 15.067 5.72462C15.037 5.55439 14.9869 5.38415 14.=
9168 5.21392C14.8467 5.04369 14.7566 4.88347 14.6665 4.73327C14.5664 4.5830=
7 14.4462 4.45289 14.326 4.32271C14.1959 4.19254 14.0557 4.08239 13.9055 3.=
98226C13.7553 3.88212 13.6051 3.79202 13.4348 3.72193C13.2746 3.65184 13.10=
44 3.60174 12.9242 3.5717C12.7539 3.53165 12.5737 3.51163 12.3934 3.51163H6=
.3253C6.14506 3.51163 5.97483 3.53165 5.79459 3.5717C5.61434 3.60174 5.4441=
1 3.65184 5.28389 3.72193C5.11366 3.79202 4.96346 3.88212 4.81326 3.98226C4=
.66306 4.08239 4.52286 4.19254 4.4027 4.32271C4.27253 4.45289 4.16238 4.583=
07 4.06225 4.73327C3.96211 4.88347 3.87198 5.04369 3.80189 5.21392C3.74181 =
5.38415 3.68173 5.55439 3.65169 5.72462C3.61164 5.90486 3.60164 6.08508 3.6=
0164 6.26532V12.3936C3.60164 12.5638 3.61164 12.744 3.65169 12.9243Z" fill=
=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.4268 8.8987 21.2566C8.64836=
 21.0964 8.42804 20.9061 8.21776 20.6959C8.00748 20.4856 7.81723 20.2553 7.=
65701 20.015C7.4968 19.7646 7.3566 19.5043 7.24646 19.2239C7.12629 18.9535 =
7.04621 18.6731 6.98613 18.3727C6.92605 18.0823 6.89601 17.792 6.89601 17.4=
915V11.3733C6.89601 11.0729 6.92605 10.7825 6.98613 10.4922C7.04621 10.1918=
 7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 7.4968 9.10028 7.65701 8.85=
996C7.81723 8.60962 8.00748 8.37931 8.21776 8.16903C8.42804 7.95875 8.64836=
 7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 7.29785 9.66972 7.1877C9.94=
009 7.07755 10.2205 6.98745 10.5108 6.92737C10.8012 6.86729 11.0916 6.83725=
 11.392 6.83725H17.4602C17.7506 6.83725 18.041 6.86729 18.3313 6.92737C18.6=
217 6.98745 18.9021 7.07755 19.1725 7.1877C19.4529 7.29785 19.7032 7.43805 =
19.9535 7.60828C20.1938 7.76849 20.4242 7.95875 20.6345 8.16903C20.8447 8.3=
7931 21.025 8.60962 21.1952 8.85996C21.3554 9.10028 21.4956 9.36063 21.6058=
 9.64101C21.7159 9.91137 21.806 10.1918 21.8661 10.4922C21.9162 10.7825 21.=
9462 11.0729 21.9462 11.3733V17.4915C21.9462 17.792 21.9162 18.0823 21.8661=
 18.3727C21.806 18.6731 21.7159 18.9535 21.6058 19.2239C21.4956 19.5043 21.=
3554 19.7646 21.1952 20.015C21.025 20.2553 20.8447 20.4856 20.6345 20.6959C=
20.4242 20.9061 20.1938 21.0964 19.9535 21.2566C19.7032 21.4268 19.4529 21.=
567 19.1725 21.6772C18.9021 21.7973 18.6217 21.8774 18.3313 21.9375C18.041 =
21.9976 17.7506 22.0276 17.4602 22.0276H11.392C11.0916 22.0276 10.8012 21.9=
976 10.5108 21.9375C10.2205 21.8774 9.94009 21.7973 9.66972 21.6772ZM10.861=
3 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 8.61965H17.4602C17.6404 8.6=
1965 17.8107 8.63966 17.9909 8.6697C18.1611 8.70975 18.3314 8.75983 18.5016=
 8.82992C18.6618 8.90001 18.822 8.98012 18.9722 9.08026C19.1224 9.18039 19.=
2626 9.30055 19.3828 9.42071C19.513 9.55088 19.6231 9.69109 19.7232 9.84129=
C19.8234 9.99149 19.9035 10.1517 19.9736 10.3219C20.0437 10.4821 20.0937 10=
.6624 20.1338 10.8326C20.1638 11.0129 20.1838 11.1931 20.1838 11.3733V17.49=
15C20.1838 17.6718 20.1638 17.852 20.1338 18.0323C20.0937 18.2125 20.0437 1=
8.3828 19.9736 18.543C19.9035 18.7132 19.8234 18.8734 19.7232 19.0236C19.62=
31 19.1738 19.513 19.314 19.3828 19.4342C19.2626 19.5643 19.1224 19.6845 18=
.9722 19.7846C18.822 19.8848 18.6618 19.9649 18.5016 20.035C18.3314 20.1051=
 18.1611 20.1551 17.9909 20.1952C17.8107 20.2252 17.6404 20.2452 17.4602 20=
.2452H11.392C11.2118 20.2452 11.0316 20.2252 10.8613 20.1952C10.6811 20.155=
1 10.5108 20.1051 10.3506 20.035C10.1804 19.9649 10.0202 19.8848 9.87 19.78=
46C9.72982 19.6845 9.58962 19.5643 9.45945 19.4342C9.33929 19.314 9.21913 1=
9.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.7132 8.86866 18.543C8.79857=
 18.3828 8.74847 18.2125 8.71843 18.0323C8.67838 17.852 8.65836 17.6718 8.6=
5836 17.4915V11.3733C8.65836 11.1931 8.67838 11.0129 8.71843 10.8326C8.7484=
7 10.6624 8.79857 10.4821 8.86866 10.3219C8.93875 10.1517 9.01886 9.99149 9=
.119 9.84129C9.21913 9.69109 9.33929 9.55088 9.45945 9.42071C9.58962 9.3005=
5 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 10.1804 8.90001 10.3506 8.82=
992C10.5108 8.75983 10.6811 8.70975 10.8613 8.6697Z" fill=3D"currentColor">=
</path></svg></div></div><div class=3D"ds-icon-button" tabindex=3D"0" style=
=3D"--ds-icon-button-text-color: #909090; --ds-icon-button-size: 20px;"><di=
v class=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: 20px; op=
acity: 1;"><svg viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink"><defs><clipPath =
id=3D"clip1258_20811"><rect id=3D"=E9=87=8D=E6=96=B0=E7=94=9F=E6=88=90" wid=
th=3D"20.000000" height=3D"20.000000" fill=3D"white" fill-opacity=3D"0"></r=
ect></clipPath></defs><rect id=3D"=E9=87=8D=E6=96=B0=E7=94=9F=E6=88=90" wid=
th=3D"20.000000" height=3D"20.000000" fill=3D"#FFFFFF" fill-opacity=3D"0"><=
/rect><g clip-path=3D"url(#clip1258_20811)"><path id=3D"path" d=3D"M17.01 7=
.63L13.98 7.62C13.88 7.62 13.79 7.6 13.7 7.56C13.62 7.52 13.54 7.47 13.47 7=
.4C13.4 7.33 13.35 7.25 13.32 7.16C13.28 7.07 13.26 6.98 13.26 6.88C13.26 6=
.79 13.28 6.69 13.32 6.6C13.35 6.51 13.4 6.43 13.47 6.36C13.54 6.3 13.62 6.=
24 13.7 6.21C13.79 6.17 13.88 6.15 13.98 6.15L15.57 6.16C15.67 6.16 15.76 6=
.14 15.85 6.1C15.94 6.06 16.01 6.01 16.08 5.94C16.15 5.87 16.2 5.79 16.23 5=
.7C16.27 5.61 16.29 5.52 16.29 5.42L16.3 3.89C16.3 3.79 16.32 3.7 16.36 3.6=
1C16.39 3.52 16.44 3.44 16.51 3.37C16.58 3.3 16.66 3.25 16.74 3.21C16.83 3.=
17 16.92 3.16 17.02 3.16C17.11 3.16 17.2 3.17 17.29 3.21C17.38 3.25 17.46 3=
.3 17.52 3.37C17.59 3.44 17.64 3.52 17.68 3.61C17.71 3.7 17.73 3.79 17.73 3=
.89L17.72 6.9C17.72 7 17.71 7.09 17.67 7.18C17.63 7.27 17.58 7.34 17.52 7.4=
1C17.45 7.48 17.37 7.53 17.29 7.57C17.2 7.61 17.11 7.63 17.01 7.63Z" fill=
=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><p=
ath id=3D"path" d=3D"M2.31 16.29L2.32 13.3C2.32 13.21 2.34 13.11 2.37 13.02=
C2.41 12.93 2.46 12.85 2.53 12.78C2.6 12.71 2.67 12.66 2.76 12.62C2.85 12.5=
8 2.94 12.56 3.03 12.56L6.07 12.57C6.16 12.57 6.25 12.59 6.34 12.63C6.43 12=
.67 6.51 12.72 6.57 12.79C6.64 12.86 6.69 12.94 6.73 13.03C6.76 13.12 6.78 =
13.22 6.78 13.32C6.78 13.41 6.76 13.51 6.73 13.6C6.69 13.69 6.64 13.77 6.57=
 13.84C6.51 13.91 6.43 13.96 6.34 14C6.25 14.04 6.16 14.06 6.07 14.06L4.47 =
14.05C4.38 14.05 4.29 14.07 4.2 14.11C4.11 14.15 4.03 14.2 3.97 14.27C3.9 1=
4.34 3.85 14.42 3.81 14.51C3.78 14.6 3.76 14.7 3.76 14.8L3.75 16.29C3.75 16=
.39 3.73 16.48 3.69 16.58C3.65 16.67 3.6 16.75 3.54 16.82C3.47 16.89 3.39 1=
6.94 3.3 16.98C3.22 17.01 3.13 17.03 3.03 17.03C2.94 17.03 2.85 17.02 2.76 =
16.98C2.67 16.94 2.59 16.89 2.52 16.82C2.46 16.75 2.4 16.67 2.37 16.58C2.33=
 16.49 2.31 16.39 2.31 16.29Z" fill=3D"currentColor" fill-opacity=3D"1.0000=
00" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M9.88 18.01C9.51 18=
.01 9.15 17.99 8.79 17.94C8.42 17.89 8.07 17.82 7.71 17.73C7.36 17.63 7.02 =
17.51 6.68 17.37C6.34 17.23 6.02 17.07 5.7 16.89C5.39 16.7 5.09 16.5 4.8 16=
.28C4.52 16.05 4.25 15.81 3.99 15.55C3.74 15.29 3.5 15.02 3.29 14.73C3.07 1=
4.44 2.88 14.13 2.7 13.82L4.15 13.05C4.32 13.35 4.51 13.64 4.72 13.91C4.93 =
14.18 5.17 14.43 5.42 14.66C5.67 14.9 5.94 15.11 6.23 15.3C6.52 15.49 6.83 =
15.66 7.14 15.81C7.46 15.95 7.78 16.07 8.12 16.16C8.45 16.25 8.8 16.32 9.14=
 16.36C9.49 16.39 9.83 16.4 10.18 16.39C10.53 16.37 10.87 16.33 11.22 16.26=
C11.56 16.19 11.89 16.09 12.21 15.97C12.54 15.84 12.85 15.7 13.15 15.53C13.=
45 15.35 13.74 15.16 14.01 14.94C14.28 14.72 14.53 14.49 14.76 14.23C14.99 =
13.97 15.2 13.7 15.38 13.41C15.57 13.12 15.73 12.82 15.87 12.5C16 12.19 16.=
11 11.87 16.2 11.53C16.28 11.2 16.34 10.87 16.36 10.52C16.37 10.42 16.4 10.=
33 16.44 10.24C16.48 10.15 16.54 10.07 16.61 10C16.69 9.93 16.77 9.87 16.86=
 9.84C16.96 9.8 17.05 9.77 17.16 9.77C17.27 9.77 17.38 9.79 17.49 9.83C17.6=
 9.87 17.7 9.94 17.78 10.02C17.86 10.1 17.92 10.2 17.96 10.3C18 10.41 18.01=
 10.52 18 10.64C17.98 10.89 17.95 11.13 17.91 11.38C17.86 11.62 17.81 11.87=
 17.74 12.11C17.68 12.35 17.6 12.58 17.51 12.82C17.42 13.05 17.32 13.28 17.=
21 13.5C17.1 13.73 16.98 13.95 16.85 14.16C16.71 14.37 16.57 14.58 16.42 14=
.78C16.27 14.98 16.11 15.17 15.94 15.36C15.77 15.54 15.59 15.72 15.41 15.89=
C15.22 16.06 15.03 16.22 14.83 16.37C14.63 16.52 14.42 16.66 14.2 16.79C13.=
99 16.93 13.77 17.05 13.54 17.16C13.31 17.27 13.08 17.37 12.85 17.46C12.61 =
17.55 12.37 17.63 12.13 17.7C11.88 17.77 11.64 17.83 11.39 17.87C11.14 17.9=
2 10.89 17.96 10.63 17.98C10.38 18 10.13 18.01 9.88 18.01Z" fill=3D"current=
Color" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"p=
ath" d=3D"M2.85 10.27C2.73 10.28 2.62 10.26 2.51 10.22C2.4 10.17 2.31 10.11=
 2.23 10.03C2.14 9.95 2.08 9.85 2.04 9.74C2 9.63 1.99 9.52 2 9.41C2.03 8.98=
 2.1 8.56 2.2 8.15C2.3 7.73 2.43 7.33 2.6 6.94C2.76 6.54 2.96 6.16 3.19 5.8=
C3.41 5.44 3.67 5.1 3.95 4.77C4.24 4.45 4.54 4.15 4.88 3.88C5.21 3.6 5.56 3=
.35 5.93 3.13C6.3 2.91 6.69 2.73 7.09 2.57C7.5 2.41 7.91 2.28 8.33 2.19C8.7=
5 2.09 9.18 2.03 9.62 2.01C10.05 1.98 10.48 1.99 10.91 2.03C11.35 2.07 11.7=
7 2.14 12.19 2.25C12.61 2.36 13.02 2.5 13.42 2.67C13.81 2.84 14.19 3.04 14.=
56 3.28C14.92 3.51 15.27 3.77 15.59 4.05C15.91 4.34 16.21 4.64 16.48 4.98C1=
6.75 5.31 17 5.66 17.21 6.03L15.78 6.83C15.61 6.54 15.42 6.25 15.2 5.99C14.=
98 5.73 14.74 5.48 14.49 5.25C14.23 5.02 13.96 4.82 13.66 4.63C13.37 4.45 1=
3.07 4.29 12.75 4.15C12.44 4.01 12.11 3.9 11.77 3.82C11.44 3.73 11.1 3.67 1=
0.76 3.64C10.41 3.61 10.07 3.6 9.72 3.62C9.37 3.64 9.03 3.69 8.69 3.77C8.36=
 3.84 8.03 3.94 7.71 4.07C7.38 4.2 7.08 4.35 6.78 4.52C6.48 4.7 6.2 4.89 5.=
94 5.11C5.67 5.33 5.43 5.57 5.2 5.83C4.97 6.08 4.77 6.36 4.59 6.65C4.41 6.9=
4 4.25 7.24 4.12 7.55C3.98 7.87 3.88 8.19 3.8 8.52C3.72 8.85 3.66 9.19 3.64=
 9.53C3.63 9.62 3.6 9.72 3.56 9.81C3.52 9.9 3.46 9.98 3.39 10.05C3.32 10.12=
 3.23 10.17 3.14 10.21C3.05 10.25 2.95 10.27 2.85 10.27Z" fill=3D"currentCo=
lor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"></path></g></svg></div=
></div><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-butt=
on-text-color: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon=
" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg width=3D"20" h=
eight=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M18.14 9.=
428l-.003.019L17.114 15a3.774 3.774 0 0 1-1.313 2.27 3.673 3.673 0 0 1-2.43=
8.894H3.895c-.57 0-1.055-.205-1.458-.614a2.033 2.033 0 0 1-.604-1.48v-5.438=
c0-.578.201-1.071.604-1.48.402-.41.888-.614 1.458-.614h1.932l2.317-5.293c.2=
4-.548.6-.948 1.083-1.2.599-.312 1.156-.278 1.672.103.782.577 1.172 1.355 1=
.172 2.334V6.997h3.994c.638-.007 1.167.235 1.588.726.421.492.584 1.06.488 1=
.705zm-2.076-2.6c.686-.007 1.262.256 1.714.785.453.529.63 1.146.527 1.84v.0=
04l-.005.02v.003l-1.022 5.552a3.943 3.943 0 0 1-1.37 2.368 3.838 3.838 0 0 =
1-2.545.933H3.895a2.137 2.137 0 0 1-1.576-.663 2.203 2.203 0 0 1-.652-1.6v-=
5.437c0-.622.218-1.159.652-1.6.434-.44.962-.663 1.576-.663H5.72l2.273-5.192=
c.254-.58.64-1.01 1.159-1.282.32-.167.64-.246.953-.227.315.02.613.137.893.3=
44.824.608 1.24 1.437 1.24 2.47v2.345h3.827zM9.741 3.063c-.247.128-.437.344=
-.57.647L6.708 9.34v7.683h6.655a2.59 2.59 0 0 0 1.72-.63c.498-.42.807-.955.=
926-1.601l1.02-5.544a.936.936 0 0 0-.225-.773.917.917 0 0 0-.739-.335h-4.55=
7a.567.567 0 0 1-.562-.571V4.483c0-.591-.236-1.061-.708-1.41-.143-.105-.309=
-.109-.497-.01zm7.124 6.157a.766.766 0 0 0-.186-.636.753.753 0 0 0-.612-.27=
6h-4.559a.734.734 0 0 1-.728-.74V4.483c0-.537-.21-.956-.64-1.273a.233.233 0=
 0 0-.137-.05.387.387 0 0 0-.185.053c-.208.108-.374.291-.495.566m0 0L6.874 =
9.375v7.479h6.489c.609 0 1.145-.197 1.614-.592.468-.396.757-.894.869-1.502l=
1.02-5.54M3.35 16.623c.152.155.33.23.545.23h1.522V9.85H3.895a.732.732 0 0 0=
-.545.23.755.755 0 0 0-.226.553v5.437c0 .218.074.4.226.553zm.545-6.941a.897=
.897 0 0 0-.663.278.924.924 0 0 0-.274.673v5.437c0 .263.091.487.274.673.183=
.186.404.28.663.28h1.688V9.681H3.895z" fill=3D"currentColor"></path><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M18.137 9.447l.004-.02a2.04=
4 2.044 0 0 0-.488-1.704c-.421-.491-.95-.733-1.588-.726h-2.282l1.584 1.142h=
.698a.917.917 0 0 1 .739.335.936.936 0 0 1 .225.773l-1.02 5.543a2.663 2.663=
 0 0 1-.926 1.602 2.59 2.59 0 0 1-1.72.63H6.708V9.34L9.171 3.71c.133-.303.3=
23-.519.57-.647.188-.099.354-.095.497.01.472.349.708.819.708 1.41v.467l1.12=
5.811V4.483c0-.98-.39-1.757-1.171-2.334-.517-.38-1.074-.415-1.673-.103-.482=
.252-.843.652-1.083 1.2L5.827 8.54H3.895c-.57 0-1.056.205-1.458.614a2.033 2=
.033 0 0 0-.604 1.48v5.437c0 .578.201 1.072.604 1.48.403.41.889.615 1.458.6=
15h9.468c.918 0 1.731-.299 2.438-.895A3.774 3.774 0 0 0 17.114 15l1.023-5.5=
53zm-14.242.235a.897.897 0 0 0-.663.278.924.924 0 0 0-.274.673v5.437c0 .263=
.091.487.274.673.183.186.404.28.663.28h1.688V9.681H3.895z" fill=3D"currentC=
olor"></path><path d=3D"M10.946 7.568c0 .316.252.571.563.571h3.858l-1.584-1=
.142h-1.712V5.76l-1.125-.811v2.618z" fill=3D"currentColor"></path></svg></d=
iv></div><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-bu=
tton-text-color: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-ic=
on" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg width=3D"20"=
 height=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.o=
rg/2000/svg"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M18.304=
 10.543v.004a2.214 2.214 0 0 1-.526 1.84c-.452.528-1.028.792-1.714.784h-3.8=
27v2.345c0 1.034-.416 1.863-1.24 2.471-.28.207-.578.324-.893.343-.314.02-.6=
32-.06-.953-.226-.519-.271-.905-.702-1.159-1.282l-2.273-5.193H3.895a2.136 2=
.136 0 0 1-1.576-.663 2.203 2.203 0 0 1-.652-1.6V3.93c0-.623.218-1.16.652-1=
.6.434-.441.963-.663 1.576-.663h9.468c.957 0 1.807.311 2.544.933a3.943 3.94=
3 0 0 1 1.37 2.368L18.3 10.52v.002l.004.02zm-1.19-5.544a3.774 3.774 0 0 0-1=
.313-2.27 3.673 3.673 0 0 0-2.438-.894H3.895c-.57 0-1.055.205-1.458.614a2.0=
33 2.033 0 0 0-.604 1.48v5.437c0 .578.201 1.072.604 1.48.402.41.888.615 1.4=
58.615h1.932l2.317 5.292c.24.549.6.949 1.083 1.2.599.313 1.156.279 1.672-.1=
02.782-.577 1.172-1.355 1.172-2.335v-2.513h3.994c.638.007 1.167-.235 1.588-=
.727.421-.491.584-1.06.488-1.704l-.004-.02L17.114 5zM9.819 16.787c.076.04.1=
37.053.185.052a.233.233 0 0 0 .137-.05c.43-.316.64-.735.64-1.273v-3.084c0-.=
41.327-.74.729-.74h4.558a.752.752 0 0 0 .612-.277.766.766 0 0 0 .186-.635l-=
1.02-5.54a2.495 2.495 0 0 0-.869-1.502 2.426 2.426 0 0 0-1.613-.592H6.874v7=
.48l2.449 5.595m-2.615-5.56V2.978h6.655c.648 0 1.221.21 1.72.63.498.42.807.=
954.926 1.601l1.02 5.543a.936.936 0 0 1-.225.774.917.917 0 0 1-.739.335h-4.=
557a.567.567 0 0 0-.562.57v3.085c0 .592-.236 1.062-.708 1.41-.143.106-.309.=
11-.497.01-.247-.128-.437-.343-.57-.647l-2.463-5.628zM3.35 3.376a.754.754 0=
 0 0-.226.554v5.436c0 .218.074.4.226.554.152.154.33.23.545.23h1.522V3.146H3=
.895a.731.731 0 0 0-.545.23zm2.233-.398v7.34H3.895a.897.897 0 0 1-.663-.279=
.925.925 0 0 1-.274-.673V3.93c0-.263.091-.487.274-.673a.895.895 0 0 1 .663-=
.28h1.688zm4.235 13.809c-.208-.108-.375-.292-.495-.566l.495.566z" fill=3D"c=
urrentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M15.801 2.73a3.774 3.774 0 0 1 1.313 2.269l1.023 5.554.004.019a2.044 2.044 =
0 0 1-.488 1.704c-.421.492-.95.734-1.588.727h-3.994v2.513c0 .98-.39 1.758-1=
.171 2.335-.517.38-1.074.415-1.673.102-.482-.251-.843-.651-1.083-1.2l-2.317=
-5.292H3.895c-.57 0-1.056-.205-1.458-.614a2.033 2.033 0 0 1-.604-1.48V3.93c=
0-.579.201-1.072.604-1.481.403-.41.889-.614 1.458-.614h9.468c.918 0 1.731.2=
98 2.438.894zm-2.438.248c.648 0 1.221.21 1.72.63.498.42.807.954.926 1.601l1=
.02 5.543a.936.936 0 0 1-.225.774.917.917 0 0 1-.739.335h-4.557a.567.567 0 =
0 0-.562.57v3.085c0 .592-.236 1.062-.708 1.41-.143.106-.309.11-.497.01-.247=
-.128-.437-.343-.57-.647l-2.463-5.628V2.978h6.655zm-9.468 7.34a.897.897 0 0=
 1-.663-.279.925.925 0 0 1-.274-.673V3.93c0-.263.091-.487.274-.673a.895.895=
 0 0 1 .663-.28h1.688v7.341H3.895z" fill=3D"currentColor"></path></svg></di=
v></div></div><div style=3D"flex: 1 1 0%;"></div></div></div><div class=3D"=
_9663006"><div class=3D"fbb737a4">code without display is good for me.=20
help fix below warning.
FutureWarning: You are using `torch.load` with `weights_only=3DFalse` (the =
current default value), which uses the default pickle module implicitly. It=
 is possible to construct malicious pickle data which will execute arbitrar=
y code during unpickling (See https://github.com/pytorch/pytorch/blob/main/=
SECURITY.md#untrusted-models for more details). In a future release, the de=
fault value for `weights_only` will be flipped to `True`. This limits the f=
unctions that could be executed during unpickling. Arbitrary objects will n=
o longer be allowed to be loaded via this mode unless they are explicitly a=
llowlisted by the user via `torch.serialization.add_safe_globals`. We recom=
mend you start setting `weights_only=3DTrue` for any use case where you don=
't have full control of the loaded file. Please open an issue on GitHub for=
 any issues related to this experimental feature.
  model.load_state_dict(torch.load(CHECKPOINT_PATH, map_location=3Ddevice)[=
"model_state_dict"])</div><div class=3D"e13328ad _3a26104"><div class=3D"_4=
25ea0b"><div class=3D"ds-flex _78e0558 _0bbda35" style=3D"align-items: flex=
-end; gap: 0px;"><div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds=
-icon-button-text-color: #909090; --ds-icon-button-size: 20px;"><div class=
=3D"ds-icon" style=3D"font-size: 20px; width: 20px; height: 20px;"><svg wid=
th=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:/=
/www.w3.org/2000/svg"><path d=3D"M3.65169 12.9243C3.68173 13.1045 3.74181 1=
3.2748 3.80189 13.445C3.87198 13.6052 3.96211 13.7654 4.06225 13.9156C4.162=
38 14.0658 4.27253 14.206 4.4027 14.3362C4.52286 14.4663 4.66306 14.5765 4.=
81326 14.6766C4.96346 14.7768 5.11366 14.8569 5.28389 14.927C5.44411 14.997=
1 5.61434 15.0571 5.79459 15.0872C5.97483 15.1272 6.14506 15.1373 6.3253 15=
.1373V16.9196C6.30739 16.9196 6.28949 16.9195 6.27159 16.9193C5.9991 16.915=
8 5.72659 16.8859 5.4541 16.8295C5.16371 16.7694 4.88334 16.6893 4.61298 16=
.5692C4.3326 16.459 4.08226 16.3188 3.83193 16.1586C3.59161 15.9884 3.3613 =
15.7981 3.15102 15.5878C2.94074 15.3776 2.7605 15.1473 2.59027 14.9069C2.43=
006 14.6566 2.28986 14.3962 2.17972 14.1259C2.06957 13.8455 1.97944 13.5651=
 1.91936 13.2747C1.86929 12.9843 1.83926 12.684 1.83926 12.3936V6.26532C1.8=
3926 5.96492 1.86929 5.67456 1.91936 5.38417C1.97944 5.09378 2.06957 4.8033=
8 2.17972 4.53302C2.28986 4.26265 2.43006 4.0023 2.59027 3.75197C2.7605 3.5=
0163 2.94074 3.27132 3.15102 3.06104C3.3613 2.85076 3.59161 2.67052 3.83193=
 2.50029C4.08226 2.33006 4.3326 2.19987 4.61298 2.07971C4.88334 1.96956 5.1=
6371 1.87943 5.4541 1.81935C5.74449 1.75927 6.03491 1.73926 6.3253 1.73926H=
12.3934C12.6838 1.73926 12.9842 1.75927 13.2746 1.81935C13.555 1.87943 13.8=
354 1.96956 14.1158 2.07971C14.3861 2.19987 14.6465 2.33006 14.8868 2.50029=
C15.1371 2.67052 15.3574 2.85076 15.5677 3.06104C15.778 3.27132 15.9582 3.5=
0163 16.1284 3.75197C16.2887 4.0023 16.4288 4.26265 16.539 4.53302C16.6592 =
4.80338 16.7393 5.09378 16.7994 5.38417C16.8558 5.65722 16.8858 5.93024 16.=
8892 6.21161C16.8894 6.22948 16.8895 6.24739 16.8895 6.26532H15.1271C15.127=
1 6.08508 15.1071 5.90486 15.067 5.72462C15.037 5.55439 14.9869 5.38415 14.=
9168 5.21392C14.8467 5.04369 14.7566 4.88347 14.6665 4.73327C14.5664 4.5830=
7 14.4462 4.45289 14.326 4.32271C14.1959 4.19254 14.0557 4.08239 13.9055 3.=
98226C13.7553 3.88212 13.6051 3.79202 13.4348 3.72193C13.2746 3.65184 13.10=
44 3.60174 12.9242 3.5717C12.7539 3.53165 12.5737 3.51163 12.3934 3.51163H6=
.3253C6.14506 3.51163 5.97483 3.53165 5.79459 3.5717C5.61434 3.60174 5.4441=
1 3.65184 5.28389 3.72193C5.11366 3.79202 4.96346 3.88212 4.81326 3.98226C4=
.66306 4.08239 4.52286 4.19254 4.4027 4.32271C4.27253 4.45289 4.16238 4.583=
07 4.06225 4.73327C3.96211 4.88347 3.87198 5.04369 3.80189 5.21392C3.74181 =
5.38415 3.68173 5.55439 3.65169 5.72462C3.61164 5.90486 3.60164 6.08508 3.6=
0164 6.26532V12.3936C3.60164 12.5638 3.61164 12.744 3.65169 12.9243Z" fill=
=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M9.66972 21.6772C9.39936 21.567 9.13902 21.4268 8.8987 21.2566C8.64836=
 21.0964 8.42804 20.9061 8.21776 20.6959C8.00748 20.4856 7.81723 20.2553 7.=
65701 20.015C7.4968 19.7646 7.3566 19.5043 7.24646 19.2239C7.12629 18.9535 =
7.04621 18.6731 6.98613 18.3727C6.92605 18.0823 6.89601 17.792 6.89601 17.4=
915V11.3733C6.89601 11.0729 6.92605 10.7825 6.98613 10.4922C7.04621 10.1918=
 7.12629 9.91137 7.24646 9.64101C7.3566 9.36063 7.4968 9.10028 7.65701 8.85=
996C7.81723 8.60962 8.00748 8.37931 8.21776 8.16903C8.42804 7.95875 8.64836=
 7.76849 8.8987 7.60828C9.13902 7.43805 9.39936 7.29785 9.66972 7.1877C9.94=
009 7.07755 10.2205 6.98745 10.5108 6.92737C10.8012 6.86729 11.0916 6.83725=
 11.392 6.83725H17.4602C17.7506 6.83725 18.041 6.86729 18.3313 6.92737C18.6=
217 6.98745 18.9021 7.07755 19.1725 7.1877C19.4529 7.29785 19.7032 7.43805 =
19.9535 7.60828C20.1938 7.76849 20.4242 7.95875 20.6345 8.16903C20.8447 8.3=
7931 21.025 8.60962 21.1952 8.85996C21.3554 9.10028 21.4956 9.36063 21.6058=
 9.64101C21.7159 9.91137 21.806 10.1918 21.8661 10.4922C21.9162 10.7825 21.=
9462 11.0729 21.9462 11.3733V17.4915C21.9462 17.792 21.9162 18.0823 21.8661=
 18.3727C21.806 18.6731 21.7159 18.9535 21.6058 19.2239C21.4956 19.5043 21.=
3554 19.7646 21.1952 20.015C21.025 20.2553 20.8447 20.4856 20.6345 20.6959C=
20.4242 20.9061 20.1938 21.0964 19.9535 21.2566C19.7032 21.4268 19.4529 21.=
567 19.1725 21.6772C18.9021 21.7973 18.6217 21.8774 18.3313 21.9375C18.041 =
21.9976 17.7506 22.0276 17.4602 22.0276H11.392C11.0916 22.0276 10.8012 21.9=
976 10.5108 21.9375C10.2205 21.8774 9.94009 21.7973 9.66972 21.6772ZM10.861=
3 8.6697C11.0316 8.63966 11.2118 8.61965 11.392 8.61965H17.4602C17.6404 8.6=
1965 17.8107 8.63966 17.9909 8.6697C18.1611 8.70975 18.3314 8.75983 18.5016=
 8.82992C18.6618 8.90001 18.822 8.98012 18.9722 9.08026C19.1224 9.18039 19.=
2626 9.30055 19.3828 9.42071C19.513 9.55088 19.6231 9.69109 19.7232 9.84129=
C19.8234 9.99149 19.9035 10.1517 19.9736 10.3219C20.0437 10.4821 20.0937 10=
.6624 20.1338 10.8326C20.1638 11.0129 20.1838 11.1931 20.1838 11.3733V17.49=
15C20.1838 17.6718 20.1638 17.852 20.1338 18.0323C20.0937 18.2125 20.0437 1=
8.3828 19.9736 18.543C19.9035 18.7132 19.8234 18.8734 19.7232 19.0236C19.62=
31 19.1738 19.513 19.314 19.3828 19.4342C19.2626 19.5643 19.1224 19.6845 18=
.9722 19.7846C18.822 19.8848 18.6618 19.9649 18.5016 20.035C18.3314 20.1051=
 18.1611 20.1551 17.9909 20.1952C17.8107 20.2252 17.6404 20.2452 17.4602 20=
.2452H11.392C11.2118 20.2452 11.0316 20.2252 10.8613 20.1952C10.6811 20.155=
1 10.5108 20.1051 10.3506 20.035C10.1804 19.9649 10.0202 19.8848 9.87 19.78=
46C9.72982 19.6845 9.58962 19.5643 9.45945 19.4342C9.33929 19.314 9.21913 1=
9.1738 9.119 19.0236C9.01886 18.8734 8.93875 18.7132 8.86866 18.543C8.79857=
 18.3828 8.74847 18.2125 8.71843 18.0323C8.67838 17.852 8.65836 17.6718 8.6=
5836 17.4915V11.3733C8.65836 11.1931 8.67838 11.0129 8.71843 10.8326C8.7484=
7 10.6624 8.79857 10.4821 8.86866 10.3219C8.93875 10.1517 9.01886 9.99149 9=
.119 9.84129C9.21913 9.69109 9.33929 9.55088 9.45945 9.42071C9.58962 9.3005=
5 9.72982 9.18039 9.87 9.08026C10.0202 8.98012 10.1804 8.90001 10.3506 8.82=
992C10.5108 8.75983 10.6811 8.70975 10.8613 8.6697Z" fill=3D"currentColor">=
</path></svg></div></div><div class=3D"ds-icon-button" tabindex=3D"0" style=
=3D"--ds-icon-button-text-color: #909090; --ds-icon-button-size: 20px; marg=
in-left: 14px; opacity: 1;"><div class=3D"ds-icon" style=3D"font-size: 20px=
; width: 20px; height: 20px;"><svg width=3D"20" height=3D"20" viewBox=3D"0 =
0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.712 2.79a1.854 1.854 0 0 1 2.62=
3 0l1.673 1.672a1.854 1.854 0 0 1 0 2.623l-9.714 9.714a2.91 2.91 0 0 1-2.05=
8.853H1.945a.8.8 0 0 1-.8-.8v-2.29c0-.773.307-1.513.853-2.058l9.714-9.715zm=
1.492 1.13c-.1-.1-.261-.1-.361 0l-1.327 1.326 2.035 2.035 1.327-1.326c.1-.1=
.1-.262 0-.362L13.204 3.92zm-.783 4.491l-2.035-2.034-7.258 7.257a1.31 1.31 =
0 0 0-.384.927v1.492h1.492c.348 0 .681-.138.927-.384l7.258-7.258z" fill=3D"=
currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M17.772 17.608c.35 0 .633-.283.633-.633v-.492a.633.633 0 0 0-.633-.633H9.8=
58L8.1 17.608h9.672z" fill=3D"currentColor"></path></svg></div></div></div>=
</div></div></div><div class=3D"_4f9bf79 d7dc56a8 _43c05b5"><div class=3D"_=
7eb2358 _58dfa60"><svg viewBox=3D"0 0 30 30" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink"><path id=
=3D"path" d=3D"M27.501 8.46875C27.249 8.3457 27.1406 8.58008 26.9932 8.6992=
2C26.9434 8.73828 26.9004 8.78906 26.8584 8.83398C26.4902 9.22852 26.0605 9=
.48633 25.5 9.45508C24.6787 9.41016 23.9785 9.66797 23.3594 10.2969C23.2275=
 9.52148 22.79 9.05859 22.125 8.76172C21.7764 8.60742 21.4238 8.45312 21.18=
07 8.11719C21.0098 7.87891 20.9639 7.61328 20.8779 7.35156C20.8242 7.19336 =
20.7695 7.03125 20.5879 7.00391C20.3906 6.97266 20.3135 7.13867 20.2363 7.2=
7734C19.9258 7.84375 19.8066 8.46875 19.8174 9.10156C19.8447 10.5234 20.445=
3 11.6562 21.6367 12.4629C21.7725 12.5547 21.8076 12.6484 21.7646 12.7832C2=
1.6836 13.0605 21.5869 13.3301 21.501 13.6074C21.4473 13.7852 21.3662 13.82=
42 21.1768 13.7461C20.5225 13.4727 19.957 13.0684 19.458 12.5781C18.6104 11=
.7578 17.8438 10.8516 16.8877 10.1426C16.6631 9.97656 16.4395 9.82227 16.20=
7 9.67578C15.2314 8.72656 16.335 7.94727 16.5898 7.85547C16.8574 7.75977 16=
.6826 7.42773 15.8193 7.43164C14.957 7.43555 14.167 7.72461 13.1611 8.10938=
C13.0137 8.16797 12.8594 8.21094 12.7002 8.24414C11.7871 8.07227 10.8389 8.=
0332 9.84766 8.14453C7.98242 8.35352 6.49219 9.23633 5.39648 10.7441C4.0810=
5 12.5547 3.77148 14.6133 4.15039 16.7617C4.54883 19.0234 5.70215 20.8984 7=
.47559 22.3633C9.31348 23.8809 11.4307 24.625 13.8457 24.4824C15.3125 24.39=
84 16.9463 24.2012 18.7881 22.6406C19.2529 22.8711 19.7402 22.9629 20.5498 =
23.0332C21.1729 23.0918 21.7725 23.002 22.2373 22.9062C22.9648 22.752 22.91=
41 22.0781 22.6514 21.9531C20.5186 20.959 20.9863 21.3633 20.5605 21.0371C2=
1.6445 19.752 23.2783 18.418 23.917 14.0977C23.9668 13.7539 23.9238 13.5391=
 23.917 13.2598C23.9131 13.0918 23.9512 13.0254 24.1445 13.0059C24.6787 12.=
9453 25.1973 12.7988 25.6738 12.5352C27.0557 11.7793 27.6123 10.5391 27.744=
1 9.05078C27.7637 8.82422 27.7402 8.58789 27.501 8.46875ZM15.46 21.8613C13.=
3926 20.2344 12.3906 19.6992 11.9766 19.7227C11.5898 19.7441 11.6592 20.187=
5 11.7441 20.4766C11.833 20.7617 11.9492 20.959 12.1123 21.209C12.2246 21.3=
75 12.3018 21.623 12 21.8066C11.334 22.2207 10.1768 21.668 10.1221 21.6406C=
8.77539 20.8477 7.64941 19.7988 6.85547 18.3652C6.08984 16.9844 5.64453 15.=
5039 5.57129 13.9238C5.55176 13.541 5.66406 13.4062 6.04297 13.3379C6.54199=
 13.2461 7.05762 13.2266 7.55664 13.2988C9.66602 13.6074 11.4619 14.5527 12=
.9668 16.0469C13.8262 16.9004 14.4766 17.918 15.1465 18.9121C15.8584 19.968=
8 16.625 20.9746 17.6006 21.7988C17.9443 22.0879 18.2197 22.3086 18.4824 22=
.4707C17.6895 22.5586 16.3652 22.5781 15.46 21.8613ZM16.4502 15.4805C16.450=
2 15.3105 16.5859 15.1758 16.7568 15.1758C16.7949 15.1758 16.8301 15.1836 1=
6.8613 15.1953C16.9033 15.2109 16.9424 15.2344 16.9727 15.2695C17.0273 15.3=
223 17.0586 15.4004 17.0586 15.4805C17.0586 15.6504 16.9229 15.7852 16.7529=
 15.7852C16.582 15.7852 16.4502 15.6504 16.4502 15.4805ZM19.5273 17.0625C19=
.3301 17.1426 19.1328 17.2129 18.9434 17.2207C18.6494 17.2344 18.3281 17.11=
52 18.1533 16.9688C17.8828 16.7422 17.6895 16.6152 17.6074 16.2168C17.5732 =
16.0469 17.5928 15.7852 17.623 15.6348C17.6934 15.3105 17.6152 15.1035 17.3=
877 14.9141C17.2012 14.7598 16.9658 14.7188 16.7061 14.7188C16.6094 14.7188=
 16.5205 14.6758 16.4541 14.6406C16.3457 14.5859 16.2568 14.4512 16.3418 14=
.2852C16.3691 14.2324 16.501 14.1016 16.5322 14.0781C16.8838 13.877 17.29 1=
3.9434 17.666 14.0938C18.0146 14.2363 18.2773 14.498 18.6562 14.8672C19.043=
9 15.3145 19.1133 15.4395 19.334 15.7734C19.5078 16.0371 19.667 16.3066 19.=
7754 16.6152C19.8408 16.8066 19.7559 16.9648 19.5273 17.0625Z" fill-rule=3D=
"nonzero" fill=3D"#4D6BFE"></path></svg></div><div class=3D"_48edb25"><div =
class=3D"_58a6d71 _19db599"><div class=3D"ds-icon _7580acb" style=3D"font-s=
ize: 12px; width: 12px; height: 12px;"><svg width=3D"20" height=3D"20" view=
Box=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path =
d=3D"M2.656 17.344c-1.016-1.015-1.15-2.75-.313-4.925.325-.825.73-1.617 1.20=
5-2.365L3.582 10l-.033-.054c-.5-.799-.91-1.596-1.206-2.365-.836-2.175-.703-=
3.91.313-4.926.56-.56 1.364-.86 2.335-.86 1.425 0 3.168.636 4.957 1.756l.05=
3.034.053-.034c1.79-1.12 3.532-1.757 4.957-1.757.972 0 1.776.3 2.335.86 1.0=
14 1.015 1.148 2.752.312 4.926a13.892 13.892 0 0 1-1.206 2.365l-.034.054.03=
4.053c.5.8.91 1.596 1.205 2.365.837 2.175.704 3.911-.311 4.926-.56.56-1.364=
.861-2.335.861-1.425 0-3.168-.637-4.957-1.757L10 16.415l-.053.033c-1.79 1.1=
2-3.532 1.757-4.957 1.757-.972 0-1.776-.3-2.335-.86zm13.631-4.399c-.187-.48=
8-.429-.988-.71-1.492l-.075-.132-.092.12a22.075 22.075 0 0 1-3.968 3.968l-.=
12.093.132.074c1.308.734 2.559 1.162 3.556 1.162.563 0 1.006-.138 1.298-.43=
.3-.3.436-.774.428-1.346-.008-.575-.159-1.264-.449-2.017zm-6.345 1.65l.058.=
042.058-.042a19.881 19.881 0 0 0 4.551-4.537l.043-.058-.043-.058a20.123 20.=
123 0 0 0-2.093-2.458 19.732 19.732 0 0 0-2.458-2.08L10 5.364l-.058.042A19.=
883 19.883 0 0 0 5.39 9.942L5.348 10l.042.059c.631.874 1.332 1.695 2.094 2.=
457a19.74 19.74 0 0 0 2.458 2.08zm6.366-10.902c-.293-.293-.736-.431-1.298-.=
431-.998 0-2.248.429-3.556 1.163l-.132.074.12.092a21.938 21.938 0 0 1 3.968=
 3.968l.092.12.074-.132c.282-.504.524-1.004.711-1.492.29-.753.442-1.442.45-=
2.017.007-.572-.129-1.045-.429-1.345zM3.712 7.055c.202.514.44 1.013.712 1.4=
93l.074.13.092-.119a21.94 21.94 0 0 1 3.968-3.968l.12-.092-.132-.074C7.238 =
3.69 5.987 3.262 4.99 3.262c-.563 0-1.006.138-1.298.43-.3.301-.436.774-.428=
 1.346.007.575.159 1.264.448 2.017zm0 5.89c-.29.753-.44 1.442-.448 2.017-.0=
08.572.127 1.045.428 1.345.293.293.736.431 1.298.431.997 0 2.247-.428 3.556=
-1.162l.131-.074-.12-.093a21.94 21.94 0 0 1-3.967-3.968l-.093-.12-.074.132a=
11.712 11.712 0 0 0-.71 1.492z" fill=3D"currentColor" stroke=3D"currentColo=
r" stroke-width=3D".1"></path><path d=3D"M10.706 11.704A1.843 1.843 0 0 1 8=
.155 10a1.845 1.845 0 1 1 2.551 1.704z" fill=3D"currentColor" stroke=3D"cur=
rentColor" stroke-width=3D".2"></path></svg></div>Thought for 23 seconds<di=
v class=3D"ds-icon _54f4262" style=3D"font-size: 10px; width: 10px; height:=
 10px; transform: rotate(180deg);"><svg width=3D"10" height=3D"6" viewBox=
=3D"0 0 10 6" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D=
"M5.786 4.167L2.765 1.259c-.416-.4-.985-.482-1.273-.183-.287.298-.183.864.2=
33 1.264l3.021 2.908c.416.4.986.482 1.273.184.287-.299.183-.865-.233-1.265z=
" fill=3D"currentColor"></path><path d=3D"M8.197 1.206L5.288 4.208c-.4.413-=
.484.982-.187 1.27.298.289.864.187 1.265-.227L9.274 2.25c.401-.414.485-.983=
.187-1.271-.297-.288-.863-.187-1.264.227z" fill=3D"currentColor"></path></s=
vg></div></div><div class=3D"e1675d8b"><div class=3D"_9ecc93a"></div>We are=
 getting a warning about using `torch.load` without setting `weights_only=
=3DTrue`.<div style=3D"height: 6px;"></div> Since we are loading our own mo=
del (which we trust), we can safely set `weights_only=3DTrue` to avoid the =
warning and future compatibility issues.<div style=3D"height: 6px;"></div> =
However, note that `weights_only=3DTrue` might not support all types of obj=
ects. Since we are only loading state_dict (which should be safe), we can u=
se it.<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> =
But note: The warning says that in a future release, the default will chang=
e to `True`. So we should set it to `True` now to be safe.<div style=3D"hei=
ght: 6px;"></div><div style=3D"height: 6px;"></div> However, the error mess=
age also says that if we have full control of the loaded file, we can set `=
weights_only=3DTrue`.<div style=3D"height: 6px;"></div><div style=3D"height=
: 6px;"></div> Let's change the line to:<div style=3D"height: 6px;"></div> =
  checkpoint =3D torch.load(CHECKPOINT_PATH, map_location=3Ddevice, weights=
_only=3DTrue)<div style=3D"height: 6px;"></div>   model.load_state_dict(che=
ckpoint["model_state_dict"])<div style=3D"height: 6px;"></div><div style=3D=
"height: 6px;"></div> But note: `weights_only` was added in PyTorch 1.13. I=
f you are using an older version, this might cause an error.<div style=3D"h=
eight: 6px;"></div><div style=3D"height: 6px;"></div> We can do a version c=
heck to be safe. Alternatively, we can try to use it and fall back to the o=
ld method if it fails.<div style=3D"height: 6px;"></div><div style=3D"heigh=
t: 6px;"></div> Alternatively, if we are sure we are using PyTorch &gt;=3D =
1.13, we can set it to True.<div style=3D"height: 6px;"></div><div style=3D=
"height: 6px;"></div> However, the warning says that in a future release th=
e default will change to True, so we can also ignore the warning until we u=
pdate PyTorch and then set it to True.<div style=3D"height: 6px;"></div><di=
v style=3D"height: 6px;"></div> But the problem is that we are getting a wa=
rning and we want to suppress it.<div style=3D"height: 6px;"></div><div sty=
le=3D"height: 6px;"></div> Let's check the PyTorch version and conditionall=
y set `weights_only`.<div style=3D"height: 6px;"></div><div style=3D"height=
: 6px;"></div> However, note that the warning is about the future change. W=
e can also set `weights_only=3DTrue` without condition for PyTorch&gt;=3D1.=
13 and for older versions we don't set it.<div style=3D"height: 6px;"></div=
><div style=3D"height: 6px;"></div> But the code might run on different env=
ironments. We can do:<div style=3D"height: 6px;"></div><div style=3D"height=
: 6px;"></div>   import torch<div style=3D"height: 6px;"></div>   if torch.=
__version__ &gt;=3D '1.13.0':<div style=3D"height: 6px;"></div>        chec=
kpoint =3D torch.load(CHECKPOINT_PATH, map_location=3Ddevice, weights_only=
=3DTrue)<div style=3D"height: 6px;"></div>   else:<div style=3D"height: 6px=
;"></div>        checkpoint =3D torch.load(CHECKPOINT_PATH, map_location=3D=
device)<div style=3D"height: 6px;"></div><div style=3D"height: 6px;"></div>=
 Alternatively, we can try to catch the TypeError (if the argument is not r=
ecognized) and then fall back.<div style=3D"height: 6px;"></div><div style=
=3D"height: 6px;"></div> Let's do:<div style=3D"height: 6px;"></div><div st=
yle=3D"height: 6px;"></div>   try:<div style=3D"height: 6px;"></div>       =
 checkpoint =3D torch.load(CHECKPOINT_PATH, map_location=3Ddevice, weights_=
only=3DTrue)<div style=3D"height: 6px;"></div>   except TypeError:<div styl=
e=3D"height: 6px;"></div>        checkpoint =3D torch.load(CHECKPOINT_PATH,=
 map_location=3Ddevice)<div style=3D"height: 6px;"></div><div style=3D"heig=
ht: 6px;"></div> But note: The warning says that the default is currently `=
False` and will change to `True` in the future. So if we set `weights_only=
=3DTrue` and we are in an environment that doesn't support it (PyTorch&lt;1=
.13), we get an error. So the fallback is necessary.<div style=3D"height: 6=
px;"></div><div style=3D"height: 6px;"></div> Alternatively, we can ignore =
the warning if we don't care. But to be clean, let's handle it.<div style=
=3D"height: 6px;"></div><div style=3D"height: 6px;"></div> However, the war=
ning is a FutureWarning, which is not critical. But if we want to avoid it,=
 we can do the above.<div style=3D"height: 6px;"></div><div style=3D"height=
: 6px;"></div> Let's update the code accordingly.</div></div><div class=3D"=
ds-markdown ds-markdown--block" style=3D"--ds-md-zoom: 1.143;"><p class=3D"=
ds-markdown-paragraph">The warning occurs because PyTorch plans to change t=
he default security setting for <code>torch.load()</code> in future version=
s. Here's the fixed code that addresses this warning while maintaining comp=
atibility with different PyTorch versions:</p><div class=3D"md-code-block m=
d-code-block-light"><div class=3D"md-code-block-banner-wrap"><div class=3D"=
md-code-block-banner md-code-block-banner-lite"><div class=3D"_121d384"><di=
v class=3D"d2a24f03"><span class=3D"d813de27">python</span></div><div class=
=3D"d2a24f03"><div class=3D"efa13877"><div role=3D"button" class=3D"ds-butt=
on ds-button--secondary ds-button--borderless ds-button--rect ds-button--m =
_7db3914" tabindex=3D"0" style=3D"margin-right: 8px; font-size: 13px; heigh=
t: 28px; padding: 0px 4px; --button-text-color: var(--dsr-text-2);"><div cl=
ass=3D"ds-button__icon"><div class=3D"ds-icon" style=3D"font-size: 16px; wi=
dth: 16px; height: 16px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24=
 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M3.65169=
 12.9243C3.68173 13.1045 3.74181 13.2748 3.80189 13.445C3.87198 13.6052 3.9=
6211 13.7654 4.06225 13.9156C4.16238 14.0658 4.27253 14.206 4.4027 14.3362C=
4.52286 14.4663 4.66306 14.5765 4.81326 14.6766C4.96346 14.7768 5.11366 14.=
8569 5.28389 14.927C5.44411 14.9971 5.61434 15.0571 5.79459 15.0872C5.97483=
 15.1272 6.14506 15.1373 6.3253 15.1373V16.9196C6.30739 16.9196 6.28949 16.=
9195 6.27159 16.9193C5.9991 16.9158 5.72659 16.8859 5.4541 16.8295C5.16371 =
16.7694 4.88334 16.6893 4.61298 16.5692C4.3326 16.459 4.08226 16.3188 3.831=
93 16.1586C3.59161 15.9884 3.3613 15.7981 3.15102 15.5878C2.94074 15.3776 2=
.7605 15.1473 2.59027 14.9069C2.43006 14.6566 2.28986 14.3962 2.17972 14.12=
59C2.06957 13.8455 1.97944 13.5651 1.91936 13.2747C1.86929 12.9843 1.83926 =
12.684 1.83926 12.3936V6.26532C1.83926 5.96492 1.86929 5.67456 1.91936 5.38=
417C1.97944 5.09378 2.06957 4.80338 2.17972 4.53302C2.28986 4.26265 2.43006=
 4.0023 2.59027 3.75197C2.7605 3.50163 2.94074 3.27132 3.15102 3.06104C3.36=
13 2.85076 3.59161 2.67052 3.83193 2.50029C4.08226 2.33006 4.3326 2.19987 4=
.61298 2.07971C4.88334 1.96956 5.16371 1.87943 5.4541 1.81935C5.74449 1.759=
27 6.03491 1.73926 6.3253 1.73926H12.3934C12.6838 1.73926 12.9842 1.75927 1=
3.2746 1.81935C13.555 1.87943 13.8354 1.96956 14.1158 2.07971C14.3861 2.199=
87 14.6465 2.33006 14.8868 2.50029C15.1371 2.67052 15.3574 2.85076 15.5677 =
3.06104C15.778 3.27132 15.9582 3.50163 16.1284 3.75197C16.2887 4.0023 16.42=
88 4.26265 16.539 4.53302C16.6592 4.80338 16.7393 5.09378 16.7994 5.38417C1=
6.8558 5.65722 16.8858 5.93024 16.8892 6.21161C16.8894 6.22948 16.8895 6.24=
739 16.8895 6.26532H15.1271C15.1271 6.08508 15.1071 5.90486 15.067 5.72462C=
15.037 5.55439 14.9869 5.38415 14.9168 5.21392C14.8467 5.04369 14.7566 4.88=
347 14.6665 4.73327C14.5664 4.58307 14.4462 4.45289 14.326 4.32271C14.1959 =
4.19254 14.0557 4.08239 13.9055 3.98226C13.7553 3.88212 13.6051 3.79202 13.=
4348 3.72193C13.2746 3.65184 13.1044 3.60174 12.9242 3.5717C12.7539 3.53165=
 12.5737 3.51163 12.3934 3.51163H6.3253C6.14506 3.51163 5.97483 3.53165 5.7=
9459 3.5717C5.61434 3.60174 5.44411 3.65184 5.28389 3.72193C5.11366 3.79202=
 4.96346 3.88212 4.81326 3.98226C4.66306 4.08239 4.52286 4.19254 4.4027 4.3=
2271C4.27253 4.45289 4.16238 4.58307 4.06225 4.73327C3.96211 4.88347 3.8719=
8 5.04369 3.80189 5.21392C3.74181 5.38415 3.68173 5.55439 3.65169 5.72462C3=
.61164 5.90486 3.60164 6.08508 3.60164 6.26532V12.3936C3.60164 12.5638 3.61=
164 12.744 3.65169 12.9243Z" fill=3D"currentColor"></path><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M9.66972 21.6772C9.39936 21.567 9.1=
3902 21.4268 8.8987 21.2566C8.64836 21.0964 8.42804 20.9061 8.21776 20.6959=
C8.00748 20.4856 7.81723 20.2553 7.65701 20.015C7.4968 19.7646 7.3566 19.50=
43 7.24646 19.2239C7.12629 18.9535 7.04621 18.6731 6.98613 18.3727C6.92605 =
18.0823 6.89601 17.792 6.89601 17.4915V11.3733C6.89601 11.0729 6.92605 10.7=
825 6.98613 10.4922C7.04621 10.1918 7.12629 9.91137 7.24646 9.64101C7.3566 =
9.36063 7.4968 9.10028 7.65701 8.85996C7.81723 8.60962 8.00748 8.37931 8.21=
776 8.16903C8.42804 7.95875 8.64836 7.76849 8.8987 7.60828C9.13902 7.43805 =
9.39936 7.29785 9.66972 7.1877C9.94009 7.07755 10.2205 6.98745 10.5108 6.92=
737C10.8012 6.86729 11.0916 6.83725 11.392 6.83725H17.4602C17.7506 6.83725 =
18.041 6.86729 18.3313 6.92737C18.6217 6.98745 18.9021 7.07755 19.1725 7.18=
77C19.4529 7.29785 19.7032 7.43805 19.9535 7.60828C20.1938 7.76849 20.4242 =
7.95875 20.6345 8.16903C20.8447 8.37931 21.025 8.60962 21.1952 8.85996C21.3=
554 9.10028 21.4956 9.36063 21.6058 9.64101C21.7159 9.91137 21.806 10.1918 =
21.8661 10.4922C21.9162 10.7825 21.9462 11.0729 21.9462 11.3733V17.4915C21.=
9462 17.792 21.9162 18.0823 21.8661 18.3727C21.806 18.6731 21.7159 18.9535 =
21.6058 19.2239C21.4956 19.5043 21.3554 19.7646 21.1952 20.015C21.025 20.25=
53 20.8447 20.4856 20.6345 20.6959C20.4242 20.9061 20.1938 21.0964 19.9535 =
21.2566C19.7032 21.4268 19.4529 21.567 19.1725 21.6772C18.9021 21.7973 18.6=
217 21.8774 18.3313 21.9375C18.041 21.9976 17.7506 22.0276 17.4602 22.0276H=
11.392C11.0916 22.0276 10.8012 21.9976 10.5108 21.9375C10.2205 21.8774 9.94=
009 21.7973 9.66972 21.6772ZM10.8613 8.6697C11.0316 8.63966 11.2118 8.61965=
 11.392 8.61965H17.4602C17.6404 8.61965 17.8107 8.63966 17.9909 8.6697C18.1=
611 8.70975 18.3314 8.75983 18.5016 8.82992C18.6618 8.90001 18.822 8.98012 =
18.9722 9.08026C19.1224 9.18039 19.2626 9.30055 19.3828 9.42071C19.513 9.55=
088 19.6231 9.69109 19.7232 9.84129C19.8234 9.99149 19.9035 10.1517 19.9736=
 10.3219C20.0437 10.4821 20.0937 10.6624 20.1338 10.8326C20.1638 11.0129 20=
.1838 11.1931 20.1838 11.3733V17.4915C20.1838 17.6718 20.1638 17.852 20.133=
8 18.0323C20.0937 18.2125 20.0437 18.3828 19.9736 18.543C19.9035 18.7132 19=
.8234 18.8734 19.7232 19.0236C19.6231 19.1738 19.513 19.314 19.3828 19.4342=
C19.2626 19.5643 19.1224 19.6845 18.9722 19.7846C18.822 19.8848 18.6618 19.=
9649 18.5016 20.035C18.3314 20.1051 18.1611 20.1551 17.9909 20.1952C17.8107=
 20.2252 17.6404 20.2452 17.4602 20.2452H11.392C11.2118 20.2452 11.0316 20.=
2252 10.8613 20.1952C10.6811 20.1551 10.5108 20.1051 10.3506 20.035C10.1804=
 19.9649 10.0202 19.8848 9.87 19.7846C9.72982 19.6845 9.58962 19.5643 9.459=
45 19.4342C9.33929 19.314 9.21913 19.1738 9.119 19.0236C9.01886 18.8734 8.9=
3875 18.7132 8.86866 18.543C8.79857 18.3828 8.74847 18.2125 8.71843 18.0323=
C8.67838 17.852 8.65836 17.6718 8.65836 17.4915V11.3733C8.65836 11.1931 8.6=
7838 11.0129 8.71843 10.8326C8.74847 10.6624 8.79857 10.4821 8.86866 10.321=
9C8.93875 10.1517 9.01886 9.99149 9.119 9.84129C9.21913 9.69109 9.33929 9.5=
5088 9.45945 9.42071C9.58962 9.30055 9.72982 9.18039 9.87 9.08026C10.0202 8=
.98012 10.1804 8.90001 10.3506 8.82992C10.5108 8.75983 10.6811 8.70975 10.8=
613 8.6697Z" fill=3D"currentColor"></path></svg></div></div><span class=3D"=
code-info-button-text">Copy</span></div><div role=3D"button" class=3D"ds-bu=
tton ds-button--secondary ds-button--borderless ds-button--rect ds-button--=
s _7db3914" tabindex=3D"0" style=3D"padding: 0px 4px; height: 28px; --butto=
n-text-color: var(--dsr-text-2); --button-font-size: 13px;"><div class=3D"d=
s-button__icon"><div class=3D"ds-icon" style=3D"font-size: 16px; width: 16p=
x; height: 16px;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fil=
l=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rule=3D"evenodd"=
 clip-rule=3D"evenodd" d=3D"M12 2.55a.97.97 0 0 1 .982.956v13.04a.97.97 0 0=
 1-.982.957.97.97 0 0 1-.982-.956V3.507A.97.97 0 0 1 12 2.55z" fill=3D"curr=
entColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M19=
.418 9.808c.382.375.37.971-.027 1.332l-6.7 6.085a1.04 1.04 0 0 1-1.41-.025.=
905.905 0 0 1 .027-1.332l6.7-6.085a1.04 1.04 0 0 1 1.41.025z" fill=3D"curre=
ntColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M4.5=
82 9.808a1.04 1.04 0 0 1 1.41-.025l6.7 6.085c.397.361.409.957.027 1.332a1.0=
4 1.04 0 0 1-1.41.025l-6.7-6.085a.905.905 0 0 1-.027-1.332z" fill=3D"curren=
tColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3.06=
8 16.46a.97.97 0 0 1 .983.956v1.739c0 .432.36.782.803.782h14.291c.445 0 .80=
4-.35.804-.782v-1.739a.97.97 0 0 1 .983-.956.97.97 0 0 1 .982.956v1.739c0 1=
.488-1.24 2.695-2.769 2.695H4.855c-1.53 0-2.77-1.207-2.77-2.695v-1.739a.97.=
97 0 0 1 .983-.956z" fill=3D"currentColor"></path></svg></div></div><span c=
lass=3D"code-info-button-text">Download</span></div></div></div></div></div=
></div><pre><span class=3D"token keyword">import</span> os
<span class=3D"token keyword">import</span> cv2
<span class=3D"token keyword">import</span> numpy <span class=3D"token keyw=
ord">as</span> np
<span class=3D"token keyword">import</span> torch
<span class=3D"token keyword">from</span> model <span class=3D"token keywor=
d">import</span> build_unet
<span class=3D"token keyword">from</span> utils <span class=3D"token keywor=
d">import</span> create_dir
<span class=3D"token keyword">import</span> warnings

<span class=3D"token comment"># Suppress specific warnings</span>
warnings<span class=3D"token punctuation">.</span>filterwarnings<span class=
=3D"token punctuation">(</span><span class=3D"token string">"ignore"</span>=
<span class=3D"token punctuation">,</span> category<span class=3D"token ope=
rator">=3D</span>UserWarning<span class=3D"token punctuation">,</span> mess=
age<span class=3D"token operator">=3D</span><span class=3D"token string">".=
*weights_only.*"</span><span class=3D"token punctuation">)</span>
warnings<span class=3D"token punctuation">.</span>filterwarnings<span class=
=3D"token punctuation">(</span><span class=3D"token string">"ignore"</span>=
<span class=3D"token punctuation">,</span> category<span class=3D"token ope=
rator">=3D</span>FutureWarning<span class=3D"token punctuation">,</span> me=
ssage<span class=3D"token operator">=3D</span><span class=3D"token string">=
".*weights_only.*"</span><span class=3D"token punctuation">)</span>

<span class=3D"token comment"># Configuration</span>
IMAGE_SIZE <span class=3D"token operator">=3D</span> <span class=3D"token p=
unctuation">(</span><span class=3D"token number">256</span><span class=3D"t=
oken punctuation">,</span> <span class=3D"token number">256</span><span cla=
ss=3D"token punctuation">)</span>
COLORMAP <span class=3D"token operator">=3D</span> <span class=3D"token pun=
ctuation">[</span>
    <span class=3D"token punctuation">[</span><span class=3D"token number">=
0</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">0</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">0</span><span class=3D"token punctuation">]</span><span class=3D"=
token punctuation">,</span>      <span class=3D"token comment"># Background=
 (black)</span>
    <span class=3D"token punctuation">[</span><span class=3D"token number">=
0</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">0</span><span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">128</span><span class=3D"token punctuation">]</span><span class=
=3D"token punctuation">,</span>    <span class=3D"token comment"># Weed-1 (=
dark blue)</span>
    <span class=3D"token punctuation">[</span><span class=3D"token number">=
0</span><span class=3D"token punctuation">,</span> <span class=3D"token num=
ber">128</span><span class=3D"token punctuation">,</span> <span class=3D"to=
ken number">0</span><span class=3D"token punctuation">]</span>     <span cl=
ass=3D"token comment"># Weed-2 (green)</span>
<span class=3D"token punctuation">]</span>
CHECKPOINT_PATH <span class=3D"token operator">=3D</span> <span class=3D"to=
ken string">"files/checkpoint.pth"</span>
INPUT_DIR <span class=3D"token operator">=3D</span> <span class=3D"token st=
ring">"your_images/"</span>
OUTPUT_DIR <span class=3D"token operator">=3D</span> <span class=3D"token s=
tring">"inference_results/"</span>

<span class=3D"token keyword">def</span> <span class=3D"token function">ind=
ex_to_rgb_mask</span><span class=3D"token punctuation">(</span>mask<span cl=
ass=3D"token punctuation">,</span> colormap<span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">:</span>
    <span class=3D"token triple-quoted-string string">"""Convert class inde=
x mask to RGB mask"""</span>
    height<span class=3D"token punctuation">,</span> width <span class=3D"t=
oken operator">=3D</span> mask<span class=3D"token punctuation">.</span>sha=
pe
    rgb_mask <span class=3D"token operator">=3D</span> np<span class=3D"tok=
en punctuation">.</span>zeros<span class=3D"token punctuation">(</span><spa=
n class=3D"token punctuation">(</span>height<span class=3D"token punctuatio=
n">,</span> width<span class=3D"token punctuation">,</span> <span class=3D"=
token number">3</span><span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">,</span> dtype<span class=3D"token operator">=3D</sp=
an>np<span class=3D"token punctuation">.</span>uint8<span class=3D"token pu=
nctuation">)</span>
    <span class=3D"token keyword">for</span> class_id<span class=3D"token p=
unctuation">,</span> rgb <span class=3D"token keyword">in</span> <span clas=
s=3D"token builtin">enumerate</span><span class=3D"token punctuation">(</sp=
an>colormap<span class=3D"token punctuation">)</span><span class=3D"token p=
unctuation">:</span>
        rgb_mask<span class=3D"token punctuation">[</span>mask <span class=
=3D"token operator">=3D=3D</span> class_id<span class=3D"token punctuation"=
>]</span> <span class=3D"token operator">=3D</span> rgb
    <span class=3D"token keyword">return</span> rgb_mask

<span class=3D"token comment"># Load model</span>
device <span class=3D"token operator">=3D</span> torch<span class=3D"token =
punctuation">.</span>device<span class=3D"token punctuation">(</span><span =
class=3D"token string">'cuda'</span> <span class=3D"token keyword">if</span=
> torch<span class=3D"token punctuation">.</span>cuda<span class=3D"token p=
unctuation">.</span>is_available<span class=3D"token punctuation">(</span><=
span class=3D"token punctuation">)</span> <span class=3D"token keyword">els=
e</span> <span class=3D"token string">'cpu'</span><span class=3D"token punc=
tuation">)</span>
model <span class=3D"token operator">=3D</span> build_unet<span class=3D"to=
ken punctuation">(</span>num_classes<span class=3D"token operator">=3D</spa=
n><span class=3D"token builtin">len</span><span class=3D"token punctuation"=
>(</span>COLORMAP<span class=3D"token punctuation">)</span><span class=3D"t=
oken punctuation">)</span><span class=3D"token punctuation">.</span>to<span=
 class=3D"token punctuation">(</span>device<span class=3D"token punctuation=
">)</span>

<span class=3D"token comment"># Safe model loading with weights_only parame=
ter</span>
<span class=3D"token keyword">try</span><span class=3D"token punctuation">:=
</span>
    <span class=3D"token comment"># Try with weights_only=3DTrue for newer =
PyTorch versions</span>
    checkpoint <span class=3D"token operator">=3D</span> torch<span class=
=3D"token punctuation">.</span>load<span class=3D"token punctuation">(</spa=
n>CHECKPOINT_PATH<span class=3D"token punctuation">,</span> map_location<sp=
an class=3D"token operator">=3D</span>device<span class=3D"token punctuatio=
n">,</span> weights_only<span class=3D"token operator">=3D</span><span clas=
s=3D"token boolean">True</span><span class=3D"token punctuation">)</span>
<span class=3D"token keyword">except</span> TypeError<span class=3D"token p=
unctuation">:</span>
    <span class=3D"token comment"># Fallback for older PyTorch versions</sp=
an>
    checkpoint <span class=3D"token operator">=3D</span> torch<span class=
=3D"token punctuation">.</span>load<span class=3D"token punctuation">(</spa=
n>CHECKPOINT_PATH<span class=3D"token punctuation">,</span> map_location<sp=
an class=3D"token operator">=3D</span>device<span class=3D"token punctuatio=
n">)</span>
   =20
model<span class=3D"token punctuation">.</span>load_state_dict<span class=
=3D"token punctuation">(</span>checkpoint<span class=3D"token punctuation">=
[</span><span class=3D"token string">"model_state_dict"</span><span class=
=3D"token punctuation">]</span><span class=3D"token punctuation">)</span>
model<span class=3D"token punctuation">.</span><span class=3D"token builtin=
">eval</span><span class=3D"token punctuation">(</span><span class=3D"token=
 punctuation">)</span>

<span class=3D"token comment"># Create output directories</span>
create_dir<span class=3D"token punctuation">(</span>OUTPUT_DIR<span class=
=3D"token punctuation">)</span>
create_dir<span class=3D"token punctuation">(</span><span class=3D"token st=
ring-interpolation"><span class=3D"token string">f"</span><span class=3D"to=
ken interpolation"><span class=3D"token punctuation">{</span>OUTPUT_DIR<spa=
n class=3D"token punctuation">}</span></span><span class=3D"token string">/=
overlays"</span></span><span class=3D"token punctuation">)</span>
create_dir<span class=3D"token punctuation">(</span><span class=3D"token st=
ring-interpolation"><span class=3D"token string">f"</span><span class=3D"to=
ken interpolation"><span class=3D"token punctuation">{</span>OUTPUT_DIR<spa=
n class=3D"token punctuation">}</span></span><span class=3D"token string">/=
masks"</span></span><span class=3D"token punctuation">)</span>

<span class=3D"token keyword">print</span><span class=3D"token punctuation"=
>(</span><span class=3D"token string-interpolation"><span class=3D"token st=
ring">f"Starting inference on images in: </span><span class=3D"token interp=
olation"><span class=3D"token punctuation">{</span>INPUT_DIR<span class=3D"=
token punctuation">}</span></span><span class=3D"token string">"</span></sp=
an><span class=3D"token punctuation">)</span>
<span class=3D"token keyword">for</span> image_name <span class=3D"token ke=
yword">in</span> os<span class=3D"token punctuation">.</span>listdir<span c=
lass=3D"token punctuation">(</span>INPUT_DIR<span class=3D"token punctuatio=
n">)</span><span class=3D"token punctuation">:</span>
    <span class=3D"token keyword">if</span> <span class=3D"token keyword">n=
ot</span> image_name<span class=3D"token punctuation">.</span>lower<span cl=
ass=3D"token punctuation">(</span><span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">.</span>endswith<span class=3D"token pun=
ctuation">(</span><span class=3D"token punctuation">(</span><span class=3D"=
token string">'.png'</span><span class=3D"token punctuation">,</span> <span=
 class=3D"token string">'.jpg'</span><span class=3D"token punctuation">,</s=
pan> <span class=3D"token string">'.jpeg'</span><span class=3D"token punctu=
ation">)</span><span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">:</span>
        <span class=3D"token keyword">continue</span>

    image_path <span class=3D"token operator">=3D</span> os<span class=3D"t=
oken punctuation">.</span>path<span class=3D"token punctuation">.</span>joi=
n<span class=3D"token punctuation">(</span>INPUT_DIR<span class=3D"token pu=
nctuation">,</span> image_name<span class=3D"token punctuation">)</span>
    image <span class=3D"token operator">=3D</span> cv2<span class=3D"token=
 punctuation">.</span>imread<span class=3D"token punctuation">(</span>image=
_path<span class=3D"token punctuation">)</span>
    <span class=3D"token keyword">if</span> image <span class=3D"token keyw=
ord">is</span> <span class=3D"token boolean">None</span><span class=3D"toke=
n punctuation">:</span>
        <span class=3D"token keyword">print</span><span class=3D"token punc=
tuation">(</span><span class=3D"token string-interpolation"><span class=3D"=
token string">f"Warning: Could not read image </span><span class=3D"token i=
nterpolation"><span class=3D"token punctuation">{</span>image_path<span cla=
ss=3D"token punctuation">}</span></span><span class=3D"token string">"</spa=
n></span><span class=3D"token punctuation">)</span>
        <span class=3D"token keyword">continue</span>

    original_h<span class=3D"token punctuation">,</span> original_w <span c=
lass=3D"token operator">=3D</span> image<span class=3D"token punctuation">.=
</span>shape<span class=3D"token punctuation">[</span><span class=3D"token =
punctuation">:</span><span class=3D"token number">2</span><span class=3D"to=
ken punctuation">]</span>
    <span class=3D"token keyword">print</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token string-interpolation"><span class=3D"toke=
n string">f"Processing: </span><span class=3D"token interpolation"><span cl=
ass=3D"token punctuation">{</span>image_name<span class=3D"token punctuatio=
n">}</span></span><span class=3D"token string"> (</span><span class=3D"toke=
n interpolation"><span class=3D"token punctuation">{</span>original_w<span =
class=3D"token punctuation">}</span></span><span class=3D"token string">x</=
span><span class=3D"token interpolation"><span class=3D"token punctuation">=
{</span>original_h<span class=3D"token punctuation">}</span></span><span cl=
ass=3D"token string">)"</span></span><span class=3D"token punctuation">)</s=
pan>
   =20
    <span class=3D"token comment"># Preprocess image</span>
    resized_image <span class=3D"token operator">=3D</span> cv2<span class=
=3D"token punctuation">.</span>resize<span class=3D"token punctuation">(</s=
pan>image<span class=3D"token punctuation">,</span> IMAGE_SIZE<span class=
=3D"token punctuation">)</span>
    x <span class=3D"token operator">=3D</span> resized_image <span class=
=3D"token operator">/</span> <span class=3D"token number">255.0</span>
    x <span class=3D"token operator">=3D</span> np<span class=3D"token punc=
tuation">.</span>transpose<span class=3D"token punctuation">(</span>x<span =
class=3D"token punctuation">,</span> <span class=3D"token punctuation">(</s=
pan><span class=3D"token number">2</span><span class=3D"token punctuation">=
,</span> <span class=3D"token number">0</span><span class=3D"token punctuat=
ion">,</span> <span class=3D"token number">1</span><span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">)</span>  <span class=
=3D"token comment"># HWC to CHW</span>
    x <span class=3D"token operator">=3D</span> torch<span class=3D"token p=
unctuation">.</span>from_numpy<span class=3D"token punctuation">(</span>x<s=
pan class=3D"token punctuation">)</span><span class=3D"token punctuation">.=
</span>unsqueeze<span class=3D"token punctuation">(</span><span class=3D"to=
ken number">0</span><span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">.</span><span class=3D"token builtin">float</span><s=
pan class=3D"token punctuation">(</span><span class=3D"token punctuation">)=
</span><span class=3D"token punctuation">.</span>to<span class=3D"token pun=
ctuation">(</span>device<span class=3D"token punctuation">)</span>

    <span class=3D"token comment"># Run inference</span>
    <span class=3D"token keyword">with</span> torch<span class=3D"token pun=
ctuation">.</span>no_grad<span class=3D"token punctuation">(</span><span cl=
ass=3D"token punctuation">)</span><span class=3D"token punctuation">:</span=
>
        pred <span class=3D"token operator">=3D</span> model<span class=3D"=
token punctuation">(</span>x<span class=3D"token punctuation">)</span>
        pred <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>softmax<span class=3D"token punctuation">(</span=
>pred<span class=3D"token punctuation">,</span> dim<span class=3D"token ope=
rator">=3D</span><span class=3D"token number">1</span><span class=3D"token =
punctuation">)</span>
        pred <span class=3D"token operator">=3D</span> torch<span class=3D"=
token punctuation">.</span>argmax<span class=3D"token punctuation">(</span>=
pred<span class=3D"token punctuation">,</span> dim<span class=3D"token oper=
ator">=3D</span><span class=3D"token number">1</span><span class=3D"token p=
unctuation">)</span>
        pred <span class=3D"token operator">=3D</span> pred<span class=3D"t=
oken punctuation">.</span>squeeze<span class=3D"token punctuation">(</span>=
<span class=3D"token punctuation">)</span><span class=3D"token punctuation"=
>.</span>cpu<span class=3D"token punctuation">(</span><span class=3D"token =
punctuation">)</span><span class=3D"token punctuation">.</span>numpy<span c=
lass=3D"token punctuation">(</span><span class=3D"token punctuation">)</spa=
n><span class=3D"token punctuation">.</span>astype<span class=3D"token punc=
tuation">(</span>np<span class=3D"token punctuation">.</span>uint8<span cla=
ss=3D"token punctuation">)</span>

    <span class=3D"token comment"># Convert prediction to RGB mask</span>
    pred_mask <span class=3D"token operator">=3D</span> index_to_rgb_mask<s=
pan class=3D"token punctuation">(</span>pred<span class=3D"token punctuatio=
n">,</span> COLORMAP<span class=3D"token punctuation">)</span>
   =20
    <span class=3D"token comment"># Resize mask to original dimensions</spa=
n>
    pred_mask_orig <span class=3D"token operator">=3D</span> cv2<span class=
=3D"token punctuation">.</span>resize<span class=3D"token punctuation">(</s=
pan>
        pred_mask<span class=3D"token punctuation">,</span>=20
        <span class=3D"token punctuation">(</span>original_w<span class=3D"=
token punctuation">,</span> original_h<span class=3D"token punctuation">)</=
span><span class=3D"token punctuation">,</span>
        interpolation<span class=3D"token operator">=3D</span>cv2<span clas=
s=3D"token punctuation">.</span>INTER_NEAREST
    <span class=3D"token punctuation">)</span>

    <span class=3D"token comment"># Create overlay</span>
    overlay <span class=3D"token operator">=3D</span> image<span class=3D"t=
oken punctuation">.</span>copy<span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">)</span>
    alpha <span class=3D"token operator">=3D</span> <span class=3D"token nu=
mber">0.5</span>
   =20
    <span class=3D"token comment"># Process each class (skip background)</s=
pan>
    <span class=3D"token keyword">for</span> class_idx <span class=3D"token=
 keyword">in</span> <span class=3D"token builtin">range</span><span class=
=3D"token punctuation">(</span><span class=3D"token number">1</span><span c=
lass=3D"token punctuation">,</span> <span class=3D"token builtin">len</span=
><span class=3D"token punctuation">(</span>COLORMAP<span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">:</span>
        class_color <span class=3D"token operator">=3D</span> COLORMAP<span=
 class=3D"token punctuation">[</span>class_idx<span class=3D"token punctuat=
ion">]</span>
        <span class=3D"token comment"># Create mask for current class</span=
>
        class_mask <span class=3D"token operator">=3D</span> np<span class=
=3D"token punctuation">.</span><span class=3D"token builtin">all</span><spa=
n class=3D"token punctuation">(</span>pred_mask_orig <span class=3D"token o=
perator">=3D=3D</span> class_color<span class=3D"token punctuation">,</span=
> axis<span class=3D"token operator">=3D</span><span class=3D"token operato=
r">-</span><span class=3D"token number">1</span><span class=3D"token punctu=
ation">)</span>
       =20
        <span class=3D"token comment"># Create colored image for this class=
</span>
        color_overlay <span class=3D"token operator">=3D</span> np<span cla=
ss=3D"token punctuation">.</span>zeros_like<span class=3D"token punctuation=
">(</span>image<span class=3D"token punctuation">)</span>
        color_overlay<span class=3D"token punctuation">[</span>class_mask<s=
pan class=3D"token punctuation">]</span> <span class=3D"token operator">=3D=
</span> class_color
       =20
        <span class=3D"token comment"># Blend with original image</span>
        overlay <span class=3D"token operator">=3D</span> cv2<span class=3D=
"token punctuation">.</span>addWeighted<span class=3D"token punctuation">(<=
/span>overlay<span class=3D"token punctuation">,</span> <span class=3D"toke=
n number">1</span><span class=3D"token punctuation">,</span> color_overlay<=
span class=3D"token punctuation">,</span> alpha<span class=3D"token punctua=
tion">,</span> <span class=3D"token number">0</span><span class=3D"token pu=
nctuation">)</span>

    <span class=3D"token comment"># Save results</span>
    base_name <span class=3D"token operator">=3D</span> os<span class=3D"to=
ken punctuation">.</span>path<span class=3D"token punctuation">.</span>spli=
text<span class=3D"token punctuation">(</span>image_name<span class=3D"toke=
n punctuation">)</span><span class=3D"token punctuation">[</span><span clas=
s=3D"token number">0</span><span class=3D"token punctuation">]</span>
   =20
    <span class=3D"token comment"># Save mask</span>
    mask_path <span class=3D"token operator">=3D</span> <span class=3D"toke=
n string-interpolation"><span class=3D"token string">f"</span><span class=
=3D"token interpolation"><span class=3D"token punctuation">{</span>OUTPUT_D=
IR<span class=3D"token punctuation">}</span></span><span class=3D"token str=
ing">/masks/</span><span class=3D"token interpolation"><span class=3D"token=
 punctuation">{</span>base_name<span class=3D"token punctuation">}</span></=
span><span class=3D"token string">_mask.png"</span></span>
    cv2<span class=3D"token punctuation">.</span>imwrite<span class=3D"toke=
n punctuation">(</span>mask_path<span class=3D"token punctuation">,</span> =
pred_mask_orig<span class=3D"token punctuation">)</span>
   =20
    <span class=3D"token comment"># Save overlay</span>
    overlay_path <span class=3D"token operator">=3D</span> <span class=3D"t=
oken string-interpolation"><span class=3D"token string">f"</span><span clas=
s=3D"token interpolation"><span class=3D"token punctuation">{</span>OUTPUT_=
PATH<span class=3D"token punctuation">}</span></span><span class=3D"token s=
tring">/overlays/</span><span class=3D"token interpolation"><span class=3D"=
token punctuation">{</span>base_name<span class=3D"token punctuation">}</sp=
an></span><span class=3D"token string">_overlay.png"</span></span>
    cv2<span class=3D"token punctuation">.</span>imwrite<span class=3D"toke=
n punctuation">(</span>overlay_path<span class=3D"token punctuation">,</spa=
n> overlay<span class=3D"token punctuation">)</span>
   =20
    <span class=3D"token keyword">print</span><span class=3D"token punctuat=
ion">(</span><span class=3D"token string-interpolation"><span class=3D"toke=
n string">f"Saved results for </span><span class=3D"token interpolation"><s=
pan class=3D"token punctuation">{</span>image_name<span class=3D"token punc=
tuation">}</span></span><span class=3D"token string">"</span></span><span c=
lass=3D"token punctuation">)</span>

<span class=3D"token keyword">print</span><span class=3D"token punctuation"=
>(</span><span class=3D"token string">"\nInference complete! All results sa=
ved to:"</span><span class=3D"token punctuation">,</span> OUTPUT_DIR<span c=
lass=3D"token punctuation">)</span></pre></div><h3>Key Fixes:</h3><ol start=
=3D"1"><li><p class=3D"ds-markdown-paragraph"><strong>Safe Model Loading</s=
trong>:</p><ul><li><p class=3D"ds-markdown-paragraph">Added compatibility f=
or both old and new PyTorch versions</p></li><li><p class=3D"ds-markdown-pa=
ragraph">First tries loading with <code>weights_only=3DTrue</code> (recomme=
nded for security)</p></li><li><p class=3D"ds-markdown-paragraph">Falls bac=
k to standard loading if parameter isn't supported</p></li></ul></li><li><p=
 class=3D"ds-markdown-paragraph"><strong>Warning Suppression</strong>:</p><=
ul><li><p class=3D"ds-markdown-paragraph">Added specific warning filters to=
 ignore the <code>weights_only</code> warnings</p></li><li><p class=3D"ds-m=
arkdown-paragraph">Only suppresses the specific warnings we're concerned ab=
out</p></li><li><p class=3D"ds-markdown-paragraph">Maintains visibility for=
 other potentially important warnings</p></li></ul></li><li><p class=3D"ds-=
markdown-paragraph"><strong>Improved Error Handling</strong>:</p><ul><li><p=
 class=3D"ds-markdown-paragraph">Structured try/except block for model load=
ing</p></li><li><p class=3D"ds-markdown-paragraph">Maintained all previous =
logging and error checks</p></li></ul></li></ol><h3>Why This Fix Works:</h3=
><ol start=3D"1"><li><p class=3D"ds-markdown-paragraph">For PyTorch version=
s &gt;=3D 1.13 (where <code>weights_only</code> is supported):</p><ul><li><=
p class=3D"ds-markdown-paragraph">Uses the secure loading method with <code=
>weights_only=3DTrue</code></p></li><li><p class=3D"ds-markdown-paragraph">=
Prevents the warning and prepares for future defaults</p></li></ul></li><li=
><p class=3D"ds-markdown-paragraph">For older PyTorch versions:</p><ul><li>=
<p class=3D"ds-markdown-paragraph">Falls back to standard loading</p></li><=
li><p class=3D"ds-markdown-paragraph">Suppresses the warning since it's irr=
elevant for these versions</p></li></ul></li><li><p class=3D"ds-markdown-pa=
ragraph">The warning filters:</p><ul><li><p class=3D"ds-markdown-paragraph"=
>Specifically target the warning messages about <code>weights_only</code></=
p></li><li><p class=3D"ds-markdown-paragraph">Don't hide other important wa=
rnings that might indicate real problems</p></li></ul></li></ol><p class=3D=
"ds-markdown-paragraph">This solution maintains the functionality of your s=
cript while ensuring compatibility across different PyTorch versions and ad=
dressing the specific warning you're seeing. The script will continue to wo=
rk seamlessly regardless of whether it's running on an older or newer PyTor=
ch installation.</p></div><div class=3D"ds-flex" style=3D"margin-top: 12px;=
 height: 20px; margin-bottom: 20px; align-items: center; gap: 10px;"><div c=
lass=3D"ds-flex _965abe9" style=3D"align-items: center; gap: 16px;"><div cl=
ass=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text-color:=
 #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D"fon=
t-size: 20px; width: 20px; height: 20px;"><svg width=3D"24" height=3D"24" v=
iewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><pa=
th d=3D"M3.65169 12.9243C3.68173 13.1045 3.74181 13.2748 3.80189 13.445C3.8=
7198 13.6052 3.96211 13.7654 4.06225 13.9156C4.16238 14.0658 4.27253 14.206=
 4.4027 14.3362C4.52286 14.4663 4.66306 14.5765 4.81326 14.6766C4.96346 14.=
7768 5.11366 14.8569 5.28389 14.927C5.44411 14.9971 5.61434 15.0571 5.79459=
 15.0872C5.97483 15.1272 6.14506 15.1373 6.3253 15.1373V16.9196C6.30739 16.=
9196 6.28949 16.9195 6.27159 16.9193C5.9991 16.9158 5.72659 16.8859 5.4541 =
16.8295C5.16371 16.7694 4.88334 16.6893 4.61298 16.5692C4.3326 16.459 4.082=
26 16.3188 3.83193 16.1586C3.59161 15.9884 3.3613 15.7981 3.15102 15.5878C2=
.94074 15.3776 2.7605 15.1473 2.59027 14.9069C2.43006 14.6566 2.28986 14.39=
62 2.17972 14.1259C2.06957 13.8455 1.97944 13.5651 1.91936 13.2747C1.86929 =
12.9843 1.83926 12.684 1.83926 12.3936V6.26532C1.83926 5.96492 1.86929 5.67=
456 1.91936 5.38417C1.97944 5.09378 2.06957 4.80338 2.17972 4.53302C2.28986=
 4.26265 2.43006 4.0023 2.59027 3.75197C2.7605 3.50163 2.94074 3.27132 3.15=
102 3.06104C3.3613 2.85076 3.59161 2.67052 3.83193 2.50029C4.08226 2.33006 =
4.3326 2.19987 4.61298 2.07971C4.88334 1.96956 5.16371 1.87943 5.4541 1.819=
35C5.74449 1.75927 6.03491 1.73926 6.3253 1.73926H12.3934C12.6838 1.73926 1=
2.9842 1.75927 13.2746 1.81935C13.555 1.87943 13.8354 1.96956 14.1158 2.079=
71C14.3861 2.19987 14.6465 2.33006 14.8868 2.50029C15.1371 2.67052 15.3574 =
2.85076 15.5677 3.06104C15.778 3.27132 15.9582 3.50163 16.1284 3.75197C16.2=
887 4.0023 16.4288 4.26265 16.539 4.53302C16.6592 4.80338 16.7393 5.09378 1=
6.7994 5.38417C16.8558 5.65722 16.8858 5.93024 16.8892 6.21161C16.8894 6.22=
948 16.8895 6.24739 16.8895 6.26532H15.1271C15.1271 6.08508 15.1071 5.90486=
 15.067 5.72462C15.037 5.55439 14.9869 5.38415 14.9168 5.21392C14.8467 5.04=
369 14.7566 4.88347 14.6665 4.73327C14.5664 4.58307 14.4462 4.45289 14.326 =
4.32271C14.1959 4.19254 14.0557 4.08239 13.9055 3.98226C13.7553 3.88212 13.=
6051 3.79202 13.4348 3.72193C13.2746 3.65184 13.1044 3.60174 12.9242 3.5717=
C12.7539 3.53165 12.5737 3.51163 12.3934 3.51163H6.3253C6.14506 3.51163 5.9=
7483 3.53165 5.79459 3.5717C5.61434 3.60174 5.44411 3.65184 5.28389 3.72193=
C5.11366 3.79202 4.96346 3.88212 4.81326 3.98226C4.66306 4.08239 4.52286 4.=
19254 4.4027 4.32271C4.27253 4.45289 4.16238 4.58307 4.06225 4.73327C3.9621=
1 4.88347 3.87198 5.04369 3.80189 5.21392C3.74181 5.38415 3.68173 5.55439 3=
.65169 5.72462C3.61164 5.90486 3.60164 6.08508 3.60164 6.26532V12.3936C3.60=
164 12.5638 3.61164 12.744 3.65169 12.9243Z" fill=3D"currentColor"></path><=
path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M9.66972 21.6772C9.39=
936 21.567 9.13902 21.4268 8.8987 21.2566C8.64836 21.0964 8.42804 20.9061 8=
.21776 20.6959C8.00748 20.4856 7.81723 20.2553 7.65701 20.015C7.4968 19.764=
6 7.3566 19.5043 7.24646 19.2239C7.12629 18.9535 7.04621 18.6731 6.98613 18=
.3727C6.92605 18.0823 6.89601 17.792 6.89601 17.4915V11.3733C6.89601 11.072=
9 6.92605 10.7825 6.98613 10.4922C7.04621 10.1918 7.12629 9.91137 7.24646 9=
.64101C7.3566 9.36063 7.4968 9.10028 7.65701 8.85996C7.81723 8.60962 8.0074=
8 8.37931 8.21776 8.16903C8.42804 7.95875 8.64836 7.76849 8.8987 7.60828C9.=
13902 7.43805 9.39936 7.29785 9.66972 7.1877C9.94009 7.07755 10.2205 6.9874=
5 10.5108 6.92737C10.8012 6.86729 11.0916 6.83725 11.392 6.83725H17.4602C17=
.7506 6.83725 18.041 6.86729 18.3313 6.92737C18.6217 6.98745 18.9021 7.0775=
5 19.1725 7.1877C19.4529 7.29785 19.7032 7.43805 19.9535 7.60828C20.1938 7.=
76849 20.4242 7.95875 20.6345 8.16903C20.8447 8.37931 21.025 8.60962 21.195=
2 8.85996C21.3554 9.10028 21.4956 9.36063 21.6058 9.64101C21.7159 9.91137 2=
1.806 10.1918 21.8661 10.4922C21.9162 10.7825 21.9462 11.0729 21.9462 11.37=
33V17.4915C21.9462 17.792 21.9162 18.0823 21.8661 18.3727C21.806 18.6731 21=
.7159 18.9535 21.6058 19.2239C21.4956 19.5043 21.3554 19.7646 21.1952 20.01=
5C21.025 20.2553 20.8447 20.4856 20.6345 20.6959C20.4242 20.9061 20.1938 21=
.0964 19.9535 21.2566C19.7032 21.4268 19.4529 21.567 19.1725 21.6772C18.902=
1 21.7973 18.6217 21.8774 18.3313 21.9375C18.041 21.9976 17.7506 22.0276 17=
.4602 22.0276H11.392C11.0916 22.0276 10.8012 21.9976 10.5108 21.9375C10.220=
5 21.8774 9.94009 21.7973 9.66972 21.6772ZM10.8613 8.6697C11.0316 8.63966 1=
1.2118 8.61965 11.392 8.61965H17.4602C17.6404 8.61965 17.8107 8.63966 17.99=
09 8.6697C18.1611 8.70975 18.3314 8.75983 18.5016 8.82992C18.6618 8.90001 1=
8.822 8.98012 18.9722 9.08026C19.1224 9.18039 19.2626 9.30055 19.3828 9.420=
71C19.513 9.55088 19.6231 9.69109 19.7232 9.84129C19.8234 9.99149 19.9035 1=
0.1517 19.9736 10.3219C20.0437 10.4821 20.0937 10.6624 20.1338 10.8326C20.1=
638 11.0129 20.1838 11.1931 20.1838 11.3733V17.4915C20.1838 17.6718 20.1638=
 17.852 20.1338 18.0323C20.0937 18.2125 20.0437 18.3828 19.9736 18.543C19.9=
035 18.7132 19.8234 18.8734 19.7232 19.0236C19.6231 19.1738 19.513 19.314 1=
9.3828 19.4342C19.2626 19.5643 19.1224 19.6845 18.9722 19.7846C18.822 19.88=
48 18.6618 19.9649 18.5016 20.035C18.3314 20.1051 18.1611 20.1551 17.9909 2=
0.1952C17.8107 20.2252 17.6404 20.2452 17.4602 20.2452H11.392C11.2118 20.24=
52 11.0316 20.2252 10.8613 20.1952C10.6811 20.1551 10.5108 20.1051 10.3506 =
20.035C10.1804 19.9649 10.0202 19.8848 9.87 19.7846C9.72982 19.6845 9.58962=
 19.5643 9.45945 19.4342C9.33929 19.314 9.21913 19.1738 9.119 19.0236C9.018=
86 18.8734 8.93875 18.7132 8.86866 18.543C8.79857 18.3828 8.74847 18.2125 8=
.71843 18.0323C8.67838 17.852 8.65836 17.6718 8.65836 17.4915V11.3733C8.658=
36 11.1931 8.67838 11.0129 8.71843 10.8326C8.74847 10.6624 8.79857 10.4821 =
8.86866 10.3219C8.93875 10.1517 9.01886 9.99149 9.119 9.84129C9.21913 9.691=
09 9.33929 9.55088 9.45945 9.42071C9.58962 9.30055 9.72982 9.18039 9.87 9.0=
8026C10.0202 8.98012 10.1804 8.90001 10.3506 8.82992C10.5108 8.75983 10.681=
1 8.70975 10.8613 8.6697Z" fill=3D"currentColor"></path></svg></div></div><=
div class=3D"ds-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text-=
color: #909090; --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=
=3D"font-size: 20px; width: 20px; height: 20px; opacity: 1;"><svg viewBox=
=3D"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xli=
nk=3D"http://www.w3.org/1999/xlink"><defs><clipPath id=3D"clip1258_20811"><=
rect id=3D"=E9=87=8D=E6=96=B0=E7=94=9F=E6=88=90" width=3D"20.000000" height=
=3D"20.000000" fill=3D"white" fill-opacity=3D"0"></rect></clipPath></defs><=
rect id=3D"=E9=87=8D=E6=96=B0=E7=94=9F=E6=88=90" width=3D"20.000000" height=
=3D"20.000000" fill=3D"#FFFFFF" fill-opacity=3D"0"></rect><g clip-path=3D"u=
rl(#clip1258_20811)"><path id=3D"path" d=3D"M17.01 7.63L13.98 7.62C13.88 7.=
62 13.79 7.6 13.7 7.56C13.62 7.52 13.54 7.47 13.47 7.4C13.4 7.33 13.35 7.25=
 13.32 7.16C13.28 7.07 13.26 6.98 13.26 6.88C13.26 6.79 13.28 6.69 13.32 6.=
6C13.35 6.51 13.4 6.43 13.47 6.36C13.54 6.3 13.62 6.24 13.7 6.21C13.79 6.17=
 13.88 6.15 13.98 6.15L15.57 6.16C15.67 6.16 15.76 6.14 15.85 6.1C15.94 6.0=
6 16.01 6.01 16.08 5.94C16.15 5.87 16.2 5.79 16.23 5.7C16.27 5.61 16.29 5.5=
2 16.29 5.42L16.3 3.89C16.3 3.79 16.32 3.7 16.36 3.61C16.39 3.52 16.44 3.44=
 16.51 3.37C16.58 3.3 16.66 3.25 16.74 3.21C16.83 3.17 16.92 3.16 17.02 3.1=
6C17.11 3.16 17.2 3.17 17.29 3.21C17.38 3.25 17.46 3.3 17.52 3.37C17.59 3.4=
4 17.64 3.52 17.68 3.61C17.71 3.7 17.73 3.79 17.73 3.89L17.72 6.9C17.72 7 1=
7.71 7.09 17.67 7.18C17.63 7.27 17.58 7.34 17.52 7.41C17.45 7.48 17.37 7.53=
 17.29 7.57C17.2 7.61 17.11 7.63 17.01 7.63Z" fill=3D"currentColor" fill-op=
acity=3D"1.000000" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M2.3=
1 16.29L2.32 13.3C2.32 13.21 2.34 13.11 2.37 13.02C2.41 12.93 2.46 12.85 2.=
53 12.78C2.6 12.71 2.67 12.66 2.76 12.62C2.85 12.58 2.94 12.56 3.03 12.56L6=
.07 12.57C6.16 12.57 6.25 12.59 6.34 12.63C6.43 12.67 6.51 12.72 6.57 12.79=
C6.64 12.86 6.69 12.94 6.73 13.03C6.76 13.12 6.78 13.22 6.78 13.32C6.78 13.=
41 6.76 13.51 6.73 13.6C6.69 13.69 6.64 13.77 6.57 13.84C6.51 13.91 6.43 13=
.96 6.34 14C6.25 14.04 6.16 14.06 6.07 14.06L4.47 14.05C4.38 14.05 4.29 14.=
07 4.2 14.11C4.11 14.15 4.03 14.2 3.97 14.27C3.9 14.34 3.85 14.42 3.81 14.5=
1C3.78 14.6 3.76 14.7 3.76 14.8L3.75 16.29C3.75 16.39 3.73 16.48 3.69 16.58=
C3.65 16.67 3.6 16.75 3.54 16.82C3.47 16.89 3.39 16.94 3.3 16.98C3.22 17.01=
 3.13 17.03 3.03 17.03C2.94 17.03 2.85 17.02 2.76 16.98C2.67 16.94 2.59 16.=
89 2.52 16.82C2.46 16.75 2.4 16.67 2.37 16.58C2.33 16.49 2.31 16.39 2.31 16=
.29Z" fill=3D"currentColor" fill-opacity=3D"1.000000" fill-rule=3D"nonzero"=
></path><path id=3D"path" d=3D"M9.88 18.01C9.51 18.01 9.15 17.99 8.79 17.94=
C8.42 17.89 8.07 17.82 7.71 17.73C7.36 17.63 7.02 17.51 6.68 17.37C6.34 17.=
23 6.02 17.07 5.7 16.89C5.39 16.7 5.09 16.5 4.8 16.28C4.52 16.05 4.25 15.81=
 3.99 15.55C3.74 15.29 3.5 15.02 3.29 14.73C3.07 14.44 2.88 14.13 2.7 13.82=
L4.15 13.05C4.32 13.35 4.51 13.64 4.72 13.91C4.93 14.18 5.17 14.43 5.42 14.=
66C5.67 14.9 5.94 15.11 6.23 15.3C6.52 15.49 6.83 15.66 7.14 15.81C7.46 15.=
95 7.78 16.07 8.12 16.16C8.45 16.25 8.8 16.32 9.14 16.36C9.49 16.39 9.83 16=
.4 10.18 16.39C10.53 16.37 10.87 16.33 11.22 16.26C11.56 16.19 11.89 16.09 =
12.21 15.97C12.54 15.84 12.85 15.7 13.15 15.53C13.45 15.35 13.74 15.16 14.0=
1 14.94C14.28 14.72 14.53 14.49 14.76 14.23C14.99 13.97 15.2 13.7 15.38 13.=
41C15.57 13.12 15.73 12.82 15.87 12.5C16 12.19 16.11 11.87 16.2 11.53C16.28=
 11.2 16.34 10.87 16.36 10.52C16.37 10.42 16.4 10.33 16.44 10.24C16.48 10.1=
5 16.54 10.07 16.61 10C16.69 9.93 16.77 9.87 16.86 9.84C16.96 9.8 17.05 9.7=
7 17.16 9.77C17.27 9.77 17.38 9.79 17.49 9.83C17.6 9.87 17.7 9.94 17.78 10.=
02C17.86 10.1 17.92 10.2 17.96 10.3C18 10.41 18.01 10.52 18 10.64C17.98 10.=
89 17.95 11.13 17.91 11.38C17.86 11.62 17.81 11.87 17.74 12.11C17.68 12.35 =
17.6 12.58 17.51 12.82C17.42 13.05 17.32 13.28 17.21 13.5C17.1 13.73 16.98 =
13.95 16.85 14.16C16.71 14.37 16.57 14.58 16.42 14.78C16.27 14.98 16.11 15.=
17 15.94 15.36C15.77 15.54 15.59 15.72 15.41 15.89C15.22 16.06 15.03 16.22 =
14.83 16.37C14.63 16.52 14.42 16.66 14.2 16.79C13.99 16.93 13.77 17.05 13.5=
4 17.16C13.31 17.27 13.08 17.37 12.85 17.46C12.61 17.55 12.37 17.63 12.13 1=
7.7C11.88 17.77 11.64 17.83 11.39 17.87C11.14 17.92 10.89 17.96 10.63 17.98=
C10.38 18 10.13 18.01 9.88 18.01Z" fill=3D"currentColor" fill-opacity=3D"1.=
000000" fill-rule=3D"nonzero"></path><path id=3D"path" d=3D"M2.85 10.27C2.7=
3 10.28 2.62 10.26 2.51 10.22C2.4 10.17 2.31 10.11 2.23 10.03C2.14 9.95 2.0=
8 9.85 2.04 9.74C2 9.63 1.99 9.52 2 9.41C2.03 8.98 2.1 8.56 2.2 8.15C2.3 7.=
73 2.43 7.33 2.6 6.94C2.76 6.54 2.96 6.16 3.19 5.8C3.41 5.44 3.67 5.1 3.95 =
4.77C4.24 4.45 4.54 4.15 4.88 3.88C5.21 3.6 5.56 3.35 5.93 3.13C6.3 2.91 6.=
69 2.73 7.09 2.57C7.5 2.41 7.91 2.28 8.33 2.19C8.75 2.09 9.18 2.03 9.62 2.0=
1C10.05 1.98 10.48 1.99 10.91 2.03C11.35 2.07 11.77 2.14 12.19 2.25C12.61 2=
.36 13.02 2.5 13.42 2.67C13.81 2.84 14.19 3.04 14.56 3.28C14.92 3.51 15.27 =
3.77 15.59 4.05C15.91 4.34 16.21 4.64 16.48 4.98C16.75 5.31 17 5.66 17.21 6=
.03L15.78 6.83C15.61 6.54 15.42 6.25 15.2 5.99C14.98 5.73 14.74 5.48 14.49 =
5.25C14.23 5.02 13.96 4.82 13.66 4.63C13.37 4.45 13.07 4.29 12.75 4.15C12.4=
4 4.01 12.11 3.9 11.77 3.82C11.44 3.73 11.1 3.67 10.76 3.64C10.41 3.61 10.0=
7 3.6 9.72 3.62C9.37 3.64 9.03 3.69 8.69 3.77C8.36 3.84 8.03 3.94 7.71 4.07=
C7.38 4.2 7.08 4.35 6.78 4.52C6.48 4.7 6.2 4.89 5.94 5.11C5.67 5.33 5.43 5.=
57 5.2 5.83C4.97 6.08 4.77 6.36 4.59 6.65C4.41 6.94 4.25 7.24 4.12 7.55C3.9=
8 7.87 3.88 8.19 3.8 8.52C3.72 8.85 3.66 9.19 3.64 9.53C3.63 9.62 3.6 9.72 =
3.56 9.81C3.52 9.9 3.46 9.98 3.39 10.05C3.32 10.12 3.23 10.17 3.14 10.21C3.=
05 10.25 2.95 10.27 2.85 10.27Z" fill=3D"currentColor" fill-opacity=3D"1.00=
0000" fill-rule=3D"nonzero"></path></g></svg></div></div><div class=3D"ds-i=
con-button" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #909090; -=
-ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 20p=
x; width: 20px; height: 20px;"><svg width=3D"20" height=3D"20" viewBox=3D"0=
 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path fill-rul=
e=3D"evenodd" clip-rule=3D"evenodd" d=3D"M18.14 9.428l-.003.019L17.114 15a3=
.774 3.774 0 0 1-1.313 2.27 3.673 3.673 0 0 1-2.438.894H3.895c-.57 0-1.055-=
.205-1.458-.614a2.033 2.033 0 0 1-.604-1.48v-5.438c0-.578.201-1.071.604-1.4=
8.402-.41.888-.614 1.458-.614h1.932l2.317-5.293c.24-.548.6-.948 1.083-1.2.5=
99-.312 1.156-.278 1.672.103.782.577 1.172 1.355 1.172 2.334V6.997h3.994c.6=
38-.007 1.167.235 1.588.726.421.492.584 1.06.488 1.705zm-2.076-2.6c.686-.00=
7 1.262.256 1.714.785.453.529.63 1.146.527 1.84v.004l-.005.02v.003l-1.022 5=
.552a3.943 3.943 0 0 1-1.37 2.368 3.838 3.838 0 0 1-2.545.933H3.895a2.137 2=
.137 0 0 1-1.576-.663 2.203 2.203 0 0 1-.652-1.6v-5.437c0-.622.218-1.159.65=
2-1.6.434-.44.962-.663 1.576-.663H5.72l2.273-5.192c.254-.58.64-1.01 1.159-1=
.282.32-.167.64-.246.953-.227.315.02.613.137.893.344.824.608 1.24 1.437 1.2=
4 2.47v2.345h3.827zM9.741 3.063c-.247.128-.437.344-.57.647L6.708 9.34v7.683=
h6.655a2.59 2.59 0 0 0 1.72-.63c.498-.42.807-.955.926-1.601l1.02-5.544a.936=
.936 0 0 0-.225-.773.917.917 0 0 0-.739-.335h-4.557a.567.567 0 0 1-.562-.57=
1V4.483c0-.591-.236-1.061-.708-1.41-.143-.105-.309-.109-.497-.01zm7.124 6.1=
57a.766.766 0 0 0-.186-.636.753.753 0 0 0-.612-.276h-4.559a.734.734 0 0 1-.=
728-.74V4.483c0-.537-.21-.956-.64-1.273a.233.233 0 0 0-.137-.05.387.387 0 0=
 0-.185.053c-.208.108-.374.291-.495.566m0 0L6.874 9.375v7.479h6.489c.609 0 =
1.145-.197 1.614-.592.468-.396.757-.894.869-1.502l1.02-5.54M3.35 16.623c.15=
2.155.33.23.545.23h1.522V9.85H3.895a.732.732 0 0 0-.545.23.755.755 0 0 0-.2=
26.553v5.437c0 .218.074.4.226.553zm.545-6.941a.897.897 0 0 0-.663.278.924.9=
24 0 0 0-.274.673v5.437c0 .263.091.487.274.673.183.186.404.28.663.28h1.688V=
9.681H3.895z" fill=3D"currentColor"></path><path fill-rule=3D"evenodd" clip=
-rule=3D"evenodd" d=3D"M18.137 9.447l.004-.02a2.044 2.044 0 0 0-.488-1.704c=
-.421-.491-.95-.733-1.588-.726h-2.282l1.584 1.142h.698a.917.917 0 0 1 .739.=
335.936.936 0 0 1 .225.773l-1.02 5.543a2.663 2.663 0 0 1-.926 1.602 2.59 2.=
59 0 0 1-1.72.63H6.708V9.34L9.171 3.71c.133-.303.323-.519.57-.647.188-.099.=
354-.095.497.01.472.349.708.819.708 1.41v.467l1.125.811V4.483c0-.98-.39-1.7=
57-1.171-2.334-.517-.38-1.074-.415-1.673-.103-.482.252-.843.652-1.083 1.2L5=
.827 8.54H3.895c-.57 0-1.056.205-1.458.614a2.033 2.033 0 0 0-.604 1.48v5.43=
7c0 .578.201 1.072.604 1.48.403.41.889.615 1.458.615h9.468c.918 0 1.731-.29=
9 2.438-.895A3.774 3.774 0 0 0 17.114 15l1.023-5.553zm-14.242.235a.897.897 =
0 0 0-.663.278.924.924 0 0 0-.274.673v5.437c0 .263.091.487.274.673.183.186.=
404.28.663.28h1.688V9.681H3.895z" fill=3D"currentColor"></path><path d=3D"M=
10.946 7.568c0 .316.252.571.563.571h3.858l-1.584-1.142h-1.712V5.76l-1.125-.=
811v2.618z" fill=3D"currentColor"></path></svg></div></div><div class=3D"ds=
-icon-button" tabindex=3D"0" style=3D"--ds-icon-button-text-color: #909090;=
 --ds-icon-button-size: 20px;"><div class=3D"ds-icon" style=3D"font-size: 2=
0px; width: 20px; height: 20px;"><svg width=3D"20" height=3D"20" viewBox=3D=
"0 0 20 20" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path fill-r=
ule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M18.304 10.543v.004a2.214 2.214 =
0 0 1-.526 1.84c-.452.528-1.028.792-1.714.784h-3.827v2.345c0 1.034-.416 1.8=
63-1.24 2.471-.28.207-.578.324-.893.343-.314.02-.632-.06-.953-.226-.519-.27=
1-.905-.702-1.159-1.282l-2.273-5.193H3.895a2.136 2.136 0 0 1-1.576-.663 2.2=
03 2.203 0 0 1-.652-1.6V3.93c0-.623.218-1.16.652-1.6.434-.441.963-.663 1.57=
6-.663h9.468c.957 0 1.807.311 2.544.933a3.943 3.943 0 0 1 1.37 2.368L18.3 1=
0.52v.002l.004.02zm-1.19-5.544a3.774 3.774 0 0 0-1.313-2.27 3.673 3.673 0 0=
 0-2.438-.894H3.895c-.57 0-1.055.205-1.458.614a2.033 2.033 0 0 0-.604 1.48v=
5.437c0 .578.201 1.072.604 1.48.402.41.888.615 1.458.615h1.932l2.317 5.292c=
.24.549.6.949 1.083 1.2.599.313 1.156.279 1.672-.102.782-.577 1.172-1.355 1=
.172-2.335v-2.513h3.994c.638.007 1.167-.235 1.588-.727.421-.491.584-1.06.48=
8-1.704l-.004-.02L17.114 5zM9.819 16.787c.076.04.137.053.185.052a.233.233 0=
 0 0 .137-.05c.43-.316.64-.735.64-1.273v-3.084c0-.41.327-.74.729-.74h4.558a=
.752.752 0 0 0 .612-.277.766.766 0 0 0 .186-.635l-1.02-5.54a2.495 2.495 0 0=
 0-.869-1.502 2.426 2.426 0 0 0-1.613-.592H6.874v7.48l2.449 5.595m-2.615-5.=
56V2.978h6.655c.648 0 1.221.21 1.72.63.498.42.807.954.926 1.601l1.02 5.543a=
.936.936 0 0 1-.225.774.917.917 0 0 1-.739.335h-4.557a.567.567 0 0 0-.562.5=
7v3.085c0 .592-.236 1.062-.708 1.41-.143.106-.309.11-.497.01-.247-.128-.437=
-.343-.57-.647l-2.463-5.628zM3.35 3.376a.754.754 0 0 0-.226.554v5.436c0 .21=
8.074.4.226.554.152.154.33.23.545.23h1.522V3.146H3.895a.731.731 0 0 0-.545.=
23zm2.233-.398v7.34H3.895a.897.897 0 0 1-.663-.279.925.925 0 0 1-.274-.673V=
3.93c0-.263.091-.487.274-.673a.895.895 0 0 1 .663-.28h1.688zm4.235 13.809c-=
.208-.108-.375-.292-.495-.566l.495.566z" fill=3D"currentColor"></path><path=
 fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M15.801 2.73a3.774 3.774 =
0 0 1 1.313 2.269l1.023 5.554.004.019a2.044 2.044 0 0 1-.488 1.704c-.421.49=
2-.95.734-1.588.727h-3.994v2.513c0 .98-.39 1.758-1.171 2.335-.517.38-1.074.=
415-1.673.102-.482-.251-.843-.651-1.083-1.2l-2.317-5.292H3.895c-.57 0-1.056=
-.205-1.458-.614a2.033 2.033 0 0 1-.604-1.48V3.93c0-.579.201-1.072.604-1.48=
1.403-.41.889-.614 1.458-.614h9.468c.918 0 1.731.298 2.438.894zm-2.438.248c=
.648 0 1.221.21 1.72.63.498.42.807.954.926 1.601l1.02 5.543a.936.936 0 0 1-=
.225.774.917.917 0 0 1-.739.335h-4.557a.567.567 0 0 0-.562.57v3.085c0 .592-=
.236 1.062-.708 1.41-.143.106-.309.11-.497.01-.247-.128-.437-.343-.57-.647l=
-2.463-5.628V2.978h6.655zm-9.468 7.34a.897.897 0 0 1-.663-.279.925.925 0 0 =
1-.274-.673V3.93c0-.263.091-.487.274-.673a.895.895 0 0 1 .663-.28h1.688v7.3=
41H3.895z" fill=3D"currentColor"></path></svg></div></div></div><div style=
=3D"flex: 1 1 0%;"></div></div></div></div><div class=3D"_88681e8"><div cla=
ss=3D"_217e214"><svg width=3D"18" height=3D"18" viewBox=3D"0 0 18 18" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M5.856 17.121a.97=
9.979 0 0 1-.327-.06.839.839 0 0 1-.283-.177.739.739 0 0 1-.187-.255.724.72=
4 0 0 1-.07-.303l-.02-1.609a4.663 4.663 0 0 1-1.446-.455 4.252 4.252 0 0 1-=
.637-.401c-.199-.146-.385-.31-.553-.492a4.442 4.442 0 0 1-.45-.577 4.303 4.=
303 0 0 1-.327-.637 3.823 3.823 0 0 1-.206-.686 3.729 3.729 0 0 1-.064-.704=
V6.478c0-.261.025-.516.077-.771a4.43 4.43 0 0 1 .244-.747 4.062 4.062 0 0 1=
 .932-1.28c.2-.183.418-.347.65-.493.23-.145.482-.267.739-.364a4.21 4.21 0 0=
 1 .81-.225c.27-.054.553-.078.835-.078H8.55c.103 0 .2.018.29.054a.7.7 0 0 1=
 .411.376.667.667 0 0 1-.161.766.736.736 0 0 1-.25.151.764.764 0 0 1-.29.05=
5H5.573c-.186 0-.366.012-.54.049-.18.03-.353.079-.52.145-.167.061-.328.14-.=
482.237-.148.091-.29.2-.418.316a2.897 2.897 0 0 0-.347.388c-.097.14-.187.28=
6-.257.444a2.473 2.473 0 0 0-.206.977v4.287c0 .17.013.333.051.503a2.549 2.5=
49 0 0 0 .772 1.33 2.721 2.721 0 0 0 .913.559c.167.066.347.115.527.152.18.0=
3.36.048.546.048a.904.904 0 0 1 .61.23.848.848 0 0 1 .194.262.84.84 0 0 1 .=
07.303l.007.99 1.915-1.293a2.877 2.877 0 0 1 1.64-.492h2.372c.186 0 .366-.0=
18.54-.048.18-.03.353-.08.52-.146.168-.067.329-.146.483-.237.148-.091.29-.2=
.418-.316.128-.121.244-.249.347-.388a2.8 2.8 0 0 0 .257-.444 2.47 2.47 0 0 =
0 .206-.977V8.585a.646.646 0 0 1 .225-.492.679.679 0 0 1 .244-.152.814.814 =
0 0 1 .585 0c.09.03.174.085.244.152a.657.657 0 0 1 .225.492V10.8c0 .261-.03=
2.516-.083.771a4.192 4.192 0 0 1-.245.74c-.109.244-.244.468-.398.687a3.735 =
3.735 0 0 1-.534.6c-.2.183-.418.347-.65.493a4.134 4.134 0 0 1-.738.364 4.7 =
4.7 0 0 1-.81.225c-.27.054-.553.079-.836.079h-1.877c-.604 0-1.144.164-1.633=
.491l-2.54 1.713a.913.913 0 0 1-.514.157z" fill=3D"currentColor"></path><pa=
th d=3D"M15.866 4.125h-4.174c-.41 0-.741.313-.741.7 0 .387.332.7.741.7h4.17=
4c.41 0 .742-.313.742-.7 0-.387-.332-.7-.742-.7z" fill=3D"currentColor"></p=
ath><path d=3D"M14.537 2.932c0-.396-.34-.717-.759-.717s-.758.32-.758.717v3.=
786c0 .396.34.717.758.717.42 0 .76-.321.76-.717V2.932z" fill=3D"currentColo=
r"></path></svg><span>New chat</span></div></div><div class=3D"_871cbca"><d=
iv class=3D"aaff8b8f"><div class=3D"_0e98de6"><svg xmlns=3D"http://www.w3.o=
rg/2000/svg" width=3D"16" height=3D"9" viewBox=3D"0 0 16 9" fill=3D"none"><=
path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M1.00008 2.41429C0.60=
9551 2.02376 0.609551 1.3906 1.00008 1.00008C1.3906 0.609551 2.02376 0.6095=
51 2.41429 1.00007L8.00008 6.58586L13.5859 1.00008C13.9764 0.609551 14.6096=
 0.609551 15.0001 1.00008C15.3906 1.3906 15.3906 2.02376 15.0001 2.41429L8.=
8486 8.56576C8.37997 9.03439 7.62018 9.03439 7.15155 8.56576L1.00008 2.4142=
9Z" fill=3D"currentColor"></path></svg></div><div class=3D"_77cefa5"><div c=
lass=3D"dd442025 _42b6996"><div class=3D"_24fad49"><textarea id=3D"chat-inp=
ut" class=3D"_27c9245" placeholder=3D"Message DeepSeek" rows=3D"2"></textar=
ea><div class=3D"b13855df">
</div></div><div class=3D"ec4f5d61"><div role=3D"button" class=3D"ds-button=
 ds-button--primary ds-button--filled ds-button--rect ds-button--m _3172d9f=
" tabindex=3D"0" style=3D"--ds-button-color: #DBEAFE; --button-text-color: =
#4D6BFE; --button-border-color: rgba(0, 122, 255, 0.15); --ds-button-hover-=
color: #C3DAF8;"><div class=3D"ds-button__icon"><span style=3D"transition: =
transform 0.4s ease-out; transform: rotate(0deg);"><div class=3D"ds-icon" s=
tyle=3D"font-size: 19px; width: 19px; height: 19px; color: rgb(77, 107, 254=
);"><svg width=3D"20" height=3D"20" viewBox=3D"0 0 20 20" fill=3D"none" xml=
ns=3D"http://www.w3.org/2000/svg"><path d=3D"M2.656 17.344c-1.016-1.015-1.1=
5-2.75-.313-4.925.325-.825.73-1.617 1.205-2.365L3.582 10l-.033-.054c-.5-.79=
9-.91-1.596-1.206-2.365-.836-2.175-.703-3.91.313-4.926.56-.56 1.364-.86 2.3=
35-.86 1.425 0 3.168.636 4.957 1.756l.053.034.053-.034c1.79-1.12 3.532-1.75=
7 4.957-1.757.972 0 1.776.3 2.335.86 1.014 1.015 1.148 2.752.312 4.926a13.8=
92 13.892 0 0 1-1.206 2.365l-.034.054.034.053c.5.8.91 1.596 1.205 2.365.837=
 2.175.704 3.911-.311 4.926-.56.56-1.364.861-2.335.861-1.425 0-3.168-.637-4=
.957-1.757L10 16.415l-.053.033c-1.79 1.12-3.532 1.757-4.957 1.757-.972 0-1.=
776-.3-2.335-.86zm13.631-4.399c-.187-.488-.429-.988-.71-1.492l-.075-.132-.0=
92.12a22.075 22.075 0 0 1-3.968 3.968l-.12.093.132.074c1.308.734 2.559 1.16=
2 3.556 1.162.563 0 1.006-.138 1.298-.43.3-.3.436-.774.428-1.346-.008-.575-=
.159-1.264-.449-2.017zm-6.345 1.65l.058.042.058-.042a19.881 19.881 0 0 0 4.=
551-4.537l.043-.058-.043-.058a20.123 20.123 0 0 0-2.093-2.458 19.732 19.732=
 0 0 0-2.458-2.08L10 5.364l-.058.042A19.883 19.883 0 0 0 5.39 9.942L5.348 1=
0l.042.059c.631.874 1.332 1.695 2.094 2.457a19.74 19.74 0 0 0 2.458 2.08zm6=
.366-10.902c-.293-.293-.736-.431-1.298-.431-.998 0-2.248.429-3.556 1.163l-.=
132.074.12.092a21.938 21.938 0 0 1 3.968 3.968l.092.12.074-.132c.282-.504.5=
24-1.004.711-1.492.29-.753.442-1.442.45-2.017.007-.572-.129-1.045-.429-1.34=
5zM3.712 7.055c.202.514.44 1.013.712 1.493l.074.13.092-.119a21.94 21.94 0 0=
 1 3.968-3.968l.12-.092-.132-.074C7.238 3.69 5.987 3.262 4.99 3.262c-.563 0=
-1.006.138-1.298.43-.3.301-.436.774-.428 1.346.007.575.159 1.264.448 2.017z=
m0 5.89c-.29.753-.44 1.442-.448 2.017-.008.572.127 1.045.428 1.345.293.293.=
736.431 1.298.431.997 0 2.247-.428 3.556-1.162l.131-.074-.12-.093a21.94 21.=
94 0 0 1-3.967-3.968l-.093-.12-.074.132a11.712 11.712 0 0 0-.71 1.492z" fil=
l=3D"currentColor" stroke=3D"currentColor" stroke-width=3D".1"></path><path=
 d=3D"M10.706 11.704A1.843 1.843 0 0 1 8.155 10a1.845 1.845 0 1 1 2.551 1.7=
04z" fill=3D"currentColor" stroke=3D"currentColor" stroke-width=3D".2"></pa=
th></svg></div></span></div><span class=3D"ad0c98fd">DeepThink (R1)</span><=
/div><div role=3D"button" class=3D"ds-button ds-button--primary ds-button--=
filled ds-button--rect ds-button--m _3172d9f" tabindex=3D"0" style=3D"--ds-=
button-color: #fff; --button-text-color: #4c4c4c; --button-border-color: rg=
ba(0, 0, 0, 0.12); --ds-button-hover-color: #E0E4ED;"><div class=3D"ds-butt=
on__icon"><span style=3D"transition: none; transform: rotate(0deg);"><div c=
lass=3D"ds-icon" style=3D"font-size: 17px; width: 17px; height: 17px; color=
: rgb(76, 76, 76);"><svg width=3D"20" height=3D"20" viewBox=3D"0 0 20 20" f=
ill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><circle cx=3D"10" cy=3D"1=
0" r=3D"9" stroke=3D"currentColor" stroke-width=3D"1.8"></circle><path d=3D=
"M10 1c1.657 0 3 4.03 3 9s-1.343 9-3 9M10 19c-1.657 0-3-4.03-3-9s1.343-9 3-=
9M1 10h18" stroke=3D"currentColor" stroke-width=3D"1.8"></path></svg></div>=
</span></div><span class=3D"ad0c98fd">Search</span></div><div class=3D"bf38=
813a"><div class=3D"f02f0e25"><div class=3D"ds-icon" style=3D"font-size: 23=
px; width: 23px; height: 23px;"><svg xmlns=3D"http://www.w3.org/2000/svg" v=
iewBox=3D"0 0 14 20" fill=3D"none"><path d=3D"M7 20c-1.856-.002-3.635-.7-4.=
947-1.94C.74 16.819.003 15.137 0 13.383V4.828a4.536 4.536 0 0 1 .365-1.843 =
4.75 4.75 0 0 1 1.087-1.567A5.065 5.065 0 0 1 3.096.368a5.293 5.293 0 0 1 3=
.888 0c.616.244 1.174.6 1.643 1.05.469.45.839.982 1.088 1.567.25.586.373 1.=
212.364 1.843v8.555a2.837 2.837 0 0 1-.92 2.027A3.174 3.174 0 0 1 7 16.245c=
-.807 0-1.582-.3-2.158-.835a2.837 2.837 0 0 1-.92-2.027v-6.22a1.119 1.119 0=
 1 1 2.237 0v6.22a.777.777 0 0 0 .256.547.868.868 0 0 0 .585.224c.219 0 .42=
9-.08.586-.224a.777.777 0 0 0 .256-.546V4.828A2.522 2.522 0 0 0 7.643 3.8a2=
.64 2.64 0 0 0-.604-.876 2.816 2.816 0 0 0-.915-.587 2.943 2.943 0 0 0-2.16=
8 0 2.816 2.816 0 0 0-.916.587 2.64 2.64 0 0 0-.604.876 2.522 2.522 0 0 0-.=
198 1.028v8.555c0 1.194.501 2.339 1.394 3.183A4.906 4.906 0 0 0 7 17.885a4.=
906 4.906 0 0 0 3.367-1.319 4.382 4.382 0 0 0 1.395-3.183v-6.22a1.119 1.119=
 0 0 1 2.237 0v6.22c-.002 1.754-.74 3.436-2.052 4.677C10.635 19.3 8.856 19.=
998 7 20z" fill=3D"currentColor"></path></svg></div></div><input type=3D"fi=
le" multiple=3D"" accept=3D".epub,.mobi,.azw3,.pdf,.png,.jpg,.jpeg,.svg,.sv=
gz,.bmp,.gif,.webp,.ico,.xbm,.dib,.pjp,.tif,.pjpeg,.avif,.apng,.tiff,.jfif,=
.txt,.md,.csv,.tsv,.html,.json,.log,.dot,.go,.h,.c,.cpp,.cxx,.cc,.cs,.java,=
.js,.css,.jsp,.php,.py,.py3,.asp,.yaml,.yml,.ini,.conf,.ts,.tsx,.doc,.docx,=
.ppt,.pptx,.xls,.xlsx,.abap,.asc,.ash,.ampl,.mod,.g4,.apib,.apl,.dyalog,.as=
ax,.ascx,.ashx,.asmx,.aspx,.axd,.dats,.hats,.sats,.as,.adb,.ada,.ads,.agda,=
.als,.apacheconf,.vhost,.cls,.applescript,.scpt,.arc,.ino,.asciidoc,.adoc,.=
aj,.asm,.a51,.inc,.nasm,.aug,.ahk,.ahkl,.au3,.awk,.auk,.gawk,.mawk,.nawk,.b=
at,.cmd,.befunge,.bison,.bb,.decls,.bmx,.bsv,.boo,.b,.bf,.brs,.bro,.cats,.i=
dc,.w,.cake,.cshtml,.csx,.c++,.cp,.h++,.hh,.hpp,.hxx,.inl,.ipp,.tcc,.tpp,.c=
-objdump,.chs,.clp,.cmake,.in,.cob,.cbl,.ccp,.cobol,.cpy,.capnp,.mss,.ceylo=
n,.chpl,.ch,.ck,.cirru,.clw,.icl,.dcl,.click,.clj,.boot,.cl2,.cljc,.cljs,.h=
l,.cljscm,.cljx,.hic,.coffee,._coffee,.cjsx,.cson,.iced,.cfm,.cfml,.cfc,.li=
sp,.asd,.cl,.l,.lsp,.ny,.podsl,.sexp,.cps,.coq,.v,.cppobjdump,.c++-objdump,=
.c++objdump,.cpp-objdump,.cxx-objdump,.creole,.cr,.feature,.cu,.cuh,.cy,.py=
x,.pxd,.pxi,.d,.di,.d-objdump,.com,.dm,.zone,.arpa,.darcspatch,.dpatch,.dar=
t,.diff,.patch,.dockerfile,.djs,.dylan,.dyl,.intr,.lid,.E,.ecl,.eclxml,.sch=
,.brd,.epj,.e,.ex,.exs,.elm,.el,.emacs,.desktop,.em,.emberscript,.erl,.es,.=
escript,.hrl,.xrl,.yrl,.fs,.fsi,.fsx,.fx,.flux,.f90,.f,.f03,.f08,.f77,.f95,=
.for,.fpp,.factor,.fy,.fancypack,.fan,.fth,.4th,.forth,.fr,.frt,.ftl,.g,.gc=
o,.gcode,.gms,.gap,.gd,.gi,.tst,.s,.ms,.glsl,.fp,.frag,.frg,.fsh,.fshader,.=
geo,.geom,.glslv,.gshader,.shader,.vert,.vrx,.vsh,.vshader,.gml,.kid,.ebuil=
d,.eclass,.po,.pot,.glf,.gp,.gnu,.gnuplot,.plot,.plt,.golo,.gs,.gst,.gsx,.v=
ark,.grace,.gradle,.gf,.graphql,.gv,.man,.1in,.1m,.1x,.3in,.3m,.3qt,.3x,.me=
,.n,.rno,.roff,.groovy,.grt,.gtpl,.gvy,.gsp,.hcl,.tf,.hlsl,.fxh,.hlsli,.htm=
,.st,.xht,.xhtml,.mustache,.jinja,.eex,.erb,.deface,.phtml,.http,.haml,.han=
dlebars,.hbs,.hb,.hs,.hsc,.hx,.hxsl,.hy,.pro,.dlm,.ipf,.cfg,.prefs,.propert=
ies,.irclog,.weechatlog,.idr,.lidr,.ni,.i7x,.iss,.io,.ik,.thy,.ijs,.flex,.j=
flex,.geojson,.lock,.topojson,.json5,.jsonld,.jq,.jsx,.jade,.j,._js,.bones,=
.es6,.jake,.jsb,.jscad,.jsfl,.jsm,.jss,.njs,.pac,.sjs,.ssjs,.sublime-build,=
.sublime-commands,.sublime-completions,.sublime-keymap,.sublime-macro,.subl=
ime-menu,.sublime-mousemap,.sublime-project,.sublime-settings,.sublime-them=
e,.sublime-workspace,.sublime_metrics,.sublime_session,.xsjs,.xsjslib,.jl,.=
ipynb,.krl,.kicad_pcb,.kit,.kt,.ktm,.kts,.lfe,.ll,.lol,.lsl,.lslp,.lvproj,.=
lasso,.las,.lasso8,.lasso9,.ldml,.latte,.lean,.hlean,.less,.lex,.ly,.ily,.m=
,.ld,.lds,.liquid,.lagda,.litcoffee,.lhs,.ls,._ls,.xm,.x,.xi,.lgt,.logtalk,=
.lookml,.lua,.fcgi,.nse,.pd_lua,.rbxs,.wlua,.mumps,.m4,.mcr,.mtml,.muf,.mak=
,.mk,.mkfile,.mako,.mao,.markdown,.mkd,.mkdn,.mkdown,.ron,.mask,.mathematic=
a,.cdf,.ma,.map,.mt,.nb,.nbp,.wl,.wlt,.matlab,.maxpat,.maxhelp,.maxproj,.mx=
t,.pat,.mediawiki,.wiki,.moo,.metal,.minid,.druby,.duby,.mir,.mirah,.mo,.mm=
s,.mmk,.monkey,.moon,.myt,.ncl,.nl,.nsi,.nsh,.axs,.axi,.nlogo,.nginxconf,.n=
im,.nimrod,.ninja,.nit,.nix,.nu,.numpy,.numpyw,.numsc,.ml,.eliom,.eliomi,.m=
l4,.mli,.mll,.mly,.objdump,.mm,.sj,.omgrofl,.opa,.opal,.opencl,.p,.scad,.or=
g,.ox,.oxh,.oxo,.oxygene,.oz,.pwn,.aw,.ctp,.php3,.php4,.php5,.php6,.php7,.p=
hp8,.phps,.phpt,.pls,.pck,.pkb,.pks,.plb,.plsql,.sql,.pov,.pan,.psc,.parrot=
,.pasm,.pir,.pas,.dfm,.dpr,.lpr,.pp,.pl,.al,.cgi,.perl,.ph,.plx,.pm,.pod,.p=
sgi,.t,.6pl,.6pm,.nqp,.p6,.p6l,.p6m,.pl6,.pm6,.pkl,.pig,.pike,.pmod,.pogo,.=
pony,.ps,.eps,.ps1,.psd1,.psm1,.pde,.prolog,.yap,.spin,.proto,.pub,.pd,.pb,=
.pbi,.purs,.bzl,.gyp,.lmi,.pyde,.pyi,.pyp,.pyt,.pyw,.rpy,.tac,.wsgi,.xpy,.p=
ytb,.qml,.qbs,.pri,.r,.rd,.rsx,.raml,.rdoc,.rbbas,.rbfrm,.rbmnu,.rbres,.rbt=
bar,.rbuistate,.rhtml,.rmd,.rkt,.rktd,.rktl,.scrbl,.rl,.raw,.reb,.r2,.r3,.r=
ebol,.red,.reds,.cw,.rs,.rsh,.robot,.rg,.rb,.builder,.gemspec,.god,.irbrc,.=
jbuilder,.mspec,.pluginspec,.podspec,.rabl,.rake,.rbuild,.rbw,.rbx,.ru,.rub=
y,.thor,.watchr,.sas,.scss,.smt2,.smt,.sparql,.rq,.sqf,.hqf,.cql,.ddl,.prc,=
.tab,.udf,.viw,.db2,.ston,.sage,.sagews,.sls,.sass,.scala,.sbt,.sc,.scaml,.=
scm,.sld,.sps,.ss,.sci,.sce,.self,.sh,.bash,.bats,.command,.ksh,.tmux,.tool=
,.zsh,.sh-session,.shen,.sl,.slim,.smali,.tpl,.sp,.sma,.nut,.stan,.ML,.fun,=
.sig,.sml,.do,.ado,.doh,.ihlp,.mata,.matah,.sthlp,.styl,.scd,.swift,.sv,.sv=
h,.vh,.toml,.txl,.tcl,.adp,.tm,.tcsh,.csh,.tex,.aux,.bbx,.bib,.cbx,.dtx,.in=
s,.lbx,.ltx,.mkii,.mkiv,.mkvi,.sty,.toc,.tea,.no,.textile,.thrift,.tu,.ttl,=
.twig,.upc,.anim,.asset,.mat,.meta,.prefab,.unity,.uno,.uc,.ur,.urs,.vcl,.v=
hdl,.vhd,.vhf,.vhi,.vho,.vhs,.vht,.vhw,.vala,.vapi,.veo,.vim,.vb,.bas,.frm,=
.frx,.vba,.vbhtml,.vbs,.volt,.vue,.owl,.webidl,.x10,.xc,.xml,.ant,.axml,.cc=
xml,.clixml,.cproject,.csl,.csproj,.ct,.dita,.ditamap,.ditaval,.config,.dot=
settings,.filters,.fsproj,.fxml,.glade,.grxml,.iml,.ivy,.jelly,.jsproj,.kml=
,.launch,.mdpolicy,.mxml,.nproj,.nuspec,.odd,.osm,.plist,.props,.ps1xml,.ps=
c1,.pt,.rdf,.rss,.scxml,.srdf,.storyboard,.stTheme,.sublime-snippet,.target=
s,.tmCommand,.tml,.tmLanguage,.tmPreferences,.tmSnippet,.tmTheme,.ui,.urdf,=
.ux,.vbproj,.vcxproj,.vssettings,.vxml,.wsdl,.wsf,.wxi,.wxl,.wxs,.x3d,.xacr=
o,.xaml,.xib,.xlf,.xliff,.xmi,.dist,.xproj,.xsd,.xul,.zcml,.xsp-config,.met=
adata,.xpl,.xproc,.xquery,.xq,.xql,.xqm,.xqy,.xs,.xslt,.xsl,.xojo_code,.xoj=
o_menu,.xojo_report,.xojo_script,.xojo_toolbar,.xojo_window,.xtend,.reek,.r=
viz,.sublime-syntax,.syntax,.yaml-tmlanguage,.yang,.y,.yacc,.yy,.zep,.zimpl=
,.zmpl,.zpl,.ec,.eh,.edn,.fish,.mu,.nc,.ooc,.rst,.rest,.wisp,.prg,.prw,.git=
ignore,.gitkeep,.gitmodules,.example,.avifs,.blp,.bufr,.bw,.cur,.dcx,.dds,.=
emf,.fit,.fits,.flc,.fli,.ftc,.ftu,.gbr,.grib,.h5,.hdf,.hif,.icb,.icns,.iim=
,.im,.j2c,.j2k,.jp2,.jpc,.jpe,.jpf,.jpx,.mpeg,.mpg,.msp,.pbm,.pcd,.pcx,.pfm=
,.pgm,.pnm,.ppm,.psd,.pxr,.qoi,.ras,.rgb,.rgba,.sgi,.tga,.vda,.vst,.wmf,.xp=
m" style=3D"display: none;"><div role=3D"button" aria-disabled=3D"true" cla=
ss=3D"_7436101 bcc55ca1"><div class=3D"_6f28693"><div class=3D"ds-icon" sty=
le=3D"font-size: 16px; width: 16px; height: 16px;"><svg width=3D"14" height=
=3D"16" viewBox=3D"0 0 14 16" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 16c-.595 0-=
1.077-.462-1.077-1.032V1.032C5.923.462 6.405 0 7 0s1.077.462 1.077 1.032v13=
.936C8.077 15.538 7.595 16 7 16z" fill=3D"currentColor"></path><path fill-r=
ule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M.315 7.44a1.002 1.002 0 0 1 0-1=
.46L6.238.302a1.11 1.11 0 0 1 1.523 0c.421.403.421 1.057 0 1.46L1.838 7.44a=
1.11 1.11 0 0 1-1.523 0z" fill=3D"currentColor"></path><path fill-rule=3D"e=
venodd" clip-rule=3D"evenodd" d=3D"M13.685 7.44a1.11 1.11 0 0 1-1.523 0L6.2=
38 1.762a1.002 1.002 0 0 1 0-1.46 1.11 1.11 0 0 1 1.523 0l5.924 5.678c.42.4=
03.42 1.056 0 1.46z" fill=3D"currentColor"></path></svg></div></div></div><=
/div></div></div></div></div><div class=3D"_0fcaa63">AI-generated, for refe=
rence only</div></div></div></div></div></div></div></div></div></div></div=
><iframe height=3D"1" width=3D"1" style=3D"position: absolute; top: 0px; le=
ft: 0px; border: none; visibility: hidden;"></iframe><div class=3D"ds-notif=
ication-container ds-theme" style=3D"--ds-rgb-hover: 0 0 0 / 4%; font-size:=
 var(--ds-font-size-m); line-height: var(--ds-line-height-m);"></div><div i=
d=3D"cf-overlay" style=3D"position: fixed; inset: 0px; background-color: rg=
ba(0, 0, 0, 0.7); border: 1px solid grey; z-index: 10000; display: none;"><=
p style=3D"color: white; text-align: center; margin-top: 50vh;">One more st=
ep before you proceed...</p><div style=3D"display: flex; flex-wrap: nowrap;=
 align-items: center; justify-content: center;" id=3D"cf-turnstile"></div><=
/div><div></div><div id=3D"compose-ai-general-snackbar-root"></div><div id=
=3D"Chat-Plugin-Root" class=3D"compose-root-component"></div><iframe id=3D"=
intercom-frame" style=3D"position: absolute !important; opacity: 0 !importa=
nt; width: 1px !important; height: 1px !important; top: 0 !important; left:=
 0 !important; border: none !important; display: block !important; z-index:=
 -1 !important; pointer-events: none;" aria-hidden=3D"true" tabindex=3D"-1"=
 title=3D"Intercom"></iframe><div class=3D"ds-floating-position-wrapper ds-=
theme" data-transform-origin=3D"bottom" style=3D"--ds-rgb-hover: 0 0 0 / 4%=
; font-size: var(--ds-font-size-m); line-height: var(--ds-line-height-m); z=
-index: 0; left: 8px; top: 143px;"></div><div id=3D"InlineText-Plugin-Root"=
 class=3D"compose-root-component"><div class=3D"compose-root-component"></d=
iv></div><div id=3D"intellisense-root"></div><div class=3D"intercom-lightwe=
ight-app"></div><div class=3D"ds-floating-position-wrapper ds-theme" data-t=
ransform-origin=3D"left" style=3D"--ds-rgb-hover: 0 0 0 / 4%; font-size: va=
r(--ds-font-size-m); line-height: var(--ds-line-height-m); z-index: 0; left=
: 635.625px; top: 866.5px;"></div></body></html>
------MultipartBoundary--xC4mlvqwVrWApoms1A0UKBsV18p6KuT1DXBVaW7nOf----
Content-Type: binary/octet-stream
Content-Transfer-Encoding: base64
Content-Location: https://static.deepseek.com/user-avatar/anWDO5_R6F-1-LsVW5YxcQz0

/9j/4AAQSkZJRgABAQAAAQABAAD/4QAqRXhpZgAASUkqAAgAAAABADEBAgAHAAAAGgAAAAAAAABQ
aWNhc2EAAP/bAIQAAwICCAgICAgJCAoICgoICAoJCAgKCQgICQgICAgICAgICAgICQgQCAgIDQoL
FggICAsKDQoICQ0NFggNCAgJCAEDBAQGBQYKBgYKDg4KDg0NDQ8PDQ8ODg8NDQ8NDRAPDw4ODhAL
DQ4PDw4PDQ4NDQ0PDQ8PERALDw0PDw4PEA0Q/8AAEQgAYABgAwERAAIRAQMRAf/EAB0AAQADAAID
AQAAAAAAAAAAAAAGBwgFCQIDBAH/xAAyEAACAgEDAwMCBAUFAQAAAAABAgMEEQAFEgYTIQcIIhQx
IyQyQQkzQlFxFlKBgtEV/8QAGgEBAAMBAQEAAAAAAAAAAAAAAAMEBQIBBv/EADYRAAICAQIEAwYE
BAcAAAAAAAABAhEDITEEEkFRImFxMqGxwdHwE4GR4QVCcrIUIzNSYpKi/9oADAMBAAIRAxEAPwDt
T0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0BT3rN7uendgbt7jukMM5
44pxcrNw888PytZZJgr/ALPIioT++gM8br/Fh23gktXY90tRyW2qQn8nFLNZHLEcVUW5bZL4IHKB
SW+H6/hoCzqXvlgiVX3PZdz2lCB+JKtO4MkgBfp6FyfcCfOfhRYBQxbiBnQF2+m3q1tm8QGztt6C
9ECFdq8iuY3IDduZP5iS8SD2plVwCMgZ0BLdANANANANANANAYJ9y/uD6i3/AHKTpbpFO1hJBuG/
M/ajgVZXrypXnQO8apOkkJsxo07zRTLXA+mkl0BYftv/AIcGybGjS2uW9XZSzWLd1QY3aQDuqtf5
AxO3y42nnYsS2QTgAfR76W7C9F9pURR110/HxCJxWN/qwQgK4XwMckwcEgYBIIGotwnjVHaUqqBT
zMhAQL+/Mt8eP+fGvG0tWdRi5tRirb6LVmVvUb247RPdjv7DN/p7esTNBuFGu0NG4x/EkrbhD2lp
zw2G+Z4gzMYi4MnaKNGskW6+/wBS5Lgs0YPI0qVXqrV943a7O127k49sPuTfeDd2zca67fvm1ukW
50VJMTcwDFeouxJalaXDgFmePmoYurwTTylEvrQDQDQDQEC3z1ZiDS164E1pWdBFIezGrryHKR3w
TGCD/IWRyPIGMsK8sy2jv9/ehs4f4bNqOTN4cbSdrxOtNkuv9TivMp3169xFnZ9o3Se1IGkWClBV
+iheGw9vcJrMGK6Sz2QZ41QuqksOUfy4/iIjHKTk1Lsvn6nPGYMEMcMmFSVymqlJS0ShW0Yd30+p
zPoP0uvT+3wUFrxy7lNFFZ3HsYgqQzPEsccJm7ZK1KsaJUhhWKSbsV4yQcyynqWSnypW/h6kWDg+
eH4uSXLC6XVyelqMdLq7bbil3vQmlT1Ps9wqVhk+RUIqWYU5JnupFcdZK0sqAN+GgQgoyv2uLMsS
yyutPf8AHVMuz4DFyKXiWm7cZPXZuCalFPu73TV7FRe9Pf4bFPpyYHh2OtenDKshCvCy2WDLKASo
IVuXLkUZCHUurIzWIzTV/aMnLw88clCrvatpJ7V8K3T0aT0LTvbo9t4pD4aWQCnDKCEhjKlzZlQ4
JsLCGl88SmBXHbLTSTVrcqffby8/Wvp3NqONYFKC2ivG1vJ3XKn0jdR637etRSlfTi7asnCOeGax
92cyxSW3K/csVPPAOfggWNQSoCL8dSx5LpNX7zOz/wCJceaUZRh0VNRXy/N23u22Zm9+nTcu0z7Z
1xRHGxtMqQ7mich9bstl+EkEgRSWeOVgF54jQztKxHYRknM00zv/AKjRpDBJBwmNhEki5OUj7MnD
jM7LHI3BmdFCqhZ3kVR/UyQzycvqX+F4X8a27UVu0rd03SVrom3rSSbZ9HTXVM008kUkCRcYkcMk
plyWeRSPMMX2AB/7fvka9jNt00eZ+HhCCnCTdtrVVsk+77kp1KURoCCeoUKxmiFAHK+5OceSad6U
5/yR/wAD+2M6r5dOX1+TNfgvEsrfTGv78aMee4nb5L/WfR21OPypuruEy/1NY2yG7YqI32yqqk4I
OSVcDwPiGP2pei+Y4v8A0MX9WX3LF9fiacuTOkG4Oo/G724uPALM6PKsGcfciBYVCnz2wg+Q8NFq
oya3t/t7qLyUZZcMX7HLiXomlzf+nJvzslnVcEUdCDs44JJREBXyBG08MPx8jIaFmX7+VYg+CdTT
pQVeXxRn8O5T4if4m7WTmvuoyevo0mZH9700MQ2p5cJFZ3XbIpx/TI1W2JK7ffPhHsIQVyFOD+kK
KWa1bXWLv8mvlZ9N/C+XIoQnq4ZVKF9JTjJV/wB442td1aNMb102luetGSAMysH4pJhFVSeCSK0f
ePxAkZW4oZOI5FGSxKCk0jEwcRLBjySXkqtrXzap1vatW6vS0/du2wIkxpue9C0IkjWbBZO2/bZB
IADhcoyOfxUbnhiojEPrir5XtX6ffQ5hmk4LPHwyUuV1s7Vp1+qktmq0u74H1Bprd6Z3mlclOGqb
lSMpBaU8o5Iqz8fmzWOLRnwCWk84BOB3CdR8XRtfT8yDiuHU86WFUpRjLyVq5ekU79EVn7YumzN0
vtNqYORBR2yOHvqqyN9C0USSPHn4xwopRISRxd7EjdxpEkWCudOcvL79F0/N9TWeVcPkXDYn0knu
nTi1qukpaOadteGH8rT0H0pKfq3BGMVlGf38TSeDnz4JPg+RnH3BZrEfa/L5mLnX+Sn/AMn/AGom
+pzMGgKu6m2u/PYy8UjxQWDJWWD6eMODWMXKR5LQlLqzyADEceDlg/FRqpJSlLVaJ6VXb1N/Bl4f
FiqEkpSjUnLmdeO9Eo1Wke77NGV/WW/JW626XmerwtmvcSgk7KWlJq7jFYjHYmathhLBgS2Y3ByR
y4JFY4rIm5RT92tX531LKfCTgsWWcWk201+InHm5L/kcX7OzXdp60bN3jpJ2dpoWVXfiZY5ARHIy
qEDhk5MkvEKvcxIOKKMHBJsShraMbFxEaUMidK6a3Wt1Wlrd1pq3qVJ6iW49phSe3ZjpwV1Msixv
YtrBWj8BoUlCRRu5/LpFBVMshk4RceEmari4tL6vT4Ltt6G9izRzKcknK9LajHmk+9XKX+53KlXi
u0Yc9YaW69a0qu6yO22UZOpdlo7PG0ayODasSUrG42I+YV5MvCcRyCI9ntoXVDZnkhHmk72qvW9/
kVuJyrhsGOON1kclk21iop8v6tya8qa0kaW9JvXOzWuHYd4MdXd6b92r35CIdxqmKRS8UwRWeNou
7iysLEBAZ1WzWtRHjxQpPdbPo/pp9UTKOPiebJD2Zp80FXNB2n4U+XmjdcrVaeGXKy/am7z2ZWmW
AvI6KkaoJPpY40ywL3JIo0PJ2JZoVL8eKosvaZ5O03J3Wvu/UrTxY8UFByqKdu65m32gm2qS0t1u
21dKvPcXjbNt3GV2lIi2u1Osy5ih+tlDRuTJho07x4RcmJeOGYpGYw8jNxOFaa7Xp36+79i5wnEq
aU04LxqNTaXhS8NvRtJ6ut5JNptI8PRvpqxR2HaKdlbUIjrUI5UTt/TxzymIlAZMztCJ248pC8hz
kmXyrevRU7rTsRRalklOP4bnUpOnNt6NyacnJ3u7b9+pM99vTIztXewsv0sviKOF14RlcEmWNz4Z
h5TJGSDkBSqTafhu6fY8wQhJJZVHl51u5LV+jXRdS5azEquc5wM5xnOPOceM/wCNXUfMvdnt16eD
QGPP4kXQL/Q7Z1LBA09jp6+l3gjMjtUZo+/grnxDMlec8gR2YZgeIdjoC2fUT1gRKlbc4rv0+2y7
dNbkvRxLMEiIrSQSdyQSQgPG74zC55BVwxdV1WyuVpRuqeyvsbXAY8Esc5ZUnJShSlLlTT5ruqe6
jtJbszR0l6JzddTRblZsWa+wxT92pXdXWzurgMrXLMk55lG/QuIUijiBjg5o7yGKGOTu9F56t/Jf
dJGhn43BjSaanNLRRXLjhvprUpd3Sjb1lKVtF1+7SCChS6ZrQoscf+r+mYoowMjxuCzEDlklyqu3
NiWLZbPLzq5GKiqR81lyzyzeSbuT3+9kuiS0XQlnui9slbqSpEDI1O/TkE+2bnCSlmnaUqwKyKOX
ZkZVDJ5/SjjDxRsvRC1e5E/ar7m7F6WfYN8jWlv9BcWIfCxX4B+ncaJwFaORcMyRjCluQ4q3GMen
A+uu5Dqje6nS1VlmpUbMF7qWQFXQJXdZqGzupR1L3bIWR0ypEdd8EmOVABpPrjZJLEAjjCcu9Wf8
QkLiGxFMfsrHyF+2P/NR5IuSpd18S7wmaOHJzSuuWS038UWvLucXsfSdhbAklMRQQTRlU5lmMrwt
k8goAwh+2fv+2TriMGpW62JcvEY3i5IJ3zJ260pS+pNNTmafugGgPm3Lbo5o5IZUWSORGSSNwGR4
3Uq6Mp8FWUkEHwQToDrP6/8ARK90vdqw7q1vd+iqk0s9aGshnl2x3l5oNwjQCd6lQs7d6V5USNOU
XYn7UbBZ2F+mHqTtm6VI7G1269utxVUaqyskYCjETRrhkZFwOzIisuMELjGgKV96KO9jouJDgnrP
bXJGD+HDU3BpR5/3Rlhn7gE4wcaA0J1F1PXqRmaxNHAgIHKRgoLH7IufJdj4CKCxPgAk40BhH1+o
WOuNy25eno56Em3Wo5W6rAaOGOJTPFPVj4TRs8sZLMK2HlWUyQzDbUsTyygbH9GPRqnsVFKNQOwz
zns2HM1u5ZZVWS1cnb5PPIAoycKqKkaCOOONFAnegGgGgGgGgGgPwjQFO9Xe0Pp65Obf/wA9adok
k3drln2q4xb9RksbdLXkfPjxMXBIB+6qQBDN89jFaxLSkk6h6hZaNn6mpE+4pOIrGGXuCxYqS3T8
WK8XtMoRmUYVmVgJLtHsw2BLUV2xXn3W1ECI7G83Lm7MnIgkpFesS11JIHySEEY8Y0Bd8cYAAAAA
GAB4AA+wA/sP7aA8tANANANANANANANANANANANANANANANANANANANANANANANANANANANAf//Z

------MultipartBoundary--xC4mlvqwVrWApoms1A0UKBsV18p6KuT1DXBVaW7nOf----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static.deepseek.com/chat/static/katex.66a418a9b7.css

@charset "utf-8";

@font-face { font-family: KaTeX_AMS; font-style: normal; font-weight: 400; =
src: url("https://static.deepseek.com/chat/static/KaTeX_AMS-Regular.a79f1c3=
119.woff2") format("woff2"), url("https://static.deepseek.com/chat/static/K=
aTeX_AMS-Regular.1608a09b4a.woff") format("woff"), url("https://static.deep=
seek.com/chat/static/KaTeX_AMS-Regular.4aafdb685c.ttf") format("truetype");=
 }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 700; src: url("https://static.deepseek.com/chat/static/KaTeX_Caligraphic=
-Bold.ec17d13264.woff2") format("woff2"), url("https://static.deepseek.com/=
chat/static/KaTeX_Caligraphic-Bold.b67709187b.woff") format("woff"), url("h=
ttps://static.deepseek.com/chat/static/KaTeX_Caligraphic-Bold.cce5b8ecea.tt=
f") format("truetype"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 400; src: url("https://static.deepseek.com/chat/static/KaTeX_Caligraphic=
-Regular.55fac25845.woff2") format("woff2"), url("https://static.deepseek.c=
om/chat/static/KaTeX_Caligraphic-Regular.dad44a7fc6.woff") format("woff"), =
url("https://static.deepseek.com/chat/static/KaTeX_Caligraphic-Regular.07ef=
19e7b0.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 7=
00; src: url("https://static.deepseek.com/chat/static/KaTeX_Fraktur-Bold.d4=
2a5579b0.woff2") format("woff2"), url("https://static.deepseek.com/chat/sta=
tic/KaTeX_Fraktur-Bold.9f256b8593.woff") format("woff"), url("https://stati=
c.deepseek.com/chat/static/KaTeX_Fraktur-Bold.b18f59e1d1.ttf") format("true=
type"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 4=
00; src: url("https://static.deepseek.com/chat/static/KaTeX_Fraktur-Regular=
.d3c882a649.woff2") format("woff2"), url("https://static.deepseek.com/chat/=
static/KaTeX_Fraktur-Regular.7c1871215e.woff") format("woff"), url("https:/=
/static.deepseek.com/chat/static/KaTeX_Fraktur-Regular.ed38e79f57.ttf") for=
mat("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 700;=
 src: url("https://static.deepseek.com/chat/static/KaTeX_Main-Bold.c3fb5ac2=
2f.woff2") format("woff2"), url("https://static.deepseek.com/chat/static/Ka=
TeX_Main-Bold.d181c4650d.woff") format("woff"), url("https://static.deepsee=
k.com/chat/static/KaTeX_Main-Bold.b74a1a8b2c.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 700;=
 src: url("https://static.deepseek.com/chat/static/KaTeX_Main-BoldItalic.6f=
2bb1dff2.woff2") format("woff2"), url("https://static.deepseek.com/chat/sta=
tic/KaTeX_Main-BoldItalic.e3f82f9d27.woff") format("woff"), url("https://st=
atic.deepseek.com/chat/static/KaTeX_Main-BoldItalic.70d8b0a530.ttf") format=
("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 400;=
 src: url("https://static.deepseek.com/chat/static/KaTeX_Main-Italic.891614=
2bec.woff2") format("woff2"), url("https://static.deepseek.com/chat/static/=
KaTeX_Main-Italic.9024d815ba.woff") format("woff"), url("https://static.dee=
pseek.com/chat/static/KaTeX_Main-Italic.47373d1e51.ttf") format("truetype")=
; }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 400;=
 src: url("https://static.deepseek.com/chat/static/KaTeX_Main-Regular.0462f=
03bdf.woff2") format("woff2"), url("https://static.deepseek.com/chat/static=
/KaTeX_Main-Regular.7f51fe0340.woff") format("woff"), url("https://static.d=
eepseek.com/chat/static/KaTeX_Main-Regular.b7f8fe9b5f.ttf") format("truetyp=
e"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 700;=
 src: url("https://static.deepseek.com/chat/static/KaTeX_Math-BoldItalic.57=
2d331f69.woff2") format("woff2"), url("https://static.deepseek.com/chat/sta=
tic/KaTeX_Math-BoldItalic.f1035d8d5d.woff") format("woff"), url("https://st=
atic.deepseek.com/chat/static/KaTeX_Math-BoldItalic.a879cf8383.ttf") format=
("truetype"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 400;=
 src: url("https://static.deepseek.com/chat/static/KaTeX_Math-Italic.f28c23=
acad.woff2") format("woff2"), url("https://static.deepseek.com/chat/static/=
KaTeX_Math-Italic.5295ba483a.woff") format("woff"), url("https://static.dee=
pseek.com/chat/static/KaTeX_Math-Italic.939bc64440.ttf") format("truetype")=
; }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 700; src: url("https://static.deepseek.com/chat/static/KaTeX_SansSerif-Bol=
d.8c5b5494b6.woff2") format("woff2"), url("https://static.deepseek.com/chat=
/static/KaTeX_SansSerif-Bold.bf59d231c3.woff") format("woff"), url("https:/=
/static.deepseek.com/chat/static/KaTeX_SansSerif-Bold.94e1e8dc5f.ttf") form=
at("truetype"); }

@font-face { font-family: KaTeX_SansSerif; font-style: italic; font-weight:=
 400; src: url("https://static.deepseek.com/chat/static/KaTeX_SansSerif-Ita=
lic.3b1e59b3ba.woff2") format("woff2"), url("https://static.deepseek.com/ch=
at/static/KaTeX_SansSerif-Italic.7c9bc82b17.woff") format("woff"), url("htt=
ps://static.deepseek.com/chat/static/KaTeX_SansSerif-Italic.b4c20c84d8.ttf"=
) format("truetype"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 400; src: url("https://static.deepseek.com/chat/static/KaTeX_SansSerif-Reg=
ular.ba21ed5f84.woff2") format("woff2"), url("https://static.deepseek.com/c=
hat/static/KaTeX_SansSerif-Regular.740484788f.woff") format("woff"), url("h=
ttps://static.deepseek.com/chat/static/KaTeX_SansSerif-Regular.d4d7ba4804.t=
tf") format("truetype"); }

@font-face { font-family: KaTeX_Script; font-style: normal; font-weight: 40=
0; src: url("https://static.deepseek.com/chat/static/KaTeX_Script-Regular.0=
3e9641d6f.woff2") format("woff2"), url("https://static.deepseek.com/chat/st=
atic/KaTeX_Script-Regular.0750571032.woff") format("woff"), url("https://st=
atic.deepseek.com/chat/static/KaTeX_Script-Regular.fe9cbbe1a0.ttf") format(=
"truetype"); }

@font-face { font-family: KaTeX_Size1; font-style: normal; font-weight: 400=
; src: url("https://static.deepseek.com/chat/static/KaTeX_Size1-Regular.eae=
34984b3.woff2") format("woff2"), url("https://static.deepseek.com/chat/stat=
ic/KaTeX_Size1-Regular.e1e279cbdd.woff") format("woff"), url("https://stati=
c.deepseek.com/chat/static/KaTeX_Size1-Regular.fabc004aab.ttf") format("tru=
etype"); }

@font-face { font-family: KaTeX_Size2; font-style: normal; font-weight: 400=
; src: url("https://static.deepseek.com/chat/static/KaTeX_Size2-Regular.591=
6a24fa3.woff2") format("woff2"), url("https://static.deepseek.com/chat/stat=
ic/KaTeX_Size2-Regular.577270225e.woff") format("woff"), url("https://stati=
c.deepseek.com/chat/static/KaTeX_Size2-Regular.d6b476ecd3.ttf") format("tru=
etype"); }

@font-face { font-family: KaTeX_Size3; font-style: normal; font-weight: 400=
; src: url("https://static.deepseek.com/chat/static/KaTeX_Size3-Regular.b42=
30e7e83.woff2") format("woff2"), url("https://static.deepseek.com/chat/stat=
ic/KaTeX_Size3-Regular.9acaf01c64.woff") format("woff"), url("https://stati=
c.deepseek.com/chat/static/KaTeX_Size3-Regular.a144ef5840.ttf") format("tru=
etype"); }

@font-face { font-family: KaTeX_Size4; font-style: normal; font-weight: 400=
; src: url("https://static.deepseek.com/chat/static/KaTeX_Size4-Regular.10d=
95fd3a2.woff2") format("woff2"), url("https://static.deepseek.com/chat/stat=
ic/KaTeX_Size4-Regular.7a996c9da2.woff") format("woff"), url("https://stati=
c.deepseek.com/chat/static/KaTeX_Size4-Regular.fbccdabe0a.ttf") format("tru=
etype"); }

@font-face { font-family: KaTeX_Typewriter; font-style: normal; font-weight=
: 400; src: url("https://static.deepseek.com/chat/static/KaTeX_Typewriter-R=
egular.a8709e3622.woff2") format("woff2"), url("https://static.deepseek.com=
/chat/static/KaTeX_Typewriter-Regular.6258592bdc.woff") format("woff"), url=
("https://static.deepseek.com/chat/static/KaTeX_Typewriter-Regular.d97aaf4a=
1e.ttf") format("truetype"); }

.katex { text-indent: 0px; text-rendering: auto; font: 1.21em / 1.2 KaTeX_M=
ain, "Times New Roman", serif; }

.katex * { border-color: currentcolor; }

.katex .katex-version::after { content: "0.16.21"; }

.katex .katex-mathml { clip: rect(1px, 1px, 1px, 1px); border: 0px; width: =
1px; height: 1px; padding: 0px; position: absolute; overflow: hidden; }

.katex .katex-html > .newline { display: block; }

.katex .base { white-space: nowrap; width: min-content; position: relative;=
 }

.katex .base, .katex .strut { display: inline-block; }

.katex .textbf { font-weight: 700; }

.katex .textit { font-style: italic; }

.katex .textrm { font-family: KaTeX_Main; }

.katex .textsf { font-family: KaTeX_SansSerif; }

.katex .texttt { font-family: KaTeX_Typewriter; }

.katex .mathnormal { font-family: KaTeX_Math; font-style: italic; }

.katex .mathit { font-family: KaTeX_Main; font-style: italic; }

.katex .mathrm { font-style: normal; }

.katex .mathbf { font-family: KaTeX_Main; font-weight: 700; }

.katex .boldsymbol { font-family: KaTeX_Math; font-style: italic; font-weig=
ht: 700; }

.katex .amsrm, .katex .mathbb, .katex .textbb { font-family: KaTeX_AMS; }

.katex .mathcal { font-family: KaTeX_Caligraphic; }

.katex .mathfrak, .katex .textfrak { font-family: KaTeX_Fraktur; }

.katex .mathboldfrak, .katex .textboldfrak { font-family: KaTeX_Fraktur; fo=
nt-weight: 700; }

.katex .mathtt { font-family: KaTeX_Typewriter; }

.katex .mathscr, .katex .textscr { font-family: KaTeX_Script; }

.katex .mathsf, .katex .textsf { font-family: KaTeX_SansSerif; }

.katex .mathboldsf, .katex .textboldsf { font-family: KaTeX_SansSerif; font=
-weight: 700; }

.katex .mathitsf, .katex .mathsfit, .katex .textitsf { font-family: KaTeX_S=
ansSerif; font-style: italic; }

.katex .mainrm { font-family: KaTeX_Main; font-style: normal; }

.katex .vlist-t { border-collapse: collapse; table-layout: fixed; display: =
inline-table; }

.katex .vlist-r { display: table-row; }

.katex .vlist { vertical-align: bottom; display: table-cell; position: rela=
tive; }

.katex .vlist > span { height: 0px; display: block; position: relative; }

.katex .vlist > span > span { display: inline-block; }

.katex .vlist > span > .pstrut { width: 0px; overflow: hidden; }

.katex .vlist-t2 { margin-right: -2px; }

.katex .vlist-s { vertical-align: bottom; width: 2px; min-width: 2px; font-=
size: 1px; display: table-cell; }

.katex .vbox { flex-direction: column; align-items: baseline; display: inli=
ne-flex; }

.katex .hbox { width: 100%; }

.katex .hbox, .katex .thinbox { flex-direction: row; display: inline-flex; =
}

.katex .thinbox { width: 0px; max-width: 0px; }

.katex .msupsub { text-align: left; }

.katex .mfrac > span > span { text-align: center; }

.katex .mfrac .frac-line { border-bottom-style: solid; width: 100%; display=
: inline-block; }

.katex .hdashline, .katex .hline, .katex .mfrac .frac-line, .katex .overlin=
e .overline-line, .katex .rule, .katex .underline .underline-line { min-hei=
ght: 1px; }

.katex .mspace { display: inline-block; }

.katex .clap, .katex .llap, .katex .rlap { width: 0px; position: relative; =
}

.katex .clap > .inner, .katex .llap > .inner, .katex .rlap > .inner { posit=
ion: absolute; }

.katex .clap > .fix, .katex .llap > .fix, .katex .rlap > .fix { display: in=
line-block; }

.katex .llap > .inner { right: 0px; }

.katex .clap > .inner, .katex .rlap > .inner { left: 0px; }

.katex .clap > .inner > span { margin-left: -50%; margin-right: 50%; }

.katex .rule { border: 0px solid; display: inline-block; position: relative=
; }

.katex .hline, .katex .overline .overline-line, .katex .underline .underlin=
e-line { border-bottom-style: solid; width: 100%; display: inline-block; }

.katex .hdashline { border-bottom-style: dashed; width: 100%; display: inli=
ne-block; }

.katex .sqrt > .root { margin-left: 0.277778em; margin-right: -0.555556em; =
}

.katex .fontsize-ensurer.reset-size1.size1, .katex .sizing.reset-size1.size=
1 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size1.size2, .katex .sizing.reset-size1.size=
2 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size1.size3, .katex .sizing.reset-size1.size=
3 { font-size: 1.4em; }

.katex .fontsize-ensurer.reset-size1.size4, .katex .sizing.reset-size1.size=
4 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size1.size5, .katex .sizing.reset-size1.size=
5 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size1.size6, .katex .sizing.reset-size1.size=
6 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size1.size7, .katex .sizing.reset-size1.size=
7 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size1.size8, .katex .sizing.reset-size1.size=
8 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size1.size9, .katex .sizing.reset-size1.size=
9 { font-size: 3.456em; }

.katex .fontsize-ensurer.reset-size1.size10, .katex .sizing.reset-size1.siz=
e10 { font-size: 4.148em; }

.katex .fontsize-ensurer.reset-size1.size11, .katex .sizing.reset-size1.siz=
e11 { font-size: 4.976em; }

.katex .fontsize-ensurer.reset-size2.size1, .katex .sizing.reset-size2.size=
1 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size2.size2, .katex .sizing.reset-size2.size=
2 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size2.size3, .katex .sizing.reset-size2.size=
3 { font-size: 1.16667em; }

.katex .fontsize-ensurer.reset-size2.size4, .katex .sizing.reset-size2.size=
4 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size2.size5, .katex .sizing.reset-size2.size=
5 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size2.size6, .katex .sizing.reset-size2.size=
6 { font-size: 1.66667em; }

.katex .fontsize-ensurer.reset-size2.size7, .katex .sizing.reset-size2.size=
7 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size2.size8, .katex .sizing.reset-size2.size=
8 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size2.size9, .katex .sizing.reset-size2.size=
9 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size2.size10, .katex .sizing.reset-size2.siz=
e10 { font-size: 3.45667em; }

.katex .fontsize-ensurer.reset-size2.size11, .katex .sizing.reset-size2.siz=
e11 { font-size: 4.14667em; }

.katex .fontsize-ensurer.reset-size3.size1, .katex .sizing.reset-size3.size=
1 { font-size: 0.714286em; }

.katex .fontsize-ensurer.reset-size3.size2, .katex .sizing.reset-size3.size=
2 { font-size: 0.857143em; }

.katex .fontsize-ensurer.reset-size3.size3, .katex .sizing.reset-size3.size=
3 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size3.size4, .katex .sizing.reset-size3.size=
4 { font-size: 1.14286em; }

.katex .fontsize-ensurer.reset-size3.size5, .katex .sizing.reset-size3.size=
5 { font-size: 1.28571em; }

.katex .fontsize-ensurer.reset-size3.size6, .katex .sizing.reset-size3.size=
6 { font-size: 1.42857em; }

.katex .fontsize-ensurer.reset-size3.size7, .katex .sizing.reset-size3.size=
7 { font-size: 1.71429em; }

.katex .fontsize-ensurer.reset-size3.size8, .katex .sizing.reset-size3.size=
8 { font-size: 2.05714em; }

.katex .fontsize-ensurer.reset-size3.size9, .katex .sizing.reset-size3.size=
9 { font-size: 2.46857em; }

.katex .fontsize-ensurer.reset-size3.size10, .katex .sizing.reset-size3.siz=
e10 { font-size: 2.96286em; }

.katex .fontsize-ensurer.reset-size3.size11, .katex .sizing.reset-size3.siz=
e11 { font-size: 3.55429em; }

.katex .fontsize-ensurer.reset-size4.size1, .katex .sizing.reset-size4.size=
1 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size4.size2, .katex .sizing.reset-size4.size=
2 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size4.size3, .katex .sizing.reset-size4.size=
3 { font-size: 0.875em; }

.katex .fontsize-ensurer.reset-size4.size4, .katex .sizing.reset-size4.size=
4 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size4.size5, .katex .sizing.reset-size4.size=
5 { font-size: 1.125em; }

.katex .fontsize-ensurer.reset-size4.size6, .katex .sizing.reset-size4.size=
6 { font-size: 1.25em; }

.katex .fontsize-ensurer.reset-size4.size7, .katex .sizing.reset-size4.size=
7 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size4.size8, .katex .sizing.reset-size4.size=
8 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size4.size9, .katex .sizing.reset-size4.size=
9 { font-size: 2.16em; }

.katex .fontsize-ensurer.reset-size4.size10, .katex .sizing.reset-size4.siz=
e10 { font-size: 2.5925em; }

.katex .fontsize-ensurer.reset-size4.size11, .katex .sizing.reset-size4.siz=
e11 { font-size: 3.11em; }

.katex .fontsize-ensurer.reset-size5.size1, .katex .sizing.reset-size5.size=
1 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size5.size2, .katex .sizing.reset-size5.size=
2 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size5.size3, .katex .sizing.reset-size5.size=
3 { font-size: 0.777778em; }

.katex .fontsize-ensurer.reset-size5.size4, .katex .sizing.reset-size5.size=
4 { font-size: 0.888889em; }

.katex .fontsize-ensurer.reset-size5.size5, .katex .sizing.reset-size5.size=
5 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size5.size6, .katex .sizing.reset-size5.size=
6 { font-size: 1.11111em; }

.katex .fontsize-ensurer.reset-size5.size7, .katex .sizing.reset-size5.size=
7 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size5.size8, .katex .sizing.reset-size5.size=
8 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size5.size9, .katex .sizing.reset-size5.size=
9 { font-size: 1.92em; }

.katex .fontsize-ensurer.reset-size5.size10, .katex .sizing.reset-size5.siz=
e10 { font-size: 2.30444em; }

.katex .fontsize-ensurer.reset-size5.size11, .katex .sizing.reset-size5.siz=
e11 { font-size: 2.76444em; }

.katex .fontsize-ensurer.reset-size6.size1, .katex .sizing.reset-size6.size=
1 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size6.size2, .katex .sizing.reset-size6.size=
2 { font-size: 0.6em; }

.katex .fontsize-ensurer.reset-size6.size3, .katex .sizing.reset-size6.size=
3 { font-size: 0.7em; }

.katex .fontsize-ensurer.reset-size6.size4, .katex .sizing.reset-size6.size=
4 { font-size: 0.8em; }

.katex .fontsize-ensurer.reset-size6.size5, .katex .sizing.reset-size6.size=
5 { font-size: 0.9em; }

.katex .fontsize-ensurer.reset-size6.size6, .katex .sizing.reset-size6.size=
6 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size6.size7, .katex .sizing.reset-size6.size=
7 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size6.size8, .katex .sizing.reset-size6.size=
8 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size6.size9, .katex .sizing.reset-size6.size=
9 { font-size: 1.728em; }

.katex .fontsize-ensurer.reset-size6.size10, .katex .sizing.reset-size6.siz=
e10 { font-size: 2.074em; }

.katex .fontsize-ensurer.reset-size6.size11, .katex .sizing.reset-size6.siz=
e11 { font-size: 2.488em; }

.katex .fontsize-ensurer.reset-size7.size1, .katex .sizing.reset-size7.size=
1 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size7.size2, .katex .sizing.reset-size7.size=
2 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size7.size3, .katex .sizing.reset-size7.size=
3 { font-size: 0.583333em; }

.katex .fontsize-ensurer.reset-size7.size4, .katex .sizing.reset-size7.size=
4 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size7.size5, .katex .sizing.reset-size7.size=
5 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size7.size6, .katex .sizing.reset-size7.size=
6 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size7.size7, .katex .sizing.reset-size7.size=
7 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size7.size8, .katex .sizing.reset-size7.size=
8 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size7.size9, .katex .sizing.reset-size7.size=
9 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size7.size10, .katex .sizing.reset-size7.siz=
e10 { font-size: 1.72833em; }

.katex .fontsize-ensurer.reset-size7.size11, .katex .sizing.reset-size7.siz=
e11 { font-size: 2.07333em; }

.katex .fontsize-ensurer.reset-size8.size1, .katex .sizing.reset-size8.size=
1 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size8.size2, .katex .sizing.reset-size8.size=
2 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size8.size3, .katex .sizing.reset-size8.size=
3 { font-size: 0.486111em; }

.katex .fontsize-ensurer.reset-size8.size4, .katex .sizing.reset-size8.size=
4 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size8.size5, .katex .sizing.reset-size8.size=
5 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size8.size6, .katex .sizing.reset-size8.size=
6 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size8.size7, .katex .sizing.reset-size8.size=
7 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size8.size8, .katex .sizing.reset-size8.size=
8 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size8.size9, .katex .sizing.reset-size8.size=
9 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size8.size10, .katex .sizing.reset-size8.siz=
e10 { font-size: 1.44028em; }

.katex .fontsize-ensurer.reset-size8.size11, .katex .sizing.reset-size8.siz=
e11 { font-size: 1.72778em; }

.katex .fontsize-ensurer.reset-size9.size1, .katex .sizing.reset-size9.size=
1 { font-size: 0.289352em; }

.katex .fontsize-ensurer.reset-size9.size2, .katex .sizing.reset-size9.size=
2 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size9.size3, .katex .sizing.reset-size9.size=
3 { font-size: 0.405093em; }

.katex .fontsize-ensurer.reset-size9.size4, .katex .sizing.reset-size9.size=
4 { font-size: 0.462963em; }

.katex .fontsize-ensurer.reset-size9.size5, .katex .sizing.reset-size9.size=
5 { font-size: 0.520833em; }

.katex .fontsize-ensurer.reset-size9.size6, .katex .sizing.reset-size9.size=
6 { font-size: 0.578704em; }

.katex .fontsize-ensurer.reset-size9.size7, .katex .sizing.reset-size9.size=
7 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size9.size8, .katex .sizing.reset-size9.size=
8 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size9.size9, .katex .sizing.reset-size9.size=
9 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size9.size10, .katex .sizing.reset-size9.siz=
e10 { font-size: 1.20023em; }

.katex .fontsize-ensurer.reset-size9.size11, .katex .sizing.reset-size9.siz=
e11 { font-size: 1.43981em; }

.katex .fontsize-ensurer.reset-size10.size1, .katex .sizing.reset-size10.si=
ze1 { font-size: 0.24108em; }

.katex .fontsize-ensurer.reset-size10.size2, .katex .sizing.reset-size10.si=
ze2 { font-size: 0.289296em; }

.katex .fontsize-ensurer.reset-size10.size3, .katex .sizing.reset-size10.si=
ze3 { font-size: 0.337512em; }

.katex .fontsize-ensurer.reset-size10.size4, .katex .sizing.reset-size10.si=
ze4 { font-size: 0.385728em; }

.katex .fontsize-ensurer.reset-size10.size5, .katex .sizing.reset-size10.si=
ze5 { font-size: 0.433944em; }

.katex .fontsize-ensurer.reset-size10.size6, .katex .sizing.reset-size10.si=
ze6 { font-size: 0.48216em; }

.katex .fontsize-ensurer.reset-size10.size7, .katex .sizing.reset-size10.si=
ze7 { font-size: 0.578592em; }

.katex .fontsize-ensurer.reset-size10.size8, .katex .sizing.reset-size10.si=
ze8 { font-size: 0.694311em; }

.katex .fontsize-ensurer.reset-size10.size9, .katex .sizing.reset-size10.si=
ze9 { font-size: 0.833173em; }

.katex .fontsize-ensurer.reset-size10.size10, .katex .sizing.reset-size10.s=
ize10 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size10.size11, .katex .sizing.reset-size10.s=
ize11 { font-size: 1.19961em; }

.katex .fontsize-ensurer.reset-size11.size1, .katex .sizing.reset-size11.si=
ze1 { font-size: 0.200965em; }

.katex .fontsize-ensurer.reset-size11.size2, .katex .sizing.reset-size11.si=
ze2 { font-size: 0.241158em; }

.katex .fontsize-ensurer.reset-size11.size3, .katex .sizing.reset-size11.si=
ze3 { font-size: 0.281351em; }

.katex .fontsize-ensurer.reset-size11.size4, .katex .sizing.reset-size11.si=
ze4 { font-size: 0.321543em; }

.katex .fontsize-ensurer.reset-size11.size5, .katex .sizing.reset-size11.si=
ze5 { font-size: 0.361736em; }

.katex .fontsize-ensurer.reset-size11.size6, .katex .sizing.reset-size11.si=
ze6 { font-size: 0.401929em; }

.katex .fontsize-ensurer.reset-size11.size7, .katex .sizing.reset-size11.si=
ze7 { font-size: 0.482315em; }

.katex .fontsize-ensurer.reset-size11.size8, .katex .sizing.reset-size11.si=
ze8 { font-size: 0.578778em; }

.katex .fontsize-ensurer.reset-size11.size9, .katex .sizing.reset-size11.si=
ze9 { font-size: 0.694534em; }

.katex .fontsize-ensurer.reset-size11.size10, .katex .sizing.reset-size11.s=
ize10 { font-size: 0.833601em; }

.katex .fontsize-ensurer.reset-size11.size11, .katex .sizing.reset-size11.s=
ize11 { font-size: 1em; }

.katex .delimsizing.size1 { font-family: KaTeX_Size1; }

.katex .delimsizing.size2 { font-family: KaTeX_Size2; }

.katex .delimsizing.size3 { font-family: KaTeX_Size3; }

.katex .delimsizing.size4 { font-family: KaTeX_Size4; }

.katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; }

.katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; }

.katex .nulldelimiter { width: 0.12em; display: inline-block; }

.katex .delimcenter, .katex .op-symbol { position: relative; }

.katex .op-symbol.small-op { font-family: KaTeX_Size1; }

.katex .op-symbol.large-op { font-family: KaTeX_Size2; }

.katex .accent > .vlist-t, .katex .op-limits > .vlist-t { text-align: cente=
r; }

.katex .accent .accent-body { position: relative; }

.katex .accent .accent-body:not(.accent-full) { width: 0px; }

.katex .overlay { display: block; }

.katex .mtable .vertical-separator { min-width: 1px; display: inline-block;=
 }

.katex .mtable .arraycolsep { display: inline-block; }

.katex .mtable .col-align-c > .vlist-t { text-align: center; }

.katex .mtable .col-align-l > .vlist-t { text-align: left; }

.katex .mtable .col-align-r > .vlist-t { text-align: right; }

.katex .svg-align { text-align: left; }

.katex svg { fill: currentcolor; stroke: currentcolor; fill-rule: nonzero; =
fill-opacity: 1; stroke-width: 1px; stroke-linecap: butt; stroke-linejoin: =
miter; stroke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; =
stroke-opacity: 1; height: inherit; width: 100%; display: block; position: =
absolute; }

.katex svg path { stroke: none; }

.katex img { border-style: none; min-width: 0px; max-width: none; min-heigh=
t: 0px; max-height: none; }

.katex .stretchy { width: 100%; display: block; position: relative; overflo=
w: hidden; }

.katex .stretchy::after, .katex .stretchy::before { content: ""; }

.katex .hide-tail { width: 100%; position: relative; overflow: hidden; }

.katex .halfarrow-left { width: 50.2%; position: absolute; left: 0px; overf=
low: hidden; }

.katex .halfarrow-right { width: 50.2%; position: absolute; right: 0px; ove=
rflow: hidden; }

.katex .brace-left { width: 25.1%; position: absolute; left: 0px; overflow:=
 hidden; }

.katex .brace-center { width: 50%; position: absolute; left: 25%; overflow:=
 hidden; }

.katex .brace-right { width: 25.1%; position: absolute; right: 0px; overflo=
w: hidden; }

.katex .x-arrow-pad { padding: 0px 0.5em; }

.katex .cd-arrow-pad { padding: 0px 0.55556em 0px 0.27778em; }

.katex .mover, .katex .munder, .katex .x-arrow { text-align: center; }

.katex .boxpad { padding: 0px 0.3em; }

.katex .fbox, .katex .fcolorbox { box-sizing: border-box; border: 0.04em so=
lid; }

.katex .cancel-pad { padding: 0px 0.2em; }

.katex .cancel-lap { margin-left: -0.2em; margin-right: -0.2em; }

.katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; }

.katex .angl { box-sizing: border-box; border-top: 0.049em solid; border-ri=
ght: 0.049em solid; margin-right: 0.03889em; }

.katex .anglpad { padding: 0px 0.03889em; }

.katex .eqn-num::before { content: "(" counter(katexEqnNo) ")"; counter-inc=
rement: katexEqnNo 1; }

.katex .mml-eqn-num::before { content: "(" counter(mmlEqnNo) ")"; counter-i=
ncrement: mmlEqnNo 1; }

.katex .mtr-glue { width: 50%; }

.katex .cd-vert-arrow { display: inline-block; position: relative; }

.katex .cd-label-left { text-align: left; display: inline-block; position: =
absolute; right: calc(50% + 0.3em); }

.katex .cd-label-right { text-align: right; display: inline-block; position=
: absolute; left: calc(50% + 0.3em); }

.katex-display { text-align: center; margin: 1em 0px; display: block; }

.katex-display > .katex { text-align: center; white-space: nowrap; display:=
 block; }

.katex-display > .katex > .katex-html { display: block; position: relative;=
 }

.katex-display > .katex > .katex-html > .tag { position: absolute; right: 0=
px; }

.katex-display.leqno > .katex > .katex-html > .tag { left: 0px; right: auto=
; }

.katex-display.fleqn > .katex { text-align: left; padding-left: 2em; }

body { counter-reset: katexEqnNo 0 mmlEqnNo 0; }
------MultipartBoundary--xC4mlvqwVrWApoms1A0UKBsV18p6KuT1DXBVaW7nOf----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static.deepseek.com/chat/static/main.f704369816.css

@charset "utf-8";

[data-transform-origin=3D"bottom"] .ds-fade-in-zoom-in-enter, [data-transfo=
rm-origin=3D"bottom"] .ds-fade-in-zoom-in-exit { transform-origin: center b=
ottom; }

[data-transform-origin=3D"bottom left"] .ds-fade-in-zoom-in-enter, [data-tr=
ansform-origin=3D"bottom left"] .ds-fade-in-zoom-in-exit { transform-origin=
: 0px 100%; }

[data-transform-origin=3D"bottom right"] .ds-fade-in-zoom-in-enter, [data-t=
ransform-origin=3D"bottom right"] .ds-fade-in-zoom-in-exit { transform-orig=
in: 100% 100%; }

[data-transform-origin=3D"top"] .ds-fade-in-zoom-in-enter, [data-transform-=
origin=3D"top"] .ds-fade-in-zoom-in-exit { transform-origin: center top; }

[data-transform-origin=3D"top left"] .ds-fade-in-zoom-in-enter, [data-trans=
form-origin=3D"top left"] .ds-fade-in-zoom-in-exit { transform-origin: 0px =
0px; }

[data-transform-origin=3D"top right"] .ds-fade-in-zoom-in-enter, [data-tran=
sform-origin=3D"top right"] .ds-fade-in-zoom-in-exit { transform-origin: 10=
0% 0px; }

[data-transform-origin=3D"left"] .ds-fade-in-zoom-in-enter, [data-transform=
-origin=3D"left"] .ds-fade-in-zoom-in-exit { transform-origin: 0px center; =
}

[data-transform-origin=3D"left top"] .ds-fade-in-zoom-in-enter, [data-trans=
form-origin=3D"left top"] .ds-fade-in-zoom-in-exit { transform-origin: 0px =
0px; }

[data-transform-origin=3D"left bottom"] .ds-fade-in-zoom-in-enter, [data-tr=
ansform-origin=3D"left bottom"] .ds-fade-in-zoom-in-exit { transform-origin=
: 0px 100%; }

[data-transform-origin=3D"right"] .ds-fade-in-zoom-in-enter, [data-transfor=
m-origin=3D"right"] .ds-fade-in-zoom-in-exit { transform-origin: 100% cente=
r; }

[data-transform-origin=3D"right top"] .ds-fade-in-zoom-in-enter, [data-tran=
sform-origin=3D"right top"] .ds-fade-in-zoom-in-exit { transform-origin: 10=
0% 0px; }

[data-transform-origin=3D"right bottom"] .ds-fade-in-zoom-in-enter, [data-t=
ransform-origin=3D"right bottom"] .ds-fade-in-zoom-in-exit { transform-orig=
in: 100% 100%; }

[data-transform-origin=3D"center"] .ds-fade-in-zoom-in-enter, [data-transfo=
rm-origin=3D"center"] .ds-fade-in-zoom-in-exit { transform-origin: 50% cent=
er; }

.ds-fade-in-zoom-in-enter { opacity: 0; transform: scale(0.96); }

.ds-fade-in-zoom-in-active { opacity: 1; transition: opacity var(--ds-ease-=
in)var(--ds-transition-duration-fast),transform var(--ds-ease-in)var(--ds-t=
ransition-duration-fast); transform: scale(1); }

.ds-fade-in-zoom-in-exit { opacity: 1; transform: scale(1); }

.ds-fade-in-zoom-in-exit-active { opacity: 0; transition: opacity var(--ds-=
ease-out)var(--ds-transition-duration-fast),transform var(--ds-ease-out)var=
(--ds-transition-duration-fast); transform: scale(0.96); }

.ds-form-item.ds-form-item--label-s { --ds-form-item-label-font-size: var(-=
-ds-font-size-s); --ds-form-item-label-line-height: var(--ds-line-height-s)=
; }

.ds-form-item.ds-form-item--label-m .ds-form-item__label { --ds-form-item-l=
abel-font-size: var(--ds-font-size-m); --ds-form-item-label-line-height: va=
r(--ds-line-height-m); }

.ds-form-item .ds-form-item__label { color: rgb(var(--ds-rgb-label-2)); fon=
t-size: var(--ds-form-item-label-font-size); line-height: var(--ds-form-ite=
m-label-line-height); justify-content: space-between; align-items: center; =
gap: 8px; margin-bottom: 6px; display: flex; }

.ds-form-item .ds-form-item__label-text { flex: 1 1 0%; }

.ds-form-item .ds-form-item__label-suffix { align-items: center; margin-lef=
t: auto; padding-left: 8px; display: flex; }

.ds-form-item .ds-form-item__content { color: rgb(var(--ds-rgb-label-1)); }

.ds-form-item .ds-form-item__description { color: rgb(var(--ds-rgb-label-2)=
); box-sizing: border-box; min-height: 21px; transition: color var(--ds-tra=
nsition-duration)var(--ds-ease-in-out); padding: 2px; font-size: 12px; line=
-height: 17px; }

.ds-form-item .ds-form-item__feedback { box-sizing: border-box; min-height:=
 21px; transition: color var(--ds-transition-duration)var(--ds-ease-in-out)=
; padding: 2px; font-size: 12px; line-height: 17px; }

.ds-form-item .ds-form-item__feedback-content { width: fit-content; }

.ds-form-item.ds-form-item--none .ds-form-item__feedback { color: rgb(var(-=
-ds-rgb-label-2)); }

.ds-form-item.ds-form-item--error .ds-form-item__feedback { color: rgb(var(=
--ds-rgb-error)); }

.ds-input { --ds-input-text-color: rgb(var(--ds-rgb-label-1)); --ds-input-p=
laceholder-color: rgb(var(--ds-rgb-label-3)); --ds-input-icon-color: rgb(va=
r(--ds-rgb-label-3)); --ds-input-prefix-text-color: rgb(var(--ds-rgb-label-=
1)); --ds-input-color: rgb(var(--ds-rgb-input)); --ds-input-font-weight: in=
itial; --ds-input-color-focus: rgb(var(--ds-rgb-input-focus)); }

.ds-input.ds-input--bordered { --ds-input-color: rgba(var(--ds-rgba-transpa=
rent)); }

.ds-input.ds-input--l { --ds-input-padding: 0 10px; --ds-input-border-radiu=
s: 10px; --ds-input-height: var(--ds-input-height-l); --ds-input-font-size:=
 var(--ds-font-size-m); --ds-input-line-height: var(--ds-line-height-m); --=
ds-input-prefix-margin: 0 8px 0 0; --ds-input-password-toggle-margin: 0 0 0=
 8px; --ds-input-icon-size: 18px; }

.ds-input.ds-input--m { --ds-input-padding: 0 10px; --ds-input-border-radiu=
s: 10px; --ds-input-height: var(--ds-input-height-m); --ds-input-font-size:=
 var(--ds-font-size-m); --ds-input-line-height: var(--ds-line-height-m); --=
ds-input-prefix-margin: 0 8px 0 0; --ds-input-password-toggle-margin: 0 0 0=
 8px; --ds-input-icon-size: 18px; }

.ds-input.ds-input--m .ds-input__password-toggle .ds-icon-button { --ds-ico=
n-button-size: 16px; }

.ds-input.ds-input--s { --ds-input-padding: 0 10px; --ds-input-border-radiu=
s: 10px; --ds-input-height: var(--ds-input-height-s); --ds-input-font-size:=
 var(--ds-font-size-s); --ds-input-line-height: var(--ds-line-height-s); --=
ds-input-prefix-margin: 0 8px 0 0; --ds-input-password-toggle-margin: 0 0 0=
 8px; --ds-input-icon-size: 18px; }

.ds-input.ds-input--s .ds-input__password-toggle .ds-icon-button { --ds-ico=
n-button-size: 15px; }

.ds-input.ds-input--xs { --ds-input-padding: 0 10px; --ds-input-border-radi=
us: 8px; --ds-input-height: var(--ds-input-height-xs); --ds-input-font-size=
: var(--ds-font-size-xs); --ds-input-line-height: var(--ds-line-height-xs);=
 --ds-input-prefix-margin: 0 7px 0 0; --ds-input-icon-size: 18px; --ds-inpu=
t-password-toggle-margin: 0 0 0 7px; }

.ds-input.ds-input--xs .ds-input__password-toggle .ds-icon-button { --ds-ic=
on-button-size: 14px; }

.ds-input { cursor: text; background-color: var(--ds-input-color); width: 1=
00%; color: var(--ds-input-text-color); box-sizing: border-box; border-radi=
us: var(--ds-input-border-radius); transition: background-color var(--ds-tr=
ansition-duration)var(--ds-ease-in-out),box-shadow var(--ds-transition-dura=
tion)var(--ds-ease-in-out),color var(--ds-transition-duration)var(--ds-ease=
-in-out); padding: var(--ds-input-padding); height: var(--ds-input-height);=
 font-size: var(--ds-input-font-size); line-height: var(--ds-input-line-hei=
ght); font-weight: var(--ds-input-font-weight); align-items: center; displa=
y: flex; position: relative; }

.ds-input.ds-input--disabled { opacity: 0.45; cursor: not-allowed; }

.ds-input.ds-input--disabled .ds-input__input { cursor: not-allowed; }

.ds-input .ds-input__mirror { padding: var(--ds-input-padding); pointer-eve=
nts: none; white-space: nowrap; visibility: hidden; height: 0px; position: =
absolute; top: 0px; left: 0px; }

.ds-input .ds-input__mirror, .ds-input .ds-input__input { font-size: inheri=
t; font-family: inherit; font-weight: inherit; border: none; display: block=
; }

.ds-input .ds-input__input { background-color: rgba(var(--ds-rgba-transpare=
nt)); color: inherit; caret-color: rgb(var(--ds-rgb-primary)); border: none=
; outline: none; flex: 1 1 0%; padding: 0px; font-family: inherit; }

.ds-input .ds-input__input::placeholder { color: var(--ds-input-placeholder=
-color); }

.ds-input .ds-input__input::placeholder { color: var(--ds-input-placeholder=
-color); }

.ds-input .ds-input__input::placeholder { color: var(--ds-input-placeholder=
-color); }

.ds-input .ds-input__icon { color: var(--ds-input-icon-color); font-size: v=
ar(--ds-input-icon-size); margin: var(--ds-input-prefix-margin); justify-co=
ntent: center; align-items: center; display: flex; }

.ds-input .ds-input__prefix { color: var(--ds-input-prefix-color); margin: =
var(--ds-input-prefix-margin); line-height: var(--ds-input-height); }

.ds-input .ds-input__password-toggle { margin: var(--ds-input-password-togg=
le-margin); }

.ds-input.ds-input--none:focus-within { background-color: var(--ds-input-fo=
cus-color,--ds-input-color-focus); box-shadow: inset 0 0 0 2px var(--ds-inp=
ut-focus-border-color,rgb(var(--ds-rgb-primary))); }

.ds-input.ds-input--filled.ds-input--error:focus-within { background-color:=
 var(--ds-input-focus-color,--ds-input-color-focus); }

.ds-input.ds-input--bordered.ds-input--error:focus-within { background-colo=
r: var(--ds-input-focus-color,--ds-input-color-focus); }

.ds-input.ds-input--filled.ds-input--error, .ds-input.ds-input--bordered.ds=
-input--error { background-color: rgba(var(--ds-rgb-error)/.06); box-shadow=
: inset 0 0 0 2px var(--ds-input-focus-border-color,rgb(var(--ds-rgb-error)=
)); }

.ds-input.ds-input--filled { background-color: var(--ds-input-color); }

.ds-input.ds-input--bordered { box-shadow: inset 0 0 0 1px rgb(var(--ds-rgb=
-separator-strong)); }

.ds-icon-button { --ds-icon-button-text-color: rgb(var(--ds-rgb-label-2)); =
--ds-icon-button-outline-color: rgb(var(--ds-rgb-primary)); --ds-icon-butto=
n-size: 18px; --ds-icon-button-background-inset: -4px; width: var(--ds-icon=
-button-size); height: var(--ds-icon-button-size); color: var(--ds-icon-but=
ton-text-color); cursor: pointer; justify-content: center; align-items: cen=
ter; display: flex; position: relative; }

.ds-icon-button svg { height: var(--ds-icon-button-size); width: var(--ds-i=
con-button-size); fill: currentcolor; position: relative; }

.ds-icon-button:hover::before { background-color: var(--ds-icon-button-hove=
r-color,rgb(var(--ds-rgb-hover))); }

.ds-icon-button::before { transition: background-color var(--ds-transition-=
duration)var(--ds-ease-in-out); content: ""; background-color: rgba(var(--d=
s-rgba-transparent)); top: var(--ds-icon-button-background-inset); right: v=
ar(--ds-icon-button-background-inset); bottom: var(--ds-icon-button-backgro=
und-inset); left: var(--ds-icon-button-background-inset); border-radius: 8p=
x; display: block; position: absolute; }

.ds-icon-button { outline: none; }

.ds-icon-button::after { transition: box-shadow var(--ds-transition-duratio=
n)var(--ds-ease-in-out); content: ""; top: calc(var(--ds-icon-button-backgr=
ound-inset) - 2px); right: calc(var(--ds-icon-button-background-inset) - 2p=
x); bottom: calc(var(--ds-icon-button-background-inset) - 2px); left: calc(=
var(--ds-icon-button-background-inset) - 2px); pointer-events: none; border=
-radius: 10px; display: block; position: absolute; }

.ds-icon-button:focus-visible::after { box-shadow: 0 0 0 2px var(--ds-icon-=
button-outline-color); }

.ds-icon { line-height: 0; display: inline-flex; }

.ds-icon > svg { width: inherit; height: inherit; }

.ds-a { --a-border-radius: 6px; --a-box-shadow-color-focus: rgb(var(--ds-rg=
b-link)); }

.ds-a.ds-a--link { --a-text-color: rgb(var(--ds-rgb-link)); --a-box-shadow-=
color-focus: rgb(var(--ds-rgb-link)); }

.ds-a.ds-a--primary { --a-text-color: rgb(var(--ds-rgb-primary)); --a-box-s=
hadow-color-focus: rgb(var(--ds-rgb-primary)); }

.ds-a.ds-a--secondary { --a-text-color: var(--a-text-color-secondary); --a-=
box-shadow-color-focus: rgb(var(--ds-rgb-link)); }

.ds-a:focus { outline: none; }

.ds-a:focus-visible { box-shadow: 0 0 0 2px var(--a-box-shadow-color-focus)=
; }

.ds-a { cursor: pointer; transition: color var(--ds-transition-duration)var=
(--ds-ease-in-out),box-shadow var(--ds-transition-duration)var(--ds-ease-in=
-out); border-radius: var(--a-border-radius); color: var(--a-text-color); b=
order-left: 3px solid rgba(var(--ds-rgba-transparent)); border-right: 3px s=
olid rgba(var(--ds-rgba-transparent)); border-top: 2px solid rgba(var(--ds-=
rgba-transparent)); border-bottom: 2px solid rgba(var(--ds-rgba-transparent=
)); margin: -2px -3px; text-decoration: none; position: relative; }

.ds-fade-in-enter { opacity: 0; }

.ds-fade-in-active { opacity: 1; transition: opacity var(--ds-ease-in)var(-=
-ds-transition-duration-fast); }

.ds-fade-in-exit { opacity: 1; }

.ds-fade-in-exit-active { opacity: 0; transition: opacity var(--ds-ease-out=
)var(--ds-transition-duration-fast); }

.ds-modal-wrapper { padding: 16px 0px; display: flex; position: fixed; inse=
t: 0px; overflow: auto; }

.ds-modal-wrapper.ds-modal-wrapper--hide { pointer-events: none; }

.ds-modal-wrapper .ds-modal { box-sizing: border-box; margin: auto; positio=
n: relative; }

.ds-modal-overlay { --ds-modal-overlay-opacity: .24; background-color: rgba=
(0,0,0,var(--ds-modal-overlay-opacity)); pointer-events: none; position: fi=
xed; inset: 0px; }

.ds-modal-content { font-size: var(--ds-font-size-m); line-height: var(--ds=
-line-height-m); color: var(--ds-modal-content-text-color,rgb(var(--ds-rgb-=
label-1))); box-sizing: border-box; background-color: var(--ds-modal-conten=
t-color,rgb(var(--ds-rgb-elevated))); border-radius: 18px; outline: none; w=
idth: 525px; max-width: calc(-32px + 100vw); padding: 18px 21px 21px; box-s=
hadow: rgba(0, 0, 0, 0.12) 0px 8px 24px; }

.ds-modal-content.ds-modal-content--dialog { width: 420px; }

.ds-modal-content__header-wrapper { color: rgb(var(--ds-rgb-label-1)); just=
ify-content: space-between; margin-bottom: 14px; display: flex; }

.ds-modal-content__header-wrapper .ds-icon-button { margin-top: 4px; }

.ds-modal-content__title { font-weight: var(--ds-font-weight-strong); flex:=
 1 1 0%; min-height: 24px; font-size: 18px; line-height: 24px; }

.ds-modal-content__footer { margin-top: 21px; display: block; }

.ds-modal-content__button-group { justify-content: flex-end; display: flex;=
 }

.ds-modal-content__button-group > :not(:last-child) { margin-right: 14px; }

body.dark .ds-skeleton { --color-start: rgba(255,255,255,.12); --color-end:=
 rgba(255,255,255,.18); }

.ds-skeleton { --color-start: #eee; --color-end: #ddd; max-width: 100%; tra=
nsition: --color-start .3s var(--ds-ease-in-out),--color-end .3s var(--ds-e=
ase-in-out),background-color .3s var(--ds-ease-in-out); background-color: v=
ar(--color-start); user-select: none; animation: 2s cubic-bezier(0.36, 0, 0=
.64, 1) 0s infinite normal none running ds-skeleton-loading; }

.ds-skeleton * { visibility: hidden; }

.ds-skeleton.ds-skeleton--text { border-radius: 4px; }

.ds-skeleton.ds-skeleton--text.ds-skeleton--has-children { width: fit-conte=
nt; }

.ds-skeleton.ds-skeleton--text > span { visibility: hidden; }

.ds-skeleton.ds-skeleton--circle { border-radius: 4096px; }

.ds-skeleton.ds-skeleton--rect { border-radius: 10px; }

.ds-skeleton.ds-skeleton--sharp { border-radius: 0px; }

.ds-skeleton.ds-skeleton--circle.ds-skeleton--xs, .ds-skeleton.ds-skeleton-=
-rect.ds-skeleton--xs { height: var(--ds-input-height-xs); }

.ds-skeleton.ds-skeleton--circle.ds-skeleton--s, .ds-skeleton.ds-skeleton--=
rect.ds-skeleton--s { height: var(--ds-input-height-s); }

.ds-skeleton.ds-skeleton--circle.ds-skeleton--m, .ds-skeleton.ds-skeleton--=
rect.ds-skeleton--m { height: var(--ds-input-height-m); }

@keyframes ds-skeleton-loading {=20
  0% { background: var(--color-start); }
  40% { background: var(--color-end); }
  80% { background: var(--color-start); }
  100% { background: var(--color-start); }
}

.ds-fade-in-zoom-in-expand-enter { opacity: 0; transform: scale(0.8); }

.ds-fade-in-zoom-in-expand-enter-active { opacity: 1; transition: max-heigh=
t var(--ds-ease-in)var(--ds-transition-duration-fast),opacity var(--ds-ease=
-in)var(--ds-transition-duration-fast),transform var(--ds-ease-in)var(--ds-=
transition-duration-fast); transform: scale(1); }

.ds-fade-in-zoom-in-expand-exit { opacity: 1; transform: scale(1); }

.ds-fade-in-zoom-in-expand-exit-active { opacity: 0; transition: max-height=
 var(--ds-ease-out)var(--ds-transition-duration-fast),opacity var(--ds-ease=
-out)var(--ds-transition-duration-fast),transform var(--ds-ease-out)var(--d=
s-transition-duration-fast); transform: scale(0.8); }

.ds-fade-in-zoom-in-expand-top { align-items: flex-start; display: flex; }

.ds-fade-in-zoom-in-expand-center { align-items: center; display: flex; }

.ds-toast { --ds-toast-color: var(--ds-toast-custom-color,#404045); --ds-to=
ast-text-color: var(--ds-toast-custom-text-color,#f5f5f5); --ds-toast-borde=
r-radius: 12px; --ds-toast-font-size: var(--ds-toast-custom-font-size,14px)=
; --ds-toast-line-height: 22px; --ds-toast-padding: 12px 18px; --ds-toast-i=
con-size: 16px; --ds-toast-border: var(--ds-toast-cutsom-border,none); }

.ds-toast.ds-toast--warning { --ds-toast-icon-color: rgb(var(--ds-rgb-warni=
ng)); }

.ds-toast.ds-toast--success { --ds-toast-icon-color: rgb(var(--ds-rgb-succe=
ss)); }

.ds-toast.ds-toast--error { --ds-toast-icon-color: rgb(var(--ds-rgb-error))=
; }

.ds-toast-container { z-index: 2000; pointer-events: none; --ds-toast-top-d=
istance: 40px; position: fixed; right: 0px; }

.ds-toast-container.ds-toast-container--top { top: var(--ds-toast-top-dista=
nce); }

.ds-toast-container.ds-toast-container--center { width: 100%; top: 50%; lef=
t: 50%; transform: translateY(-50%) translate(-50%); }

.ds-toast-container.ds-toast-container--center .ds-toast-animation { margin=
-top: 16px; }

.ds-toast-container .ds-toast-animation { width: fit-content; margin-bottom=
: 16px; margin-left: auto; margin-right: auto; }

@supports (top:env(safe-area-inset-top)) {
  .ds-toast-container.ds-toast-container--top { top: calc(var(--ds-toast-to=
p-distance) + env(safe-area-inset-top)); bottom: calc(var(--ds-toast-top-di=
stance) + env(safe-area-inset-bottom)); left: calc(var(--ds-toast-top-dista=
nce) + env(safe-area-inset-left)); right: calc(var(--ds-toast-top-distance)=
 + env(safe-area-inset-right)); }
}

.ds-toast { text-align: center; word-break: break-word; box-sizing: border-=
box; pointer-events: all; background-color: var(--ds-toast-color); border-r=
adius: var(--ds-toast-border-radius); border: var(--ds-toast-border); max-w=
idth: min(-28px + 100vw, 480px); padding: var(--ds-toast-padding); font-siz=
e: var(--ds-toast-font-size); color: var(--ds-toast-text-color); line-heigh=
t: var(--ds-toast-line-height); box-shadow: var(--ds-toast-custom-box-shado=
w,0px 0px 4px 2px rgba(0,0,0,.04),0px 4px 16px 0px rgba(0,0,0,.1)); align-i=
tems: center; display: flex; }

.ds-toast .ds-toast__icon { width: var(--ds-toast-icon-size); height: var(-=
-ds-toast-icon-size); font-size: var(--ds-toast-icon-size); color: var(--ds=
-toast-icon-color); margin-bottom: auto; margin-right: 7px; display: flex; =
position: relative; top: 3px; }

.ds-toast .ds-toast__icon svg { width: var(--ds-toast-icon-size); height: v=
ar(--ds-toast-icon-size); }

.ds-toast .ds-toast__content { white-space: pre-wrap; text-align: left; }

.ds-loading { width: 1em; height: 1em; color: inherit; display: inline-flex=
; }

.ds-loading svg { will-change: transform; width: 1em; height: 1em; animatio=
n: 0.6s linear 0s infinite normal none running ds-loading; }

@keyframes ds-loading {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.ds-button { --ds-rgb-error-hover: 218 54 54; }

.ds-button:not(.ds-button--text).ds-button--l { --button-height: var(--ds-i=
nput-height-l); --button-font-size: var(--ds-font-size-m); --button-line-he=
ight: var(--ds-line-height-m); --button-border-radius: 10px; --button-paddi=
ng: 0 14px; --button-icon-size: 18px; --button-icon-margin: 0 8px 0 0; }

.ds-button:not(.ds-button--text).ds-button--m { --button-height: var(--ds-i=
nput-height-m); --button-font-size: var(--ds-font-size-m); --button-line-he=
ight: var(--ds-line-height-m); --button-border-radius: 10px; --button-paddi=
ng: 0 14px; --button-icon-size: 18px; --button-icon-margin: 0 8px 0 0; }

.ds-button:not(.ds-button--text).ds-button--s { --button-height: var(--ds-i=
nput-height-s); --button-font-size: var(--ds-font-size-s); --button-line-he=
ight: var(--ds-line-height-s); --button-border-radius: 10px; --button-paddi=
ng: 0 14px; --button-icon-size: 18px; --button-icon-margin: 0 8px 0 0; }

.ds-button:not(.ds-button--text).ds-button--xs { --button-height: var(--ds-=
input-height-xs); --button-font-size: var(--ds-font-size-xs); --button-line=
-height: var(--ds-line-height-xs); --button-border-radius: 8px; --button-pa=
dding: 0 10px; --button-icon-size: 18px; --button-icon-margin: 0 8px 0 0; }

.ds-button:not(.ds-button--text).ds-button--capsule, .ds-button:not(.ds-but=
ton--text).ds-button--circle { --button-border-radius: 4096px; }

.ds-button.ds-button--text.ds-button--l { --button-height: unset; --button-=
font-size: var(--ds-font-size-l); --button-line-height: var(--ds-line-heigh=
t-l); --button-border-radius: 8px; --button-padding: 0; --button-icon-size:=
 18px; --button-icon-margin: 0 4px 0 0; }

.ds-button.ds-button--text.ds-button--m { --button-height: unset; --button-=
font-size: var(--ds-font-size-m); --button-line-height: var(--ds-line-heigh=
t-m); --button-border-radius: 8px; --button-padding: 0; --button-icon-size:=
 18px; --button-icon-margin: 0 4px 0 0; }

.ds-button.ds-button--text.ds-button--s { --button-height: unset; --button-=
font-size: var(--ds-font-size-s); --button-line-height: var(--ds-line-heigh=
t-s); --button-border-radius: 8px; --button-padding: 0; --button-icon-size:=
 18px; --button-icon-margin: 0 2px 0 0; }

.ds-button.ds-button--text.ds-button--xs { --button-height: unset; --button=
-font-size: var(--ds-font-size-xs); --button-line-height: var(--ds-line-hei=
ght-xs); --button-border-radius: 6px; --button-padding: 0; --button-icon-si=
ze: 18px; --button-icon-margin: 0 2px 0 0; }

.ds-button.ds-button--text.ds-button--capsule { --button-border-radius: 409=
6px; }

.ds-button { --ds-button-color: transparent; }

.ds-button.ds-button--filled.ds-button--primary { --ds-button-color: rgb(va=
r(--ds-rgb-primary)); }

.ds-button.ds-button--filled.ds-button--error { --ds-button-color: rgb(var(=
--ds-rgb-error)); }

.ds-button.ds-button--filled.ds-button--error:hover { --ds-button-color: rg=
b(var(--ds-rgb-error-hover,var(--ds-rgb-error))); }

.ds-button.ds-button--filled.ds-button--secondary { background-color: var(-=
-ds-secondary-button-color,var(--ds-button-color,rgb(var(--ds-rgb-input))))=
; }

.ds-button.ds-button--filled.ds-button--secondary:hover { background-color:=
 var(--ds-secondary-button-hover-color,rgb(var(--ds-rgb-hover))); }

.ds-button.ds-button--filled.ds-button--success { --ds-button-color: rgb(va=
r(--ds-rgb-success)); }

.ds-button.ds-button--filled.ds-button--info { --ds-button-color: rgb(var(-=
-ds-rgb-info)); }

.ds-button.ds-button--filled.ds-button--warning { --ds-button-color: rgb(va=
r(--ds-rgb-warning)); }

.ds-button.ds-button--error { --button-ring-color: rgb(var(--ds-rgb-error))=
; }

.ds-button.ds-button--success { --button-ring-color: rgb(var(--ds-rgb-succe=
ss)); }

.ds-button.ds-button--info { --button-ring-color: rgb(var(--ds-rgb-info)); =
}

.ds-button.ds-button--warning { --button-ring-color: rgb(var(--ds-rgb-warni=
ng)); }

.ds-button { --button-ring-color: rgb(var(--ds-rgb-primary)); }

.ds-button.ds-button--filled.ds-button--primary { --button-text-color: rgb(=
var(--ds-rgb-primary-foreground)); --button-icon-color: rgb(var(--ds-rgb-pr=
imary-foreground)); }

.ds-button.ds-button--filled.ds-button--error { --button-text-color: white;=
 --button-icon-color: white; }

.ds-button.ds-button--filled.ds-button--secondary { --button-text-color: rg=
b(var(--ds-rgb-label-1)); --button-icon-color: rgb(var(--ds-rgb-label-1)); =
}

.ds-button.ds-button--filled.ds-button--success, .ds-button.ds-button--fill=
ed.ds-button--info, .ds-button.ds-button--filled.ds-button--warning { --but=
ton-text-color: white; --button-icon-color: white; }

.ds-button.ds-button--filled:hover { color: var(--ds-button-hover-text-colo=
r,var(--button-text-color)); background-color: var(--ds-button-hover-color,=
var(--ds-button-color,rgb(var(--ds-rgb-hover)))); }

.ds-button.ds-button--bordered.ds-button--secondary { --button-text-color: =
var(--ds-bordered-secondary-button-color,rgb(var(--ds-rgb-label-1))); --but=
ton-icon-color: rgb(var(--ds-rgb-label-2)); --button-border-color: rgb(var(=
--ds-rgb-separator-strong)); }

.ds-button.ds-button--bordered:hover { background-color: var(--ds-button-bo=
rdered-hover-color,rgb(var(--ds-rgb-hover))); }

.ds-button.ds-button--text.ds-button--primary { --button-text-color: var(--=
ds-text-primary-button-color,rgb(var(--ds-rgb-primary))); --button-icon-col=
or: var(--ds-text-primary-button-color,rgb(var(--ds-rgb-primary))); }

.ds-button.ds-button--text.ds-button--error { --button-text-color: rgb(var(=
--ds-rgb-error)); --button-icon-color: rgb(var(--ds-rgb-error)); }

.ds-button.ds-button--text.ds-button--success { --button-text-color: rgb(va=
r(--ds-rgb-success)); --button-icon-color: rgb(var(--ds-rgb-success)); }

.ds-button.ds-button--text.ds-button--info { --button-text-color: rgb(var(-=
-ds-rgb-info)); --button-icon-color: rgb(var(--ds-rgb-info)); }

.ds-button.ds-button--text.ds-button--warning { --button-text-color: rgb(va=
r(--ds-rgb-warning)); --button-icon-color: rgb(var(--ds-rgb-warning)); }

.ds-button.ds-button--text:hover::after { z-index: -1; }

.ds-button { height: var(--button-height); line-height: var(--button-line-h=
eight); font-size: var(--button-font-size); border-radius: var(--button-bor=
der-radius); padding: var(--button-padding); user-select: none; cursor: poi=
nter; white-space: nowrap; box-sizing: border-box; transition: opacity var(=
--ds-transition-duration)var(--ds-ease-in-out),background-color var(--ds-tr=
ansition-duration)var(--ds-ease-in-out); font-variant-numeric: tabular-nums=
; outline: none; align-items: center; text-decoration: none; display: inlin=
e-flex; position: relative; }

.ds-button > .ds-button__icon { line-height: 0; font-size: var(--button-ico=
n-size); width: var(--button-icon-size); height: var(--button-icon-size); m=
argin: var(--button-icon-margin); flex-grow: 0; flex-shrink: 0; justify-con=
tent: center; align-items: center; display: flex; }

.ds-button > .ds-button__icon.ds-button__icon--last-child { margin-right: 0=
px; }

.ds-button.ds-button--circle, .ds-button.ds-button--square { justify-conten=
t: center; align-items: center; }

.ds-button > .ds-button__icon { color: var(--button-icon-color); }

.ds-button { background-color: var(--ds-button-color); }

.ds-button.ds-button--filled { color: var(--button-text-color); }

.ds-button.ds-button--bordered.ds-button--secondary { color: var(--button-t=
ext-color); box-shadow: inset 0 0 0 1px var(--button-border-color); }

.ds-button.ds-button--text, .ds-button.ds-button--borderless { color: var(-=
-button-text-color); }

.ds-button.ds-button--borderless:not(.ds-button--disabled):hover { backgrou=
nd-color: var(--ds-button-hover-color,rgb(var(--ds-rgb-hover))); }

.ds-button::after { pointer-events: none; content: ""; border-radius: calc(=
var(--button-border-radius) + 2px); transition: box-shadow var(--ds-transit=
ion-duration)var(--ds-ease-in-out); position: absolute; inset: -2px; }

.ds-button:focus-visible::after { box-shadow: 0 0 0 2px var(--button-ring-c=
olor); }

.ds-button.ds-button--block { justify-content: center; display: flex; }

.ds-button.ds-button--disabled { opacity: 0.45; cursor: not-allowed; }

.ds-button:not(.ds-button--text).ds-button--circle, .ds-button:not(.ds-butt=
on--text).ds-button--square { width: var(--button-height); }

.ds-button.ds-button--text.ds-button--l::after { inset: -4px -8px; }

.ds-button.ds-button--text.ds-button--m::after, .ds-button.ds-button--text.=
ds-button--s::after { border-radius: 12px; inset: -4px -8px; }

.ds-button.ds-button--text.ds-button--xs::after, .ds-button.ds-button--text=
.ds-button--square::after { inset: -4px; }

.ds-sign-in-form__form-footer { justify-content: space-between; margin-top:=
 12px; font-weight: 500; display: flex; }

.ds-sign-up-form__tabs { font-weight: var(--ds-font-weight-strong); color: =
rgb(var(--ds-rgb-label-2)); justify-content: center; margin: 0px auto 32px;=
 }

.ds-sign-up-form__tabs .ds-tab:not(.ds-tab--active) { color: var(--dsr-text=
-3,#a3a3a3); font-size: 14px; font-weight: 500; }

.ds-sign-up-form__footer-placeholder { height: 10px; }

.ds-sign-up-form__tips { text-align: left; color: var(--dsr-text-3,#a3a3a3)=
; margin-bottom: 8px; padding: 0px 2px; font-size: 12px; line-height: 140%;=
 }

.ds-sign-up-form__register-button { margin-top: auto; font-weight: 500; }

.ds-sign-up-form__icon { justify-content: center; align-items: center; marg=
in: auto auto 40px; line-height: 0; display: flex; }

.ds-sign-up-form__icon > svg { height: 44px; }

.ds-sign-up-form__description { color: var(--dsr-text-3,#a3a3a3); margin-bo=
ttom: 8px; font-size: 12px; line-height: 140%; }

.ds-sign-up-form__form-footer { justify-content: center; margin-top: 16px; =
font-weight: 500; display: flex; }

.ds-sign-in-with-wechat-block { box-sizing: border-box; background: rgba(0,=
 0, 0, 0.02); border-radius: 10px; flex-direction: column; justify-content:=
 center; height: 100%; padding: 24px; display: flex; }

[data-ds-dark-theme] .ds-sign-in-with-wechat-block { background: rgba(255, =
255, 255, 0.03); }

.ds-sign-in-with-wechat-block__wrapper { justify-content: center; align-ite=
ms: center; padding: 20px; display: flex; }

.ds-sign-in-with-wechat-block__wrapper iframe { border-radius: 8px; width: =
160px; height: 160px; box-shadow: rgba(0, 0, 0, 0.2) 0px 0px 1px, rgba(0, 0=
, 0, 0.02) 0px 0px 4px, rgba(0, 0, 0, 0.06) 0px 12px 36px; }

.ds-sign-in-with-wechat-block__description { color: var(--dsr-text-1,#26262=
6); font-size: 14px; font-weight: 400; line-height: var(--ds-line-height-s)=
; text-align: center; flex-flow: wrap; justify-content: center; align-items=
: center; display: flex; }

.ds-sign-in-with-wechat-block__logo { color: rgb(0, 188, 12); width: 21px; =
height: 21px; }

.ds-tabs { font-size: var(--ds-font-size-m); line-height: var(--ds-line-hei=
ght-m); height: 32px; display: flex; }

.ds-tab { margin-right: var(--ds-tab-gap); cursor: pointer; align-items: ce=
nter; height: 100%; display: flex; position: relative; }

.ds-tab:last-child { margin-right: 0px; }

.ds-tab.ds-tab--active { color: var(--ds-tabs-active-color,rgb(var(--ds-rgb=
-primary))); }

.ds-tab .ds-tab__line { background-color: var(--ds-tabs-active-color,rgb(va=
r(--ds-rgb-primary))); border-top-left-radius: 3px; border-top-right-radius=
: 3px; height: 3px; position: absolute; bottom: 0px; left: -3px; right: -3p=
x; }

.ds-tab .ds-tab__content { position: relative; }

.ds-tab .ds-tab__content::after { content: ""; transition: box-shadow var(-=
-ds-transition-duration)var(--ds-ease-in-out); border-radius: 8px; position=
: absolute; inset: -4px; }

.ds-tab:focus { outline: none; }

.ds-tab:focus-visible .ds-tab__content::after { box-shadow: 0 0 0 2px rgb(v=
ar(--ds-rgb-primary)); }

.ds-divider { justify-content: center; align-items: center; margin: 8px 0px=
; display: flex; }

.ds-divider__left, .ds-divider__right { background-color: rgb(var(--ds-rgb-=
separator)); flex-grow: 1; height: 1px; }

.ds-divider__content { font-size: var(--ds-font-size-s); line-height: var(-=
-ds-line-height-s); color: rgb(var(--ds-rgb-label-3)); flex-shrink: 0; marg=
in: 0px 10px; }

.ds-divider--strong { font-weight: var(--ds-font-weight-strong); }

.ds-divider--strong .ds-divider__content { color: rgb(var(--ds-rgb-primary)=
); font-size: var(--ds-font-size-s); }

.ds-divider--strong .ds-divider__left, .ds-divider--strong .ds-divider__rig=
ht { background: rgb(var(--ds-rgb-primary)); border-color: rgb(var(--ds-rgb=
-primary)); height: 3px; transform: scaleY(0.5); }

.ds-forgot-password-form__icon { justify-content: center; margin: auto auto=
 40px; line-height: 0; display: flex; }

.ds-forgot-password-form__icon > svg { height: 44px; }

.ds-forgot-password-form__title { text-align: center; color: var(--dsr-text=
-0,#000); margin-bottom: 8px; font-size: 18px; font-weight: 500; line-heigh=
t: 25px; }

.ds-forgot-password-form__loading-wrapper { color: rgb(var(--ds-rgb-primary=
)); justify-content: center; align-items: center; padding: 28px 0px; font-s=
ize: 28px; display: flex; }

.ds-forgot-password-form__form-footer { justify-content: center; margin-top=
: 16px; font-weight: 500; display: flex; }

.ds-forgot-password-form__description { color: var(--dsr-text-3,#a3a3a3); t=
ext-align: center; margin-bottom: 24px; font-size: 14px; line-height: 20px;=
 }

.ds-enhanced-text__p { margin: 0px 0px 14px; }

.ds-enhanced-text__p:last-child { margin: 0px; }

.ds-enhanced-text__bold { font-weight: 700; }

.ds-authorized-container__loading { color: rgb(var(--ds-rgb-primary)); just=
ify-content: center; align-items: center; font-size: 21px; display: flex; }

.ds-sider__policies-footer { color: rgb(var(--ds-rgb-label-2)); flex-wrap: =
wrap; align-items: center; padding: 0px 12px; font-size: 14px; line-height:=
 22px; display: flex; }

.ds-banned-container__wrapper { font-size: var(--ds-font-size-m); color: rg=
b(var(--ds-rgb-label-1)); flex-direction: column; justify-content: center; =
align-items: center; display: flex; }

.ds-banned-container__logo, .ds-banned-container__slogan { line-height: var=
(--ds-line-height-m); text-align: center; margin-bottom: 20px; padding: 0px=
 20px; }

@media not all and (min-width: 640px) {
  .ds-banned-container__logo svg { width: 70%; }
}

.ds-auth-footer { font-size: var(--ds-font-size-sp); line-height: var(--ds-=
line-height-sp); flex-wrap: wrap; justify-content: center; align-items: cen=
ter; width: 100%; display: flex; }

.ds-text.ds-text--block { display: block; }

.ds-text.ds-text--monospace { font-family: var(--ds-font-family-code); }

.ds-text.ds-text--fxs { font-size: var(--ds-font-size-xs); }

.ds-text.ds-text--fxsp { font-size: var(--ds-font-size-xsp); }

.ds-text.ds-text--fs { font-size: var(--ds-font-size-s); }

.ds-text.ds-text--fsp { font-size: var(--ds-font-size-sp); }

.ds-text.ds-text--fm { font-size: var(--ds-font-size-m); }

.ds-text.ds-text--lxs { line-height: var(--ds-line-height-xs); }

.ds-text.ds-text--lxsp { line-height: var(--ds-line-height-xsp); }

.ds-text.ds-text--ls { line-height: var(--ds-line-height-s); }

.ds-text.ds-text--lsp { line-height: var(--ds-line-height-sp); }

.ds-text.ds-text--lm { line-height: var(--ds-line-height-m); }

.ds-text.ds-text--label1 { color: rgb(var(--ds-rgb-label-1)); }

.ds-text.ds-text--label2 { color: rgb(var(--ds-rgb-label-2)); }

.ds-text.ds-text--label3 { color: rgb(var(--ds-rgb-label-3)); }

.ds-mobile-verification-form__icon { justify-content: center; margin: auto =
auto 40px; line-height: 0; display: flex; }

.ds-mobile-verification-form__icon > svg { height: 44px; }

.ds-mobile-verification-form__title { text-align: center; color: var(--dsr-=
text-0,#000); margin-bottom: 8px; font-size: 18px; font-weight: 500; line-h=
eight: 25px; }

.ds-mobile-verification-form__loading-wrapper { color: rgb(var(--ds-rgb-pri=
mary)); justify-content: center; align-items: center; padding: 28px 0px; fo=
nt-size: 28px; display: flex; }

.ds-mobile-verification-form__description { color: var(--dsr-text-3,#a3a3a3=
); text-align: center; margin-bottom: 24px; font-size: 14px; line-height: 2=
0px; }

.ds-mobile-verification-form__bind-button { margin-top: auto; font-weight: =
500; }

.ds-banner { --ds-banner-font-size: var(--ds-font-size-m); --ds-banner-line=
-height: var(--ds-line-height-m); --ds-banner-text-color: rgb(var(--ds-rgb-=
primary-foreground)); --ds-banner-padding: 8px 14px; --ds-banner-close-icon=
-color: rgb(var(--ds-rgb-primary-foreground)); }

.ds-banner.ds-banner--info { --ds-banner-color: rgb(var(--ds-rgb-info)); }

.ds-banner.ds-banner--warning { --ds-banner-color: rgb(var(--ds-rgb-warning=
)); }

.ds-banner.ds-banner--error { --ds-banner-color: rgb(var(--ds-rgb-error)); =
}

.ds-banner { background-color: var(--ds-banner-color); font-size: var(--ds-=
banner-font-size); line-height: var(--ds-banner-line-height); color: var(--=
ds-banner-text-color); padding: var(--ds-banner-padding); display: flex; }

.ds-banner__content { text-align: center; text-wrap: balance; flex: 1 1 0%;=
 padding-right: 14px; }

.ds-banner__close-wrapper { min-height: var(--ds-banner-line-height); width=
: 21px; height: 21px; color: var(--ds-banner-close-icon-color); flex-grow: =
0; flex-shrink: 0; align-items: center; margin-left: 8px; display: flex; }

.ds-notification-container { z-index: 1500; pointer-events: none; flex-dire=
ction: column; align-items: center; display: flex; position: fixed; bottom:=
 16px; right: 16px; }

.ds-notification-container .ds-notification { background-color: rgb(var(--d=
s-rgb-elevated)); pointer-events: all; width: 315px; max-width: calc(-32px =
+ 100vw); color: rgb(var(--ds-rgb-label-1)); font-size: 14px; line-height: =
var(--ds-line-height-m); border-radius: 10px; flex-wrap: nowrap; margin-top=
: 14px; padding: 14px; display: flex; position: relative; box-shadow: rgba(=
0, 0, 0, 0.12) 0px 3px 6px -4px, rgba(0, 0, 0, 0.08) 0px 6px 16px, rgba(0, =
0, 0, 0.05) 0px 9px 28px 8px; }

.ds-notification-container .ds-notification .ds-notification__main { flex-f=
low: column; flex-grow: 1; display: flex; }

.ds-notification-container .ds-notification .ds-notification__content { col=
or: rgb(var(--ds-rgb-label-2)); font-size: var(--ds-font-size-m); line-heig=
ht: var(--ds-line-height-m); }

.ds-notification-container .ds-notification .ds-notification__title { font-=
weight: var(--ds-font-weight-strong); flex-grow: 1; min-height: 21px; margi=
n-bottom: 8px; font-size: 16px; line-height: 21px; }

.ds-notification-container .ds-notification .ds-notification__footer { font=
-size: var(--ds-font-size-m); line-height: var(--ds-line-height-m); margin-=
top: 8px; }

.ds-notification-container .ds-notification .ds-notification__close-wrapper=
 { height: 21px; color: rgb(var(--ds-rgb-label-2)); flex-grow: 0; flex-shri=
nk: 0; margin-left: 8px; }

.ds-notification-container .ds-notification .ds-notification__icon-wrapper =
{ flex-grow: 0; flex-shrink: 0; width: 21px; margin-right: 10px; }

.ds-notification-container .ds-notification .ds-notification__icon { justif=
y-content: center; align-items: center; width: 21px; height: 21px; margin-r=
ight: 10px; font-size: 21px; display: flex; }

.ds-notification-container .ds-notification .ds-notification__icon svg { fl=
ex-shrink: 0; width: 24px; height: 24px; }

.ds-notification-container .ds-notification .ds-notification__icon--warning=
 { color: rgb(249, 115, 22); }

.ds-notification-container .ds-notification .ds-notification__icon--success=
 { color: rgb(34, 197, 94); }

.ds-notification-container .ds-notification .ds-notification__icon--error {=
 color: rgb(var(--ds-rgb-error)); }

.c994dda2 { box-sizing: border-box; flex-direction: column; align-items: st=
retch; min-height: 100vh; display: flex; }

@supports (top:env(safe-area-inset-top)) {
  .c994dda2 { padding-top: env(safe-area-inset-top); padding-left: env(safe=
-area-inset-left); padding-right: env(safe-area-inset-right); padding-botto=
m: env(safe-area-inset-bottom); }
}

._47c279e { flex-shrink: 0; }

._99ad066 { flex-direction: column; flex-grow: 1; flex-shrink: 0; justify-c=
ontent: safe center; align-items: safe center; padding-bottom: 3%; display:=
 flex; }

._5178cc4 { justify-content: center; padding: 32px 0px 20px; display: flex;=
 }

@media not all and (min-width: 768px) {
  ._5178cc4 { padding: 32px 18px 20px; }
}

@media (max-width: 440px) {
  ._99ad066 { justify-content: flex-start; padding-top: 8px; }
}

.e2394955 { justify-content: center; align-items: center; margin: auto auto=
 32px; line-height: 0; display: flex; }

.e2394955 > svg { height: 44px; }

.a02c1715 { justify-content: center; align-items: center; display: flex; po=
sition: fixed; inset: 0px; }

.e32c2b1a { flex-direction: column; justify-content: center; align-items: c=
enter; max-width: calc(-32px + 100vw); display: flex; }

._1270bde { font-size: 32px; font-weight: var(--ds-font-weight-strong); col=
or: rgb(var(--ds-rgb-label-1)); margin-bottom: 21px; line-height: 46px; }

._8e693ef { display: flex; }

._8e693ef > :not(:last-child) { margin-right: 16px; }

._8cf2d53 { white-space: pre-wrap; color: rgb(var(--ds-rgb-label-2)); width=
: 600px; max-width: calc(-32px + 100vw); font-size: 12px; line-height: 18px=
; }

.ds-floating-position-wrapper { width: max-content; position: absolute; top=
: 0px; left: 0px; }

.ds-tooltip { --tooltip-text-color: #fff; --tooltip-color: #222; --tooltip-=
box-shadow: 0 6px 16px 0 rgba(0,0,0,.08),0 3px 6px -4px rgba(0,0,0,.12),0 9=
px 28px 8px rgba(0,0,0,.05); }

.ds-tooltip.ds-tooltip--m { --tooltip-font-size: var(--ds-font-size-m); --t=
ooltip-line-height: var(--ds-line-height-m); --tooltip-padding: 6px 12px; -=
-tooltip-arrow-size: 8px; }

.ds-tooltip.ds-tooltip--s { --tooltip-font-size: var(--ds-font-size-s); --t=
ooltip-line-height: var(--ds-line-height-s); --tooltip-padding: 6px 10px; -=
-tooltip-arrow-size: 6px; }

body.dark .ds-tooltip { --tooltip-text-color: rgb(var(--ds-rgb-label-1)); -=
-tooltip-color: rgb(var(--ds-rgb-elevated)); --tooltip-box-shadow: 0 6px 16=
px 0 rgba(0,0,0,.08),0 3px 6px -4px rgba(0,0,0,.12),0 9px 28px 8px rgba(0,0=
,0,.05); }

.ds-tooltip.ds-tooltip--show-shadow, .ds-tooltip.ds-tooltip--show-shadow__a=
rrow, body.dark .ds-tooltip { box-shadow: var(--tooltip-box-shadow); }

.ds-tooltip { padding: var(--tooltip-padding); font-size: var(--tooltip-fon=
t-size); line-height: var(--tooltip-line-height); background-color: var(--t=
ooltip-color); color: var(--tooltip-text-color); max-width: var(--ds-toast-=
max-width,calc(100vw - 28px)); border-radius: 10px; position: relative; }

.ds-tooltip__arrow { color: var(--tooltip-color); z-index: 1; justify-conte=
nt: center; align-items: flex-start; display: flex; position: absolute; }

.ds-tooltip__arrow.ds-tooltip__arrow--sharp { width: calc(var(--tooltip-arr=
ow-size)*1.414); height: calc(var(--tooltip-arrow-size)*1.414); background-=
color: var(--tooltip-color); }

.ds-tooltip__arrow.ds-tooltip__arrow--soft { width: calc(var(--tooltip-arro=
w-size)*2); height: calc(var(--tooltip-arrow-size)*2); }

.ds-tooltip__soft-arrow { height: var(--tooltip-arrow-size); flex-shrink: 0=
; transform: translateY(100%); }

.ds-tooltip__arrow.ds-tooltip__arrow--sharp[ds-floating-placement^=3D"top"]=
 { top: 100%; transform: translateY(-50%) rotate(45deg); }

.ds-tooltip__arrow.ds-tooltip__arrow--sharp[ds-floating-placement^=3D"botto=
m"] { bottom: 100%; transform: translateY(50%) rotate(45deg); }

.ds-tooltip__arrow.ds-tooltip__arrow--sharp[ds-floating-placement^=3D"left"=
] { left: 100%; transform: translate(-50%) rotate(45deg); }

.ds-tooltip__arrow.ds-tooltip__arrow--sharp[ds-floating-placement^=3D"right=
"] { right: 100%; transform: translate(50%) rotate(45deg); }

.ds-tooltip__arrow.ds-tooltip__arrow--soft[ds-floating-placement^=3D"top"] =
{ top: 100%; transform: translateY(-50%); }

.ds-tooltip__arrow.ds-tooltip__arrow--soft[ds-floating-placement^=3D"bottom=
"] { bottom: 100%; transform: translateY(50%) rotate(180deg); }

.ds-tooltip__arrow.ds-tooltip__arrow--soft[ds-floating-placement^=3D"left"]=
 { left: 100%; transform: translate(-50%) rotate(270deg); }

.ds-tooltip__arrow.ds-tooltip__arrow--soft[ds-floating-placement^=3D"right"=
] { right: 100%; transform: translate(50%) rotate(90deg); }

.ds-flex { display: flex; }

._17e14c5 { align-items: center; gap: 2px; height: 28px; display: flex; }

.dd7e4fda { color: rgb(var(--ds-rgb-label-2)); user-select: none; white-spa=
ce: nowrap; font-variant-numeric: tabular-nums; font-size: 15px; font-weigh=
t: 500; line-height: 18px; }

[data-ds-dark-theme] .dd7e4fda { color: rgb(205, 212, 223); }

._74d6322 { flex-direction: column; display: flex; }

._74d6322 > * + * { margin-top: 16px; }

.ddff0051 { display: flex; }

.ddff0051 > :not(:last-child) { margin-right: 16px; }

.ddff0051 { justify-content: flex-end; }

[data-ds-dark-theme] ._74d6322 .ds-radio-button-group .ds-radio-button.ds-r=
adio-button--active { --radio-button-group-button-text-color-active: 255 25=
5 255; background-color: transparent; }

[data-ds-dark-theme] ._74d6322 .ds-radio-button-group .ds-radio-button.ds-r=
adio-button--active::after { box-shadow: rgb(77, 107, 254) 0px 0px 0px 2px;=
 }

.ds-radio-button-group.ds-radio-button-group--bordered1 { --radio-button-gr=
oup-button-color: transparent; --radio-button-group-button-box-shadow: inse=
t 0 0 0 1px rgb(var(--ds-rgb-separator-strong)); --radio-button-group-butto=
n-box-shadow-active: inset 0 0 0 1px rgb(var(--ds-rgb-primary)); --radio-bu=
tton-group-button-box-shadow-active-focus: inset 0 0 0 1px rgb(var(--ds-rgb=
-primary)); --radio-button-group-button-box-shadow-focus: inset 0 0 0 1px r=
gb(var(--ds-rgb-separator-strong)); --radio-button-group-button-color-activ=
e: rgb(var(--ds-rgb-primary)); --radio-button-group-button-text-color-activ=
e: rgb(var(--ds-rgb-primary-foreground)); --radio-button-group-button-outli=
ne-box-shadow-focus: 0 0 0 2px rgb(var(--ds-rgb-primary)); }

.ds-radio-button-group.ds-radio-button-group--bordered2 { --radio-button-gr=
oup-button-color: transparent; --radio-button-group-button-box-shadow: inse=
t 0 0 0 1px rgb(var(--ds-rgb-separator-strong)); --radio-button-group-butto=
n-box-shadow-active: inset 0 0 0 2px rgb(var(--ds-rgb-primary)); --radio-bu=
tton-group-button-box-shadow-active-focus: inset 0 0 0 2px rgb(var(--ds-rgb=
-primary)),0 0 0 1px rgb(var(--ds-rgb-primary)); --radio-button-group-butto=
n-box-shadow-focus: inset 0 0 0 1px rgba(var(--ds-rgb-primary)/.48),0 0 0 1=
px rgba(var(--ds-rgb-primary)/.48); --radio-button-group-button-color-activ=
e: transparent; --radio-button-group-button-text-color-active: rgb(var(--ds=
-rgb-primary)); --radio-button-group-button-outline-box-shadow-focus: none;=
 }

.ds-radio-button-group.ds-radio-button-group--bordered3 { --radio-button-gr=
oup-button-color: transparent; --radio-button-group-button-box-shadow: inse=
t 0 0 0 1px rgb(var(--ds-rgb-separator-strong)); --radio-button-group-butto=
n-box-shadow-active: inset 0 0 0 1px transparent; --radio-button-group-butt=
on-box-shadow-active-focus: inset 0 0 0 1px transparent; --radio-button-gro=
up-button-box-shadow-focus: inset 0 0 0 1px rgb(var(--ds-rgb-separator-stro=
ng)); --radio-button-group-button-color-active: rgba(var(--ds-rgb-primary)/=
.16); --radio-button-group-button-text-color-active: rgb(var(--ds-rgb-prima=
ry)); --radio-button-group-button-outline-box-shadow-focus: 0 0 0 2px rgb(v=
ar(--ds-rgb-primary)); }

.ds-radio-button-group.ds-radio-button-group--filled1 { --radio-button-grou=
p-button-color: rgb(var(--ds-rgb-input)); --radio-button-group-button-box-s=
hadow: none; --radio-button-group-button-box-shadow-active: none; --radio-b=
utton-group-button-box-shadow-active-focus: none; --radio-button-group-butt=
on-box-shadow-focus: none; --radio-button-group-button-color-active: rgba(v=
ar(--ds-rgb-primary)/.16); --radio-button-group-button-text-color-active: r=
gb(var(--ds-rgb-primary)); --radio-button-group-button-outline-box-shadow-f=
ocus: 0 0 0 2px rgb(var(--ds-rgb-primary)); }

.ds-radio-button-group.ds-radio-button-group--filled2 { --radio-button-grou=
p-button-color: rgb(var(--ds-rgb-input)); --radio-button-group-button-box-s=
hadow: none; --radio-button-group-button-box-shadow-active: none; --radio-b=
utton-group-button-box-shadow-active-focus: none; --radio-button-group-butt=
on-box-shadow-focus: none; --radio-button-group-button-color-active: rgb(va=
r(--ds-rgb-primary)); --radio-button-group-button-text-color-active: rgb(va=
r(--ds-rgb-primary-foreground)); --radio-button-group-button-outline-box-sh=
adow-focus: 0 0 0 2px rgb(var(--ds-rgb-primary)); }

.ds-radio-button-group { color: var(--radio-button-group-button-text-color)=
; transition: opacity var(--ds-transition-duration)var(--ds-ease-in-out); f=
lex-wrap: wrap; margin-bottom: -12px; display: flex; }

.ds-radio-button-group.ds-radio-button-group--disabled .ds-radio-button, .d=
s-radio-button-group.ds-radio-button-group--disabled .ds-radio-button__inpu=
t { cursor: not-allowed; }

.ds-radio-button-group.ds-radio-button-group--disabled .ds-radio-button { o=
pacity: 0.45; }

.ds-radio-button-group .ds-radio-button__input { border-radius: inherit; op=
acity: 0; z-index: 1; cursor: pointer; border: 0px; margin: 0px; position: =
absolute; inset: 0px; }

.ds-radio-button-group .ds-radio-button-group-tail { align-items: center; h=
eight: 32px; margin-bottom: 12px; display: flex; }

.ds-radio-button-group .ds-radio-button { box-shadow: var(--radio-button-gr=
oup-button-box-shadow); user-select: none; cursor: pointer; background-colo=
r: var(--radio-button-group-button-color); box-sizing: border-box; height: =
32px; transition: box-shadow var(--ds-transition-duration)var(--ds-ease-in-=
out),background-color var(--ds-transition-duration)var(--ds-ease-in-out),co=
lor var(--ds-transition-duration)var(--ds-ease-in-out); border-radius: 8px;=
 align-items: center; margin-bottom: 12px; padding: 0px 12px; font-size: 14=
px; line-height: 14px; display: flex; position: relative; }

.ds-radio-button-group .ds-radio-button:not(:last-child) { margin-right: 12=
px; }

.ds-radio-button-group .ds-radio-button::after { content: ""; pointer-event=
s: none; transition: box-shadow var(--ds-transition-duration)var(--ds-ease-=
in-out); border-radius: 10px; display: block; position: absolute; inset: -2=
px; }

.ds-radio-button-group .ds-radio-button.ds-radio-button--focus::after { box=
-shadow: var(--radio-button-group-button-outline-box-shadow-focus); }

.ds-radio-button-group .ds-radio-button:focus-within { box-shadow: var(--ra=
dio-button-group-button-box-shadow-focus); }

.ds-radio-button-group .ds-radio-button.ds-radio-button--active { color: va=
r(--radio-button-group-button-text-color-active); box-shadow: var(--radio-b=
utton-group-button-box-shadow-active); background-color: var(--radio-button=
-group-button-color-active); }

.ds-radio-button-group .ds-radio-button.ds-radio-button--active:focus-withi=
n { box-shadow: var(--radio-button-group-button-box-shadow-active-focus); }

.ds-textarea { --ds-textarea-text-color: rgb(var(--ds-rgb-label-1)); --ds-t=
extarea-border-radius: 10px; --ds-textarea-font-size: var(--ds-font-size-m)=
; --ds-textarea-line-height: var(--ds-line-height-m); --ds-textarea-padding=
: 6px 10px; }

.ds-textarea--bordered { --ds-textarea-color: transparent; --ds-textarea-bo=
rder-color: rgb(var(--ds-rgb-separator-strong)); }

.ds-textarea--filled { --ds-textarea-color: rgb(var(--ds-rgb-input)); --ds-=
textarea-border-color: transparent; }

.ds-textarea { color: var(--ds-textarea-text-color); font-size: var(--ds-te=
xtarea-font-size); line-height: var(--ds-textarea-line-height); box-sizing:=
 border-box; border-radius: var(--ds-textarea-border-radius); background-co=
lor: var(--ds-textarea-color); max-width: 100%; transition: background-colo=
r var(--ds-transition-duration)var(--ds-ease-in-out),box-shadow var(--ds-tr=
ansition-duration)var(--ds-ease-in-out),color var(--ds-transition-duration)=
var(--ds-ease-in-out); box-shadow: inset 0 0 0 1px var(--ds-textarea-border=
-color); position: relative; }

.ds-textarea.ds-textarea--focused { background-color: var(--ds-textarea-foc=
us-color,rgb(var(--ds-rgb-input-focus))); box-shadow: inset 0 0 0 2px var(-=
-ds-textarea-focus-border-color,rgb(var(--ds-rgb-primary))); }

.ds-textarea { box-sizing: border-box; }

.ds-textarea .ds-textarea__textarea, .ds-textarea .ds-textarea__mirror { fo=
nt-size: inherit; line-height: inherit; padding: var(--ds-textarea-padding)=
; word-break: break-word; font-family: inherit; }

.ds-textarea .ds-textarea__mirror { white-space: pre-wrap; pointer-events: =
none; visibility: hidden; max-width: 100%; }

.ds-textarea .ds-textarea__textarea { box-sizing: border-box; width: 100%; =
color: inherit; background-color: rgba(var(--ds-rgba-transparent)); border:=
 none; outline: none; display: block; }

.ds-textarea .ds-textarea__textarea::placeholder { color: rgb(var(--ds-rgb-=
label-3)); }

.ds-textarea .ds-textarea__textarea::placeholder { color: rgb(var(--ds-rgb-=
label-3)); }

.ds-textarea .ds-textarea__textarea::placeholder { color: rgb(var(--ds-rgb-=
label-3)); }

.ds-textarea.ds-textarea--auto-height .ds-textarea__textarea, .ds-textarea.=
ds-textarea--auto-width .ds-textarea__textarea { resize: none; position: ab=
solute; inset: 0px; }

.ds-textarea.ds-textarea--auto-height { width: 100%; }

.ds-textarea.ds-textarea--auto-width { width: fit-content; }

._3172d9f { border: 1px solid var(--button-border-color); border-radius: 14=
px; justify-content: center; align-items: center; height: 28px; margin-righ=
t: 10px; padding: 0px 7px; display: flex; }

._3172d9f .ds-button__icon { margin-right: 4px; }

._3172d9f.ds-button.ds-button--disabled { opacity: 1; }

._3172d9f .ad0c98fd { font-size: 12px; line-height: 17px; }

@media not all and (min-width: 640px) {
  ._3172d9f { margin-right: 10px; }
}

._58a6d71 { background: var(--dsr-button-grey-1); user-select: none; width:=
 fit-content; color: var(--dsr-text-1); border-radius: 10px; justify-conten=
t: center; align-items: center; margin-bottom: 12px; padding: 7px 14px; fon=
t-size: 12px; line-height: 18px; display: flex; }

._58a6d71._19db599 { cursor: pointer; }

._58a6d71._19db599:hover { background: var(--dsr-button-grey-0); }

._7580acb { margin-right: 6px; }

._54f4262 { margin-left: 6px; }

._426ebf9 { flex-direction: column; display: flex; }

._426ebf9._5130389 { cursor: pointer; }

._426ebf9 .a93786a8 { align-items: center; gap: 6px; font-size: 12px; line-=
height: 17px; display: flex; }

._426ebf9 .a93786a8 .c16074e9 { border-radius: 50%; flex-shrink: 0; width: =
20px; height: 20px; overflow: hidden; }

._426ebf9 .a93786a8 .c16074e9 .siteIcon_img { object-fit: cover; width: 100=
%; height: 100%; }

._426ebf9 .a93786a8 .c16074e9 .siteIcon_loading { background-color: rgb(245=
, 245, 245); justify-content: center; align-items: center; height: 100%; di=
splay: flex; }

._426ebf9 .a93786a8 .c16074e9 .siteIcon_fallback { color: rgb(139, 139, 139=
); background-color: rgba(255, 255, 255, 0.16); }

._426ebf9 .a93786a8 .d2eca804 { color: rgb(38, 38, 38); font-weight: 500; }

._426ebf9 .a93786a8 .caa1ee14 { color: rgb(163, 163, 163); font-size: 12px;=
 }

._426ebf9 .a93786a8 .ba26051b { font-variant: tabular-nums; color: rgb(115,=
 115, 115); background: rgba(0, 0, 0, 0.06); border-radius: 10px; flex-shri=
nk: 0; justify-content: center; align-items: center; height: 20px; margin-l=
eft: auto; padding: 0px 6px; display: flex; }

._426ebf9 .f664d0b2 { color: rgb(23, 23, 23); margin-top: 8px; font-size: 1=
6px; font-weight: 500; line-height: 25px; }

._426ebf9 .c56273f9 { color: rgb(139, 139, 139); margin-top: 6px; font-size=
: 14px; line-height: 22px; }

.search-view-card__title, .search-view-card__snippet { -webkit-line-clamp: =
2; -webkit-box-orient: vertical; display: -webkit-box; overflow: hidden; }

@media not all and (min-width: 640px) {
  .search-view-card__title { -webkit-line-clamp: 1; }
  ._426ebf9 .c56273f9 { font-size: 13px; }
}

[data-ds-dark-theme] ._426ebf9 .a93786a8 .c16074e9 .siteIcon_fallback { col=
or: rgb(248, 250, 255); background-color: rgb(105, 105, 115); }

[data-ds-dark-theme] ._426ebf9 .a93786a8 .d2eca804 { color: rgb(248, 250, 2=
55); }

[data-ds-dark-theme] ._426ebf9 .a93786a8 .caa1ee14 { color: rgb(220, 220, 2=
20); }

[data-ds-dark-theme] ._426ebf9 .a93786a8 .ba26051b { color: rgb(187, 187, 1=
87); background: rgba(255, 255, 255, 0.12); }

[data-ds-dark-theme] ._426ebf9 .f664d0b2 { color: rgb(248, 250, 255); }

[data-ds-dark-theme] ._426ebf9 .c56273f9 { color: rgb(220, 220, 220); }

.de80ba65 { background: rgb(255, 255, 255); border: 0.5px solid rgb(220, 22=
0, 220); border-radius: 12px; max-width: 355px; padding: 20px; box-shadow: =
rgba(133, 138, 154, 0.25) 0px 4px 16px; }

[data-ds-dark-theme] .de80ba65 { background: rgb(75, 75, 91); border: 1px s=
olid rgb(90, 90, 105); box-shadow: rgba(51, 51, 51, 0.75) 0px 4px 16px; }

._48edb25 { margin-bottom: 13px; }

._48edb25 .e1675d8b { color: rgb(139, 139, 139); white-space: pre-wrap; mar=
gin: 0px; padding: 0px 0px 0px 13px; line-height: 26px; position: relative;=
 }

._48edb25 .e1675d8b ._9ecc93a { border-left: 2px solid rgb(229, 229, 229); =
height: calc(100% - 10px); margin-top: 5px; position: absolute; top: 0px; l=
eft: 0px; }

[data-ds-dark-theme] ._48edb25 .e1675d8b { color: rgb(166, 166, 166); }

[data-ds-dark-theme] ._48edb25 ._9ecc93a { border-color: rgb(78, 78, 86); }

._1484be6 { margin-right: 6px; }

._0f883e7 { margin-left: 6px; }

.bf9dce37 { border: 1.5px solid var(--color); user-select: none; background=
-color: rgb(255, 255, 255); border-radius: 50%; flex-shrink: 0; justify-con=
tent: center; align-items: center; display: flex; position: relative; }

._0cb792b { color: var(--color); word-break: break-all; line-height: 1.2; f=
ont-size: var(--font-size); font-weight: 500; }

.db33d433 { font-variant: tabular-nums; text-align: center; }

._9fdc091 { object-fit: cover; border-radius: 50%; flex-shrink: 0; }

.febb9909 { justify-content: center; align-items: center; display: flex; }

._29ef3c7 { background-color: var(--dsr-border-1); border-radius: 50%; widt=
h: 6px; height: 6px; margin-right: 6px; animation: 0.9s linear 0s infinite =
normal none running _3f11678; }

._29ef3c7:first-child { animation-delay: 0s; }

._29ef3c7:nth-child(2) { animation-delay: 0.1s; }

._29ef3c7:nth-child(3) { animation-delay: 0.2s; }

@keyframes _3f11678 {=20
  0%, 100% { opacity: 0.3; }
  33%, 66% { opacity: 1; }
}

._8ac543b { border: solid 1px var(--dsr-risk-border); background-color: var=
(--dsr-risk-fill); border-radius: 12px; align-items: center; width: fit-con=
tent; margin-top: 10px; padding: 6px 12px; display: flex; }

._3ce6e41 { flex-shrink: 0; align-self: flex-start; margin-right: 10px; pos=
ition: relative; top: 6px; }

._46600c8 { color: var(--dsr-risk-text); font-size: 14px; font-weight: 500;=
 line-height: 28px; }

._4f9bf79 { font-size: var(--ds-font-size-m); color: rgb(var(--ds-rgb-label=
-1)); margin-bottom: 12px; padding-left: 48px; position: relative; }

._4f9bf79.d7dc56a8 { margin-bottom: 0px; }

._4f9bf79.d7dc56a8:not(._43c05b5) { margin-bottom: 32px; }

._4f9bf79.d7dc56a8:not(._43c05b5)._1988f4b { margin-bottom: 0px; }

._4f9bf79:hover ._965abe9 { opacity: 1; }

._4f9bf79:focus-within ._965abe9 { opacity: 1; }

.d7dc56a8 ._965abe9, ._44fa7a8 ._965abe9 { opacity: 1; }

._965abe9 { opacity: 0; transition: opacity var(--ds-transition-duration)va=
r(--ds-ease-in-out); will-change: opacity; }

._58dfa60 { position: absolute; top: -2px; left: 0px; }

._7eb2358 { background-color: rgb(255, 255, 255); border-radius: 50%; justi=
fy-content: center; align-items: center; width: 32px; height: 32px; display=
: flex; box-shadow: rgb(213, 228, 255) 0px 0px 0px 1px; }

._7eb2358 svg { width: 28px; height: 28px; }

.b4e4476b { justify-content: flex-start; height: 20px; padding-top: 4px; }

._2f297cc { height: 28px; }

[data-ds-dark-theme] ._7eb2358 { box-shadow: none; background-color: rgb(50=
, 51, 62); border: 1px solid rgb(79, 100, 123); }

[data-ds-dark-theme] ._4f9bf79 { color: rgb(248, 250, 255); }

.a4380d7b { flex-wrap: wrap; gap: 8px; width: calc(100% - 48px); max-height=
: 180px; display: flex; overflow-y: auto; }

._76cd190 { background-color: var(--dsr-input-bg); border-radius: 12px; wid=
th: calc(33.3333% - 8.33333px); min-width: 200px; transition: background-co=
lor 0.3s; position: relative; }

._76cd190 .d2d04dae { align-items: center; padding: 8px; display: flex; }

._76cd190 .d2d04dae .b3a5d6c1 { color: rgb(76, 76, 76); margin-right: 10px;=
 }

._76cd190 .d2d04dae ._789aea7 { overflow: hidden; }

._76cd190 .d2d04dae ._789aea7 .f3a54b52 { text-overflow: ellipsis; white-sp=
ace: nowrap; color: rgb(38, 38, 38); min-height: 20px; margin: 0px; font-si=
ze: 14px; font-weight: 500; line-height: 20px; overflow: hidden; }

._76cd190 .d2d04dae ._789aea7 ._5119742 { text-overflow: ellipsis; white-sp=
ace: nowrap; margin: 0px; font-size: 12px; line-height: 17px; overflow: hid=
den; }

._76cd190:hover ._35730b2 { opacity: 1; }

._76cd190 ._5119742 { color: rgb(187, 187, 187); }

._76cd190._4ebfd18 ._5119742 { color: rgb(229, 53, 53); }

._76cd190._4ebfd18 ._35730b2 { opacity: 1; }

._76cd190._0004e59 { cursor: pointer; transition: box-shadow 0.2s ease-in-o=
ut; }

._76cd190._0004e59:hover { box-shadow: 0px 0px 0px .5px var(--dsr-input-bor=
der),0px 4px 8px 0px rgba(144,150,174,.25); }

._7a0c3ba { justify-content: flex-end; padding: 10px 0px; }

._35730b2 { z-index: 1; opacity: 0; will-change: opacity; cursor: pointer; =
box-sizing: border-box; background-color: rgb(255, 255, 255); border-radius=
: 50%; justify-content: center; align-items: center; width: 20px; height: 2=
0px; transition: opacity 0.2s ease-in-out; display: flex; position: absolut=
e; top: -5px; right: -5px; box-shadow: rgba(148, 147, 147, 0.25) 0px 1px 2p=
x, rgb(237, 237, 237) 0px 0px 0px 0.5px inset; }

._46207b4 { opacity: 1; }

._9a41837 { background-color: rgb(229, 53, 53); box-shadow: rgba(148, 147, =
147, 0.25) 0px 1px 2px; }

._48289ac { margin: 6px; }

@media not all and (min-width: 640px) {
  .a4380d7b { gap: 8px; }
  ._76cd190 { width: calc(50% - 6.5px); }
}

[data-ds-dark-theme] ._76cd190 ._789aea7 .f3a54b52 { color: rgb(255, 255, 2=
55); }

[data-ds-dark-theme] ._76cd190._0004e59:hover { box-shadow: 0px 0px 0px .5p=
x var(--dsr-input-border),0px 4px 8px 0px rgba(11,11,12,.25); }

[data-ds-dark-theme] ._76cd190._4ebfd18 ._5119742 { color: rgb(239, 68, 68)=
; }

[data-ds-dark-theme] ._48289ac { color: rgb(201, 201, 201); }

.a3b9bd76 { width: 24px; height: 24px; position: absolute; }

.a3b9bd76._59c20ea { bottom: 14px; left: -34px; }

.a3b9bd76._76a2310 { bottom: 10px; right: calc(100% + 10px); }

._7f04b94 { opacity: 0.5; }

._9663006 { box-sizing: border-box; flex-direction: column; align-items: fl=
ex-end; margin-bottom: 16px; padding-right: 15px; display: flex; position: =
relative; right: -12px; overflow-y: hidden; }

._9663006:hover ._78e0558 { opacity: 1; }

._9663006._03bad9a { margin-bottom: 24px; }

._9663006._3111eee { padding-bottom: 56px; }

._78e0558 { opacity: 0; transition: opacity var(--ds-transition-duration)va=
r(--ds-ease-in-out); will-change: opacity; }

._78e0558:focus { opacity: 1; }

._78e0558:focus-within { opacity: 1; }

._78e0558._0bbda35 { opacity: 1; }

.fbb737a4 { font-size: var(--ds-font-size-l); line-height: var(--ds-line-he=
ight-l); color: rgb(38, 38, 38); padding: calc((44px - var(--ds-line-height=
-l))/2)20px; box-sizing: border-box; white-space: pre-wrap; word-break: bre=
ak-word; background-color: rgb(239, 246, 255); border-radius: 14px; max-wid=
th: calc(100% - 48px); position: relative; }

.fbb737a4._8271fc3 { margin-top: 0px; }

@media not all and (min-width: 640px) {
  .fbb737a4 { max-width: calc(100% - 68px); }
}

.e13328ad { flex-direction: column; align-items: flex-end; display: flex; }

.e13328ad._0325aa6 { margin-top: -4px; }

.e13328ad._3a26104, .e13328ad.b12bb222 { margin-top: 6px; }

.e13328ad._672aaf7 { margin-top: -4px; }

.e13328ad._90ea4a7, .e13328ad._515472c { margin-top: 6px; }

.e13328ad ._425ea0b { align-items: center; height: 28px; display: flex; }

.ac2694a7 { color: var(--dsr-text-4); white-space: nowrap; flex-direction: =
column; align-items: flex-end; font-size: 14px; line-height: 20px; display:=
 flex; }

.ac2694a7 .ce66e6df { margin-bottom: 6px; }

[data-ds-dark-theme] .fbb737a4 { color: rgb(248, 250, 255); background-colo=
r: rgb(65, 65, 88); }

._3919b83 { flex-grow: 1; position: relative; }

._8f60047 { padding: 0 var(--message-list-padding-horizontal); min-height: =
100%; position: absolute; inset: 0px; overflow: auto; }

._8f60047 ._0f72b0b { flex-direction: column; flex-grow: 1; height: 100%; d=
isplay: flex; position: relative; }

.dad65929 { width: 100%; max-width: var(--message-list-max-width); box-sizi=
ng: border-box; flex-grow: 1; margin: auto; padding: 38px 0px 40px; }

._772e792 { color: rgb(var(--ds-rgb-primary)); justify-content: center; ali=
gn-items: center; width: 100%; height: 100%; font-size: 24px; display: flex=
; }

.df4cb668 { color: rgb(var(--ds-rgb-label-2)); box-sizing: border-box; just=
ify-content: center; align-items: center; width: 100%; height: 100%; font-s=
ize: 14px; line-height: 20px; display: flex; }

._88681e8 { justify-content: center; gap: 20px; margin-bottom: 20px; displa=
y: flex; }

@media not all and (min-width: 640px) {
  ._88681e8 { margin-bottom: 6px; }
}

._217e214 { white-space: nowrap; background-color: rgb(var(--ds-rgb-blue-10=
0)); color: rgb(77, 107, 254); cursor: pointer; z-index: 1; border-radius: =
12px; align-items: center; gap: 10px; width: fit-content; padding: 2px 14px=
; font-size: 14px; line-height: 28px; display: flex; }

._217e214:hover { background-color: rgb(195, 218, 248); }

[data-ds-dark-theme] ._217e214 { color: rgb(248, 250, 255); background-colo=
r: rgb(77, 107, 254); }

[data-ds-dark-theme] ._217e214:hover { background-color: rgb(79, 110, 202);=
 }

._052f656 { background-color: var(--dsr-button-grey-1); cursor: pointer; bo=
rder-radius: 12px; align-items: center; width: fit-content; padding: 8px 14=
px; display: flex; }

._052f656:hover { background-color: var(--dsr-button-grey-0); }

._052f656 .faf995dc { color: var(--dsr-text-1); margin-right: 10px; font-si=
ze: 14px; line-height: 20px; }

._052f656 ._1219a20 { color: var(--dsr-icon-fg-1); }

.f02f0e25 { color: rgb(76, 76, 76); cursor: pointer; border-radius: 10px; f=
lex-shrink: 0; justify-content: center; align-items: center; width: 32px; h=
eight: 32px; margin-top: auto; margin-right: 10px; display: flex; }

.f02f0e25:hover { background-color: rgb(224, 228, 237); }

.f02f0e25.cfba8f40 { cursor: not-allowed; color: rgb(187, 187, 187); }

._393efd7 { color: rgb(172, 172, 172); font-size: 12px; }

._393efd7 span[role=3D"title"] { color: rgb(255, 255, 255); font-size: 14px=
; display: block; }

[data-ds-dark-theme] .f02f0e25 { color: rgb(205, 212, 223); }

[data-ds-dark-theme] .f02f0e25:hover { background-color: rgb(66, 68, 81); }

[data-ds-dark-theme] .f02f0e25.cfba8f40 { color: rgb(107, 107, 118); }

.c7ff2faa { justify-content: center; display: flex; }

._8c929f5 { text-align: center; flex-direction: column; justify-content: ce=
nter; width: 50%; max-width: 760px; margin-top: 100px; display: flex; }

._8c929f5 ._0b53c0e { margin: 0px auto; }

._8c929f5 .f652d34f { color: var(--dsr-text-1); margin-top: 12px; font-size=
: 32px; font-weight: 500; line-height: 45px; }

._8c929f5 ._5e1c32e { color: var(--dsr-text-3); margin-top: 12px; font-size=
: 16px; font-weight: 500; line-height: 22px; }

._8c929f5 ._7ef39bc { color: var(--dsr-text-1); margin-top: 12px; font-size=
: 16px; line-height: 28px; }

._883c051 { flex-direction: column; justify-content: flex-start; width: fit=
-content; max-width: 90%; margin: 36px auto 0px; display: flex; }

._883c051 ._3086cd6 { margin-bottom: 10px; }

@media not all and (min-width: 1280px) {
  ._8c929f5 { width: 60%; }
}

@media not all and (min-width: 1024px) {
  ._8c929f5 { width: 70%; }
}

@media not all and (min-width: 768px) {
  ._8c929f5 { width: 80%; margin-top: 60px; }
}

@media not all and (min-width: 640px) {
  ._8c929f5 { width: 100%; margin-top: 30px; }
}

._83421f9 { --dsr-side-bg-rgb: 249,251,255; --dsr-local-active-bg-rgb: 219,=
234,254; --dsr-local-active-bg: rgb(var(--ds-rgb-blue-100)); }

[data-ds-dark-theme] ._83421f9 { --dsr-side-bg-rgb: 33,35,39; --dsr-local-a=
ctive-bg-rgb: 73,73,73; --dsr-local-active-bg: rgb(var(--ds-rgb-neutral-650=
)); }

._83421f9 { height: 38px; color: var(--dsr-text-1); background-color: var(-=
-dsr-side-bg); cursor: pointer; --ds-focus-ring-border-radius: 14px; border=
-radius: 12px; align-items: center; padding: 0px 10px; font-size: 14px; dis=
play: flex; position: relative; }

._83421f9:focus, ._83421f9._0e9c629 { outline: none; }

._83421f9:focus ._2090548, ._83421f9._0e9c629 ._2090548 { opacity: 1; }

._83421f9 .c08e6e93 { white-space: nowrap; flex: 1 1 0%; align-items: cente=
r; min-width: 0px; line-height: 18px; display: flex; overflow: hidden; }

._83421f9 .c08e6e93 ._823060e { margin-right: 6px; }

._83421f9 ._2090548 { opacity: 0; z-index: 1; --ds-focus-ring-border-radius=
: 8px; border-radius: 8px; outline: none; justify-content: center; align-it=
ems: center; width: 24px; height: 24px; display: flex; position: absolute; =
top: 50%; right: 10px; transform: translateY(-50%); }

._83421f9 ._2090548:hover { opacity: 1; background-color: var(--dsr-side-bg=
); }

._83421f9 .eaaaba55 { background: linear-gradient(90deg,rgba(var(--dsr-side=
-bg-rgb),0)0%,var(--dsr-side-bg)100%); }

._83421f9.b64fb9ae { background-color: var(--dsr-local-active-bg); }

._83421f9.b64fb9ae .eaaaba55 { background-image: linear-gradient(to right,r=
gba(var(--dsr-local-active-bg-rgb),0),var(--dsr-local-active-bg)50%); }

._83421f9:not(.b64fb9ae):hover { background-color: var(--dsr-side-hover-bg)=
; }

._83421f9:not(.b64fb9ae):hover .eaaaba55 { background: linear-gradient(90de=
g,rgba(var(--dsr-side-hover-bg-rgb),0)0%,var(--dsr-side-hover-bg)60%,var(--=
dsr-side-hover-bg)100%); opacity: 1; }

._83421f9 ._2f87737, ._83421f9 .eaaaba55 { content: ""; pointer-events: non=
e; border-top-right-radius: 12px; border-bottom-right-radius: 12px; positio=
n: absolute; top: 0px; bottom: 0px; right: 0px; }

._83421f9 ._2f87737 { background: linear-gradient(90deg,rgba(var(--dsr-side=
-bg-rgb),0)0%,var(--dsr-side-bg)50%,var(--dsr-side-bg)100%); width: 24px; }

._83421f9 .eaaaba55 { opacity: 0; width: 84px; }

._83421f9.b64fb9ae ._2090548, ._83421f9:hover ._2090548, ._83421f9.b64fb9ae=
 .eaaaba55, ._83421f9:hover .eaaaba55 { opacity: 1; }

@media (hover: none) {
  ._83421f9 .eaaaba55 { opacity: 1; }
  ._83421f9 ._2090548 { opacity: 0.5; }
  ._83421f9 ._2f87737 { width: 52px; }
}

.ds-dropdown-menu { --ds-dropdown-menu-font-size: var(--ds-font-size-m); --=
ds-dropdown-menu-option-icon-size: calc(var(--ds-font-size-m) + 4px); --ds-=
dropdown-menu-option-icon-margin: 0 10px 0 0; --ds-dropdown-menu-option-ico=
n-color: rgb(var(--ds-rgb-label-2)); --ds-dropdown-menu-color: rgb(var(--ds=
-rgb-elevated)); --ds-dropdown-menu-option-text-color: rgb(var(--ds-rgb-lab=
el-1)); --ds-dropdown-menu-option-height: 28px; --ds-dropdown-menu-option-c=
olor-hover: rgb(var(--ds-rgb-hover)); --ds-dropdown-menu-padding: 4px; --ds=
-dropdown-menu-option-padding: 8px 14px; --ds-dropdown-menu-option-line-hei=
ght: var(--ds-line-height-m); --ds-dropdown-menu-border-radius: 10px; --ds-=
dropdown-menu-option-border-radius: 8px; --ds-dropdown-menu-option-divider-=
margin: 8px; --ds-dropdown-menu-option-label-margin: 0; }

.ds-dropdown-menu-option.ds-dropdown-menu-option--error { --ds-dropdown-men=
u-option-text-color: rgb(var(--ds-rgb-error)); --ds-dropdown-menu-option-ic=
on-color: rgb(var(--ds-rgb-error)); --ds-dropdown-menu-option-color-hover: =
var(--ds-dropdown-menu-option-error-color-hover,rgba(var(--ds-rgb-error)/.0=
6)); }

.ds-dropdown-menu { border-radius: var(--ds-dropdown-menu-border-radius); b=
ackground-color: var(--ds-dropdown-menu-color); padding: var(--ds-dropdown-=
menu-padding); color: var(--ds-dropdown-menu-option-text-color); box-shadow=
: rgba(0, 0, 0, 0.12) 0px 8px 24px; }

.ds-dropdown-menu-option { font-size: var(--ds-dropdown-menu-font-size); li=
ne-height: var(--ds-dropdown-menu-option-line-height); border-radius: var(-=
-ds-dropdown-menu-option-border-radius); min-height: var(--ds-dropdown-menu=
-option-height); padding: var(--ds-dropdown-menu-option-padding); color: va=
r(--ds-dropdown-menu-option-text-color); cursor: pointer; box-sizing: borde=
r-box; transition: background-color var(--ds-transition-duration)var(--ds-e=
ase-in-out),color var(--ds-transition-duration)var(--ds-ease-in-out); user-=
select: none; align-items: center; display: flex; overflow: auto; }

.ds-dropdown-menu-option:hover, .ds-dropdown-menu-option.ds-dropdown-menu-o=
ption--pending { background-color: var(--ds-dropdown-menu-option-color-hove=
r); }

.ds-dropdown-menu-option .ds-dropdown-menu-option__icon { color: var(--ds-d=
ropdown-menu-option-icon-color); margin: var(--ds-dropdown-menu-option-icon=
-margin); font-size: var(--ds-dropdown-menu-option-icon-size); display: fle=
x; }

.ds-dropdown-menu-option .ds-dropdown-menu-option__label { margin: var(--ds=
-dropdown-menu-option-label-margin); }

.ds-dropdown-menu-option-divider { border-color: rgb(var(--ds-rgb-separator=
)); margin: var(--ds-dropdown-menu-option-divider-margin); border-style: so=
lid; border-width: 1px 0px 0px; min-height: 0px; padding: 0px; overflow: hi=
dden; }

._03210fb { flex: 1 1 0%; padding: 0px 10px; position: relative; overflow: =
auto; }

._03210fb.f27d1011 { justify-content: center; align-items: center; display:=
 flex; }

._48cdfc1 { z-index: 2; background-color: var(--dsr-side-bg); color: rgb(85=
, 85, 85); margin: 6px 0px 6px -6px; padding: 0px 10px 0px 16px; font-size:=
 13px; font-weight: 600; line-height: 18px; position: sticky; top: 0px; }

._5d4b535 { position: relative; }

._5d4b535:first-child ._48cdfc1 { margin-top: 0px; }

.b9cb4a74 { width: 100%; height: 24px; }

._5d4b535:last-of-type .b9cb4a74 { display: none; }

.f27d1011 { color: rgb(var(--ds-rgb-label-2)); font-size: 14px; line-height=
: 20px; }

.de3d058c { opacity: 0; width: 100%; height: 38px; margin-bottom: -38px; }

._873c4d4 { color: rgb(var(--ds-rgb-primary)); justify-content: center; ali=
gn-items: center; width: 100%; height: 38px; font-size: 16px; display: flex=
; }

._47ef3ad { color: rgb(var(--ds-rgb-label-2)); box-sizing: border-box; just=
ify-content: center; align-items: center; width: 100%; height: 5rem; paddin=
g: 0px 20px; font-size: 14px; line-height: 20px; display: flex; }

.ede76300 { height: 100%; }

._196bcac { opacity: 0; z-index: 100; pointer-events: none; padding: 6px 10=
px; transition: 0.15s ease-in-out; position: absolute; inset: 0px; }

._196bcac._8a693f3 { opacity: 1; }

._5c2e5a9, ._68953bc { box-sizing: border-box; height: 38px; padding-bottom=
: 8px; }

._68953bc:first-child { height: 24px; }

._68953bc:first-child ._5c2e5a9 { width: 28%; margin-left: 2.5%; }

._5c2e5a9 { width: 95%; height: 100%; margin: 0px auto; }

._5c2e5a9.ds-skeleton { --color-start: rgba(0,0,0,.04); --color-end: rgba(0=
,0,0,.06); }

[data-ds-dark-theme] ._5c2e5a9.ds-skeleton { --color-start: rgba(255,255,25=
5,.06); --color-end: rgba(255,255,255,.08); }

._77cdc67 { opacity: 0; transition: 0.15s ease-in-out; }

._77cdc67._8a693f3 { opacity: 1; }

._6969ec9 { box-sizing: border-box; cursor: pointer; flex-shrink: 0; justif=
y-content: space-between; align-items: center; width: 100%; height: 56px; p=
adding: 0px 10px; display: flex; }

@media (min-width: 640px) {
  ._6969ec9 { height: 80px; padding: 12px 10px 24px 20px; }
}

.e066abb8 { align-items: center; display: flex; }

.e066abb8 svg { color: rgb(44, 44, 54); height: 22px; }

@media (min-width: 640px) {
  .e066abb8 svg { height: 24px; }
}

.a5967822 { flex-grow: 0; flex-shrink: 0; width: 24px; height: 24px; }

@media (min-width: 640px) {
  .a5967822 { display: none; }
}

._8a9564e { color: rgb(139, 139, 139); display: block; }

@media (min-width: 640px) {
  ._8a9564e { display: none; }
}

._7d1f5e2 { display: none; }

._7d1f5e2.ds-icon-button:hover::before { background-color: var(--dsr-side-i=
con-hover); }

@media (min-width: 640px) {
  ._7d1f5e2 { display: flex; }
}

[data-ds-dark-theme] ._8a9564e { color: rgb(205, 212, 223); }

[data-ds-dark-theme] .e066abb8 svg { color: rgb(171, 178, 189); }

._50fd23d { background-color: var(--local-button-text); width: 1px; height:=
 20px; }

._2508e0d { align-items: center; height: 100%; padding: 0px 10px; display: =
flex; }

._2508e0d:hover { background-color: var(--local-button-hover); }

._7d38c36 { align-items: center; display: flex; }

.faf1228f { margin-right: 8px; }

.fdf5dad2 { text-overflow: ellipsis; white-space: nowrap; max-width: 120px;=
 color: var(---dsr-text-1); font-size: 14px; line-height: 20px; display: bl=
ock; overflow: hidden; }

._8ad5d9e { align-items: center; display: flex; }

._8ad5d9e ._1162494 { color: var(--dsr-icon-fg-1); margin-left: auto; }

[data-ds-dark-theme] ._5a8ac7a { --local-button: var(--dsr-main); --local-b=
utton-hover: #4166d5; --local-button-text: rgb(var(--ds-rgb-slate-50)); }

._5a8ac7a { --local-button: rgb(var(--ds-rgb-blue-100)); --local-button-tex=
t: var(--dsr-main); --local-button-hover: #c6dcf8; color: var(--local-butto=
n-text); background-color: var(--local-button); cursor: pointer; height: 44=
px; border-radius: 14px; flex-shrink: 0; align-items: center; width: fit-co=
ntent; margin: 0px 2px 0px 14px; font-size: 16px; font-weight: 500; line-he=
ight: 20px; display: flex; overflow: hidden; }

._5a8ac7a .c7dddcde { align-items: center; height: 100%; padding: 0px 10px;=
 display: flex; }

._5a8ac7a .c7dddcde:hover { background-color: var(--local-button-hover); }

._1c42ad7 { margin-right: 9px; display: flex; }

._1c42ad7 svg { width: 22px; height: 22px; }

.ede5bc47 { cursor: pointer; width: 32px; border-radius: 50%; outline: none=
; flex-direction: column; justify-content: center; align-items: center; hei=
ght: fit-content; display: flex; overflow: hidden; }

._725f8ba { color: var(--dsr-text-4); }

.c6ab9234 { cursor: pointer; box-sizing: border-box; border-radius: 12px; a=
lign-items: center; width: 100%; padding: 8px; display: flex; }

.c6ab9234:hover { background-color: var(--dsr-side-hover-bg); }

._7d65532 { color: var(--dsr-text-2); user-select: none; margin-left: 8px; =
font-size: 14px; }

.fdf01f38 { object-fit: cover; border: 1px solid var(--dsr-border-2); box-s=
izing: border-box; border-radius: 50%; width: 100%; height: 100%; min-heigh=
t: 32px; }

._93cf5ec { font-size: var(--ds-font-size-m); height: var(--ds-input-height=
-m); align-items: center; gap: 4px; display: flex; }

._44a68f4 { height: var(--ds-input-height-m); padding: 4px; }

.ebd4cd9a { flex-direction: column; flex: 1 0 0px; justify-content: center;=
 align-items: flex-start; gap: 4px; padding-right: 48px; display: flex; }

._663bc35 { justify-content: flex-end; align-items: center; width: 80px; di=
splay: flex; }

._0d00f26 { color: var(--dsr-text-3,#a3a3a3); font-size: 12px; line-height:=
 150%; }

.ds-switch { --switch-color: rgba(var(--ds-rgb-neutral-350)); --switch-thum=
b-color: rgb(var(--ds-rgb-thumb)); --switch-height: 24px; --switch-width: 4=
0px; --switch-gutter: 3px; }

.ds-switch { background-color: var(--switch-color); height: var(--switch-he=
ight); width: var(--switch-width); transition: background-color var(--ds-tr=
ansition-duration)var(--ds-ease-in-out); cursor: pointer; border: none; bor=
der-radius: 4096px; position: relative; }

.ds-switch::after { content: ""; transition: box-shadow var(--ds-transition=
-duration)var(--ds-ease-in-out); border-radius: 4096px; position: absolute;=
 inset: -2px; }

.ds-switch:focus { outline: none; }

.ds-switch:focus-visible::after { box-shadow: 0 0 0 2px rgb(var(--ds-rgb-pr=
imary)); }

.ds-switch.ds-switch--checked .ds-switch-thumb { left: calc(100% - var(--sw=
itch-height) + var(--switch-gutter)); }

.ds-switch.ds-switch--disabled { cursor: not-allowed; opacity: 0.5; }

.ds-switch.ds-switch--size-s { --switch-height: 18px; --switch-width: 28px;=
 --switch-gutter: 2px; }

.ds-switch.ds-switch--size-xs { --switch-height: 16px; --switch-width: 24px=
; --switch-gutter: 2px; }

.ds-switch.ds-switch--size-l { --switch-height: 28px; --switch-width: 48px;=
 --switch-gutter: 3px; }

.ds-switch-thumb { background-color: var(--switch-thumb-color); height: cal=
c(var(--switch-height) - var(--switch-gutter)*2); width: calc(var(--switch-=
height) - var(--switch-gutter)*2); left: var(--switch-gutter); transition: =
left var(--ds-transition-duration)var(--ds-ease-in-out); border-radius: 409=
6px; position: absolute; top: 50%; transform: translateY(-50%); }

._4a66405 { flex-direction: column; flex: 1 0 0px; justify-content: center;=
 align-items: flex-start; gap: 4px; padding-right: 48px; display: flex; }

._601fe4b { justify-content: flex-end; align-items: center; width: 80px; di=
splay: flex; }

.d6e050ed { color: var(--dsr-text-3,#a3a3a3); font-size: 12px; line-height:=
 150%; }

.d6e050ed .ds-button--text:hover { opacity: 0.8; }

.cdf736f8 .ds-button__icon { --button-icon-size: 16px; margin-right: 4px; }

._50b3d9e .ds-button:not(.ds-button--text) { flex-shrink: 0; justify-conten=
t: center; min-width: 72px; }

.ds-native-select { cursor: pointer; width: 100%; color: rgb(var(--ds-rgb-l=
abel-1)); font-size: var(--font-size); line-height: var(--line-height); hei=
ght: var(--height); box-sizing: border-box; border-radius: var(--border-rad=
ius); transition: background-color var(--ds-transition-duration)var(--ds-ea=
se-in-out),box-shadow var(--ds-transition-duration)var(--ds-ease-in-out),co=
lor var(--ds-transition-duration)var(--ds-ease-in-out); align-items: center=
; display: flex; position: relative; }

.ds-native-select option { background: rgb(var(--ds-rgb-bg-base)); }

.ds-native-select.ds-native-select--disabled { opacity: 0.45; cursor: not-a=
llowed; }

.ds-native-select.ds-native-select--disabled .native-selectInner { cursor: =
not-allowed; }

.ds-native-select .ds-native-select__select { color: inherit; cursor: inher=
it; appearance: none; font-size: inherit; background-color: var(--ds-native=
-select-color,transparent); border-radius: inherit; user-select: none; bord=
er: none; outline: none; width: 100%; height: 100%; padding: 0px 28px 0px 1=
0px; }

.ds-native-select .ds-native-select__arrow { pointer-events: none; color: r=
gb(var(--ds-rgb-label-2)); display: flex; position: absolute; top: 50%; rig=
ht: 8px; transform: translateY(-50%); }

.ds-native-select .ds-native-select__arrow svg { width: 14px; height: 14px;=
 }

.ds-native-select.ds-native-select--none:focus-within { background-color: r=
gb(var(--ds-rgb-input-focus)); box-shadow: inset 0 0 0 2px rgb(var(--ds-rgb=
-primary)); }

.ds-native-select.ds-native-select--filled.ds-native-select--error:focus-wi=
thin { background-color: rgb(var(--ds-rgb-input-focus)); }

.ds-native-select.ds-native-select--bordered.ds-native-select--error:focus-=
within { background-color: rgb(var(--ds-rgb-input-focus)); }

.ds-native-select.ds-native-select--filled.ds-native-select--error, .ds-nat=
ive-select.ds-native-select--bordered.ds-native-select--error { background-=
color: rgba(var(--ds-rgb-error)/.06); box-shadow: inset 0 0 0 2px rgb(var(-=
-ds-rgb-error)); }

.ds-native-select.ds-native-select--filled { background-color: rgb(var(--ds=
-rgb-input)); }

.ds-native-select.ds-native-select--bordered { box-shadow: inset 0 0 0 1px =
rgb(var(--ds-rgb-separator)); }

.ds-native-select.ds-native-select--l { --height: var(--ds-input-height-l);=
 --font-size: var(--ds-font-size-l); --line-height: var(--ds-line-height-l)=
; --border-radius: 10px; }

.ds-native-select.ds-native-select--m { --height: var(--ds-input-height-m);=
 --font-size: var(--ds-font-size-m); --line-height: var(--ds-line-height-m)=
; --border-radius: 10px; }

.ds-native-select.ds-native-select--s { --height: var(--ds-input-height-s);=
 --font-size: var(--ds-font-size-s); --line-height: var(--ds-line-height-s)=
; --border-radius: 10px; }

.ds-native-select.ds-native-select--xs { --height: var(--ds-input-height-xs=
); --font-size: var(--ds-font-size-xs); --line-height: var(--ds-line-height=
-xs); --border-radius: 8px; }

.ds-segmented { background-color: var(--ds-segmented-color,rgba(var(--ds-rg=
b-segmented))); font-size: var(--ds-font-size-m); line-height: var(--ds-lin=
e-height-m); border-radius: 10px; padding: 2px; display: flex; }

.ds-segmented-button { white-space: nowrap; cursor: pointer; border-radius:=
 8px; flex: 1 1 0%; justify-content: center; align-items: center; padding: =
4px 14px; font-weight: 400; display: flex; position: relative; }

.ds-segmented-button.ds-segmented-button--disabled { cursor: not-allowed; o=
pacity: 0.45; }

.ds-segmented-button.ds-segmented-button--selected { font-weight: var(--ds-=
font-weight-strong); background-color: var(--ds-segmented-selected-color,rg=
b(var(--ds-rgb-segmented-button))); --default-box-shadow: 0 0 0 .5px rgba(0=
,0,0,.04),0 3px 1px 0 rgba(0,0,0,.04),0 3px 8px 0 rgba(0,0,0,.12); box-shad=
ow: var(--ds-segmented-button-box-shadow,var(--default-box-shadow)); }

.ds-segmented-button.ds-segmented-button--selected .ds-segmented-separator =
{ display: none; }

.ds-segmented-button { outline: none; }

.ds-segmented-button__shadow { pointer-events: none; transition: box-shadow=
 var(--ds-transition-duration)var(--ds-ease-in-out); z-index: 1; border-rad=
ius: 10px; position: absolute; inset: -2px; }

.ds-segmented-button:focus-visible .ds-segmented-button__shadow { box-shado=
w: 0 0 0 2px rgb(var(--ds-rgb-primary)); }

.ds-segmented-separator { width: 1px; height: var(--ds-font-size-m); backgr=
ound-color: rgba(var(--ds-rgb-segmented-separator)); flex-grow: 0; flex-shr=
ink: 0; position: absolute; right: 0px; }

.a1e75851 { border: solid 1px var(--dsr-main); width: 100%; color: var(--ds=
r-text-1); box-sizing: border-box; cursor: pointer; border-radius: 12px; al=
ign-items: center; margin-bottom: 8px; padding: 9px 12px; font-size: 14px; =
font-weight: 400; display: flex; }

.a1e75851:hover { background-color: var(--dsr-side-hover-bg); }

.a1e75851 ._106b9f9 { margin-left: 8px; display: flex; }

.b2b9a841 { color: var(--dsr-text-2); text-align: center; flex-direction: c=
olumn; font-size: 14px; display: flex; }

._9ee3298 { width: 160px; height: 160px; margin: 8px 0px; }

._41b9122 { color: var(--dsr-text-3); cursor: pointer; border-radius: 8px; =
justify-content: center; align-items: center; width: 36px; height: 36px; ma=
rgin-bottom: 22px; display: flex; }

._41b9122:hover { background-color: rgb(var(--ds-rgb-hover)); }

[data-ds-dark-theme] ._41b9122 { color: rgb(171, 178, 189); }

.c7f51894 { box-sizing: border-box; flex-direction: column; flex-shrink: 0;=
 align-items: center; padding: 10px 12px; line-height: 20px; display: flex;=
 }

@supports (padding-top:env(safe-area-inset-top)) {
  .b8812f16 { padding-top: env(safe-area-inset-top); padding-left: env(safe=
-area-inset-left); padding-right: env(safe-area-inset-right); padding-botto=
m: env(safe-area-inset-bottom); }
}

.b8812f16 { background-color: var(--dsr-side-bg); z-index: 1; flex-directio=
n: column; flex-grow: 0; flex-shrink: 0; min-width: 0px; display: flex; }

.b8812f16 .ebaea5d2 { align-items: center; margin-bottom: 34px; display: fl=
ex; }

.f0d4f23d { background-color: var(--dsr-side-bg); flex-direction: column; a=
lign-items: center; width: 68px; padding: 19px 0px; display: flex; }

.dc04ec1d { --local-sider-width: 260px; will-change: transform, max-width; =
transition: transform var(--ds-transition-duration-slow)var(--ds-ease-in-ou=
t),max-width var(--ds-transition-duration-slow)var(--ds-ease-in-out); }

.a2f3d50e { transition: transform var(--ds-transition-duration-slow)var(--d=
s-ease-in-out),opacity var(--ds-transition-duration-slow)var(--ds-ease-in-o=
ut); }

.a7f3a288 { transition: opacity .2s var(--ds-ease-in-out); }

.a2f3d50e { position: absolute; top: 0px; bottom: 0px; right: 0px; }

.dc04ec1d, .a2f3d50e { width: var(--local-sider-width); max-width: var(--lo=
cal-sider-width); }

.a7f3a288 { width: 68px; position: absolute; top: 0px; bottom: 0px; left: 0=
px; }

.dc04ec1d { z-index: 9; flex-shrink: 0; position: fixed; top: 0px; bottom: =
0px; transform: translate(0px); }

._4cbcd96 { transition: opacity var(--ds-transition-duration-slow)var(--ds-=
ease-in-out); opacity: 1; z-index: 8; background-color: rgba(0, 0, 0, 0.4);=
 position: fixed; inset: 0px; }

.dc04ec1d.a02af2e6 { transform: translateX(calc(-1*var(--local-sider-width)=
)); }

._70b689f { opacity: 0; user-select: none; pointer-events: none; transform:=
 translate(-100%); }

._7d10bb1 { opacity: 0; user-select: none; pointer-events: none; }

@media (min-width: 768px) {
  .dc04ec1d { width: var(--local-sider-width); max-width: var(--local-sider=
-width); position: relative; inset: 0px; }
  .dc04ec1d.a02af2e6 { max-width: 68px; left: 0px; transform: none; }
  .dc04ec1d.a02af2e6 .a7f3a288 { transform: translate(0px); }
  ._4cbcd96 { opacity: 0; pointer-events: none; }
}

.d8ed659a { cursor: pointer; white-space: nowrap; text-overflow: ellipsis; =
color: rgb(38, 38, 38); box-sizing: border-box; max-width: 100%; height: 40=
px; transition: box-shadow var(--ds-transition-duration)var(--ds-ease-in-ou=
t); border-radius: 12px; padding: 8px 12px; font-size: 14px; font-weight: 6=
00; line-height: 24px; overflow: hidden; }

.d8ed659a:hover { box-shadow: inset 0 0 0 1px rgb(var(--ds-rgb-separator-st=
rong)); }

.b9ba0ed4 { margin-top: 8px; }

.b9ba0ed4.ds-skeleton { --color-start: rgba(0,0,0,.04); --color-end: rgba(0=
,0,0,.06); }

[data-ds-dark-theme] .b9ba0ed4.ds-skeleton { --color-start: rgba(255,255,25=
5,.06); --color-end: rgba(255,255,255,.08); }

[data-ds-dark-theme] .d8ed659a { color: rgb(255, 255, 255); }

._3e307a2 { cursor: pointer; color: var(--dsr-text-0); text-overflow: ellip=
sis; white-space: nowrap; flex-shrink: 2; max-width: 100px; font-size: 16px=
; font-weight: 500; overflow: hidden; }

@media (min-width: 768px) {
  ._3e307a2 { max-width: 140px; margin-top: 18px; }
}

._2be88ba { box-sizing: border-box; background-color: rgb(255, 255, 255); f=
lex-grow: 0; flex-shrink: 0; justify-content: center; height: 56px; padding=
-top: 10px; display: flex; position: relative; }

._62b4800 { z-index: 5; pointer-events: none; background: linear-gradient(r=
gba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0) 100%); width: 97%; heigh=
t: 32px; position: absolute; top: 100%; left: 1px; }

._0efe408 { box-sizing: border-box; justify-content: space-between; align-i=
tems: center; width: 100%; padding: 0px 16px; display: flex; }

._3a24007 { border: solid 1px var(--dsr-main); color: var(--dsr-text-2); bo=
rder-radius: 12px; align-items: center; margin-left: 14px; margin-right: au=
to; padding: 1px 6px; font-size: 12px; font-weight: 500; display: flex; }

.d7829b2f { cursor: pointer; border-radius: 6px; padding: 4px; }

.d7829b2f._2e7d873 { margin-left: -4px; }

.d7829b2f._23ecf90 { margin-right: -4px; }

.d7829b2f:hover { background-color: var(--dsr-icon-hover-1); }

[data-ds-dark-theme] ._3a24007 { color: rgb(255, 255, 255); }

@media (min-width: 768px) {
  ._0efe408 { display: none; }
}

.f8d1e4c0 { display: none; }

@media (min-width: 768px) {
  .f8d1e4c0 { width: 0px; min-width: 0px; max-width: var(--message-list-max=
-width); flex: 1 1 0%; padding: 0px 32px; display: flex; }
}

[data-ds-dark-theme] ._2be88ba { background-color: var(--dsr-bg); }

[data-ds-dark-theme] ._0efe408 { opacity: 0.8; }

[data-ds-dark-theme] ._62b4800 { background: linear-gradient(rgba(41, 42, 4=
5, 0.8) 0%, rgba(41, 42, 45, 0) 100%); }

.fba535c8 { background-color: rgb(237, 242, 251); justify-content: center; =
align-items: center; display: flex; position: fixed; inset: 0px; }

._07c5e23 { flex-direction: column; justify-content: center; align-items: c=
enter; max-width: calc(-32px + 100vw); display: flex; }

.cfffee1e { font-size: 32px; font-weight: var(--ds-font-weight-strong); col=
or: rgb(var(--ds-rgb-label-1)); margin-bottom: 21px; line-height: 46px; }

._79a73be { display: flex; }

._79a73be > :not(:last-child) { margin-right: 16px; }

.f309f19b { white-space: pre-wrap; color: rgb(var(--ds-rgb-label-2)); width=
: 600px; max-width: calc(-32px + 100vw); font-size: 12px; line-height: 18px=
; }

[data-ds-dark-theme] .fba535c8 { background-color: rgb(64, 64, 77); }

.fffe1848 { --ds-modal-overlay-opacity: .24; background-color: rgba(0,0,0,v=
ar(--ds-modal-overlay-opacity)); z-index: 999; display: none; position: fix=
ed; inset: 0px; }

._5d271a3 { --ds-icon-button-text-color: #262626; width: 24px; height: 24px=
; }

[data-ds-dark-theme] ._5d271a3 { --ds-icon-button-text-color: #f8faff; }

._519be07 { z-index: 10; background-color: var(--dsr-bg); box-sizing: borde=
r-box; --sidebar-border-color: rgba(0,0,0,.06); border-left: 1px solid var(=
--sidebar-border-color); flex: 0 0 0px; width: 0px; margin-left: auto; tran=
sition: none 0.2s ease-out; overflow: hidden; box-shadow: rgba(42, 60, 79, =
0.1) 0px 6px 10px; }

._519be07 .ds-icon-button { --ds-icon-button-text-color: #262626; }

._519be07._4771b62 { flex-basis: var(--sidebar-width); width: var(--sidebar=
-width); transition-property: flex-basis; }

._519be07._27fc06b, ._519be07._3390f94 { flex-basis: var(--sidebar-width); =
width: var(--sidebar-width); }

._519be07._6c15980 { flex-basis: 0px; width: 0px; transition-property: flex=
-basis; }

._26c5bc2 { flex-direction: column; height: 100%; display: flex; }

[data-ds-dark-theme] ._519be07 { --sidebar-border-color: rgba(255,255,255,.=
12); }

[data-ds-dark-theme] ._519be07 .ds-icon-button { --ds-icon-button-text-colo=
r: #f8faff; }

._2c74d7a { box-sizing: border-box; height: 56px; color: var(--dsr-text-0);=
 border-bottom: 1px solid var(--sidebar-border-color); flex-shrink: 0; alig=
n-items: center; padding: 0px 20px; display: flex; }

._2c74d7a div[role=3D"heading"] { white-space: nowrap; text-overflow: ellip=
sis; flex: 1 1 0%; font-size: 14px; font-weight: 500; line-height: 22px; ov=
erflow: hidden; }

.fcd12e6e { flex-direction: column; flex-grow: 1; display: flex; overflow: =
hidden auto; }

@media not all and (min-width: 768px) {
  .fffe1848 { display: block; }
  ._519be07._519be07._519be07 { max-width: unset; --sidebar-width: 100vw; z=
-index: 1000; border: none; border-radius: 24px 24px 0px 0px; width: 100vw;=
 margin: 0px; position: absolute; inset: 20px 0px 0px; transform: translate=
Y(36px); }
  ._519be07._519be07._519be07._4771b62 { transition-property: transform; tr=
ansform: translateY(0px); }
  ._519be07._519be07._519be07._27fc06b { transform: translateY(0px); }
  ._519be07._519be07._519be07._6c15980 { display: none; }
  .fcd12e6e { max-width: unset !important; }
}

._3f79b51 { max-width: calc(-4rem + 54vw); font-size: 14px; line-height: 1.=
5; }

@media not all and (min-width: 1024px) {
  @media (min-width: 768px) and (max-color: 2147477350) {
  ._3f79b51 { --sidebar-width: calc(50vw - 4rem); }
}
}

@media (min-width: 1024px) {
  @media (min-width: 768px) and (color: 2147477350) {
  ._3f79b51 { --sidebar-width: calc(50vw - 4rem); }
}
  ._3f79b51 { --sidebar-width: calc(54vw - 4rem); }
}

._33fe369 { --sidebar-width: calc(50vw - 4rem); max-width: 400px; }

.dc433409 { flex-grow: 1; min-height: 0px; padding: 8px; }

.dc433409 ._79fcd13 { transition: background-color var(--ds-transition-dura=
tion)var(--ds-ease-in-out); border-radius: 8px; margin-bottom: 4px; padding=
: 10px 12px; }

.dc433409 ._79fcd13:hover { background-color: rgb(var(--ds-rgb-hover)); }

@media not all and (min-width: 640px) {
  .dc433409 { padding: 0px 6px; }
  .dc433409 ._79fcd13 { margin-bottom: 4px; }
}

._0632724 { max-width: 768px; margin: auto; padding: 0px 24px; }

.ds-alert { --ds-alert-font-size: var(--ds-font-size-m); --ds-alert-line-he=
ight: var(--ds-line-height-m); --icon-size: 21px; }

.ds-alert.ds-alert--warning { --alert-color: rgba(var(--ds-rgb-warning)/.06=
); --alert-text-color: rgb(var(--ds-rgb-warning)); --alert-box-shadow: 0 0 =
0 2px rgb(var(--ds-rgb-warning)); }

.ds-alert.ds-alert--warning:not(.ds-alert--bordered) { --alert-color: rgba(=
var(--ds-rgb-warning),.09); }

.ds-alert.ds-alert--success { --alert-color: rgba(var(--ds-rgb-success-rgb)=
/.06); --alert-text-color: rgb(var(--ds-rgb-success)); --alert-box-shadow: =
0 0 0 2px rgb(var(--ds-rgb-success)); }

.ds-alert.ds-alert--success:not(.ds-alert--bordered) { --alert-color: rgba(=
var(--ds-rgb-success-rgb),.09); }

.ds-alert.ds-alert--error { --alert-color: rgba(var(--ds-rgb-error)/.06); -=
-alert-text-color: rgb(var(--ds-rgb-error)); --alert-box-shadow: 0 0 0 2px =
rgb(var(--ds-rgb-error)); }

.ds-alert.ds-alert--error:not(.ds-alert--bordered) { --alert-color: rgba(va=
r(--ds-rgb-error),.09); }

.ds-alert.ds-alert--info { --alert-color: rgba(var(--ds-rgb-info)/.06); --a=
lert-text-color: rgb(var(--ds-rgb-info)); --alert-box-shadow: 0 0 0 2px rgb=
(var(--ds-rgb-info)); }

.ds-alert.ds-alert--info:not(.ds-alert--bordered) { --alert-color: rgba(var=
(--ds-rgb-info)/.09); }

body.dark .ds-alert.ds-alert--warning:not(.ds-alert--bordered) { --alert-co=
lor: rgba(var(--ds-rgb-warning)/.2); }

body.dark .ds-alert.ds-alert--success:not(.ds-alert--bordered) { --alert-co=
lor: rgba(var(--ds-rgb-success-rgb)/.2); }

body.dark .ds-alert.ds-alert--error:not(.ds-alert--bordered) { --alert-colo=
r: rgba(var(--ds-rgb-error)/.2); }

body.dark .ds-alert.ds-alert--info:not(.ds-alert--bordered) { --alert-color=
: rgba(var(--ds-rgb-info)/.2); }

.ds-alert { font-size: var(--ds-alert-font-size); line-height: var(--ds-ale=
rt-line-height); color: var(--alert-text-color); box-sizing: border-box; ba=
ckground-color: var(--alert-color); border-radius: 12px; align-items: cente=
r; padding: 14px; display: flex; position: relative; overflow: hidden; }

.ds-alert .ds-alert__content { flex: 1 1 0%; }

.ds-alert .ds-alert__icon { width: var(--icon-size); height: var(--icon-siz=
e); font-size: var(--icon-size); margin-right: 6px; display: flex; }

.ds-alert .ds-alert__icon svg { width: var(--icon-size); height: var(--icon=
-size); }

.ds-alert .ds-alert__icon--warning { color: rgb(var(--ds-rgb-warning)); }

.ds-alert .ds-alert__icon--success { color: rgb(var(--ds-rgb-success)); }

.ds-alert .ds-alert__icon--error { color: rgb(var(--ds-rgb-error)); }

.ds-alert .ds-alert__icon--info { color: rgb(var(--ds-rgb-info)); }

.ds-alert.ds-alert--bordered { box-shadow: var(--alert-box-shadow); }

.aaff8b8f { max-width: var(--message-list-max-width); flex-grow: 1; width: =
100%; position: relative; }

._77cefa5 { --padding: 14px; cursor: text; box-sizing: border-box; width: 1=
00%; font-size: var(--ds-font-size-l); line-height: var(--ds-line-height-l)=
; transition: box-shadow var(--ds-transition-duration)var(--ds-ease-in-out)=
; box-shadow: none; background-color: var(--dsr-bg); border-radius: 24px; f=
lex-direction: column; display: flex; position: relative; }

._77cefa5._1d5e44c { box-shadow: 0px 0px 0px .5px var(--dsr-input-border); =
padding: 8px 0px 0px; }

._77cefa5._1d5e44c ._7ca114c { color: var(--dsr-text-2); margin: 0px 0px 4p=
x 18px; font-size: 12px; line-height: 18px; }

._77cefa5 .dd442025 { background-color: var(--dsr-input-bg); box-shadow: 0p=
x 0px 0px .5px var(--dsr-input-border); border-radius: 24px; }

._77cefa5 ._42b6996 { z-index: 1; flex-direction: column; justify-content: =
flex-start; align-items: flex-start; padding: 10px; display: flex; overflow=
: hidden; }

._77cefa5 .ec4f5d61 { --function-row-offset: 2px; width: calc(100% - var(--=
function-row-offset)); padding-left: var(--function-row-offset); flex-wrap:=
 wrap; align-items: center; margin-top: 4px; display: flex; }

._77cefa5 .bf38813a { flex: 1 1 0%; justify-content: flex-end; align-items:=
 center; display: flex; }

._77cefa5 ._24fad49 { width: 100%; max-height: calc(12*var(--ds-line-height=
-l)); margin: 0px 4px; position: relative; }

._77cefa5 ._27c9245, ._77cefa5 .b13855df { font-size: inherit; line-height:=
 inherit; word-break: break-word; white-space: pre-wrap; border: none; widt=
h: 100%; margin: 0px; padding: 0px; font-family: inherit; display: block; i=
nset: 0px; overflow: auto; }

._77cefa5 ._27c9245 { resize: none; color: rgb(var(--ds-rgb-label-1)); care=
t-color: rgb(var(--ds-rgb-label-1)); background-color: transparent; positio=
n: absolute; }

._77cefa5 ._27c9245::placeholder { color: rgba(13, 13, 13, 0.3); }

._77cefa5 ._27c9245::placeholder { color: rgba(13, 13, 13, 0.3); }

._77cefa5 ._27c9245::placeholder { color: rgba(13, 13, 13, 0.3); }

._77cefa5 ._27c9245:focus { outline: none; }

._77cefa5 .b13855df { visibility: hidden; pointer-events: none; min-height:=
 56px; }

._7436101 { white-space: nowrap; cursor: pointer; color: rgb(255, 255, 255)=
; background: rgb(77, 107, 254); border: none; border-radius: 16px; flex-di=
rection: column; flex-shrink: 0; justify-content: center; align-items: cent=
er; min-width: 32px; height: 32px; margin-top: auto; display: flex; }

._7436101:hover { background-color: rgb(37, 99, 235); }

._7436101 ._6f28693 { justify-content: center; align-items: center; min-wid=
th: 28px; height: 28px; display: flex; }

._7436101 ._6f28693 > svg { width: calc(var(--ds-font-size-l) + 4px); heigh=
t: calc(var(--ds-font-size-l) + 4px); flex-shrink: 0; }

._7436101 ._5abf3e1 { min-width: fit-content; margin: 0px 4px; padding: 0px=
 4px; }

._7436101 .dbf3da68 { margin: -1px; }

._7436101 ._5d3faf4 { margin: 0px 4px; font-size: 14px; }

._7436101.bcc55ca1 { cursor: not-allowed; background-color: rgb(var(--ds-rg=
b-slate-250)); color: rgb(250, 250, 250); }

@media not all and (min-width: 640px) {
  .aaff8b8f { padding-top: 14px; }
  .ec4f5d61 { margin-left: 0px; }
}

._8ac69d6 { z-index: 10; pointer-events: none; opacity: 0.6; font-size: 14p=
x; position: absolute; bottom: 90%; }

._480132b { background: currentcolor; border-radius: 2px; flex-shrink: 0; w=
idth: 12px; height: 12px; margin: 1px; }

[data-ds-dark-theme] ._77cefa5 { border-color: rgb(83, 110, 140); }

[data-ds-dark-theme] ._77cefa5 textarea::placeholder { color: rgb(153, 154,=
 165); }

[data-ds-dark-theme] ._77cefa5 textarea::placeholder { color: rgb(153, 154,=
 165); }

[data-ds-dark-theme] ._77cefa5 textarea::placeholder { color: rgb(153, 154,=
 165); }

[data-ds-dark-theme] .dd442025 { box-shadow: rgba(192, 192, 192, 0.3) 0px 0=
px 0px 0.5px; }

[data-ds-dark-theme] ._7436101 { color: rgb(248, 250, 255); background-colo=
r: rgb(77, 107, 254); }

[data-ds-dark-theme] ._7436101:hover { background-color: rgb(79, 110, 202);=
 }

[data-ds-dark-theme] ._7436101.bcc55ca1 { color: rgb(75, 75, 91); backgroun=
d-color: rgb(var(--ds-rgb-zinc-500)); }

._9f00468 { z-index: 1000; backdrop-filter: blur(10px); background-color: r=
gba(255, 255, 255, 0.7); justify-content: center; align-items: center; widt=
h: 100%; height: 100%; display: flex; position: fixed; top: 0px; left: 0px;=
 }

._116ea5b { color: rgb(38, 38, 38); text-align: center; flex-direction: col=
umn; align-items: center; max-width: 485px; margin-top: -3%; display: flex;=
 }

._59bd16b { white-space: nowrap; width: fit-content; margin-top: 24px; font=
-size: 24px; line-height: 42px; }

._43a83ad { color: rgb(139, 139, 139); white-space: pre-wrap; margin-top: 1=
2px; font-size: 16px; font-weight: 400; line-height: 22px; }

[data-ds-dark-theme] ._9f00468 { background-color: rgba(39, 39, 48, 0.7); }

[data-ds-dark-theme] ._116ea5b { color: rgb(248, 250, 255); }

[data-ds-dark-theme] ._43a83ad { color: rgb(187, 187, 187); }

._0e98de6 { pointer-events: all; color: rgb(38, 38, 38); cursor: pointer; b=
ackground-color: rgb(255, 255, 255); border-radius: 50%; justify-content: c=
enter; align-items: center; width: 32px; height: 32px; margin-bottom: 20px;=
 display: flex; position: absolute; bottom: 100%; right: 12px; overflow: hi=
dden; box-shadow: rgb(237, 237, 237) 0px 0px 0px 1px inset; }

._0e98de6:hover { background-color: rgb(245, 245, 245); }

[data-ds-dark-theme] ._0e98de6 { color: rgb(248, 250, 255); background-colo=
r: rgb(50, 51, 62); box-shadow: rgb(82, 82, 82) 0px 0px 0px 1px inset; }

[data-ds-dark-theme] ._0e98de6:hover { background-color: rgb(68, 68, 77); }

._0fcaa63 { font-size: var(--ds-font-size-s); color: rgb(var(--ds-rgb-label=
-3)); margin: 6px 0px; line-height: 14px; }

[data-ds-dark-theme] ._0fcaa63 { color: rgb(115, 115, 115); }

._871cbca { background: linear-gradient(to bottom,transparent 0%,transparen=
t 30%,var(--dsr-bg)30%,var(--dsr-bg)100%); z-index: 7; flex-direction: colu=
mn; align-items: center; margin-top: auto; display: flex; position: sticky;=
 bottom: 0px; }

@media not all and (min-width: 640px) {
  ._871cbca { padding: 0px; }
}

._660ca72 { display: flex; position: absolute; inset: 0px; }

._660ca72 ._1551317 { z-index: 1; width: 100%; position: absolute; top: 0px=
; }

._9a2f8e4 { box-sizing: border-box; flex-direction: column; justify-content=
: center; align-items: center; width: 100%; max-width: 800px; height: 100%;=
 margin: auto; padding: 0px 16px; display: flex; position: relative; }

._5758a85 { color: rgb(0, 0, 0); text-align: center; flex-direction: column=
; flex-grow: 1; align-items: center; line-height: 24px; display: flex; }

._5758a85._803e2cf { flex-grow: 0; height: 50%; }

._5758a85 ._6c7e7df { align-items: center; gap: 14px; margin-top: auto; fon=
t-size: 24px; font-weight: 500; display: flex; }

._5758a85 ._9a8d0e1 { color: rgb(64, 64, 64); margin: 8px 0px 20px; font-si=
ze: 14px; }

._5758a85, .eb830e32 { transform: translateY(-7.5vh); }

@media not all and (min-width: 640px) {
  ._9a2f8e4 { padding: 0px 16px; }
  ._5758a85 { box-sizing: border-box; text-align: left; width: 100%; paddin=
g: 0px 34px; }
  ._5758a85 ._6c7e7df { flex-direction: column; align-items: flex-start; wi=
dth: 100%; font-size: 18px; line-height: 24px; }
  ._5758a85 ._6c7e7df .da6cda9a { position: relative; left: -8px; }
  ._5758a85 ._9a8d0e1 { width: 100%; margin: 14px 0px 6px; font-size: 14px;=
 line-height: 24px; }
}

._7941d9f { text-align: center; width: 100%; margin-top: auto; position: fi=
xed; bottom: 0px; }

._71d6bcf { margin-bottom: 26px; padding: 0px; }

[data-ds-dark-theme] ._5758a85 { color: rgb(255, 255, 255); }

[data-ds-dark-theme] ._9a8d0e1 { color: rgb(248, 250, 255); }

._6c50daf { background: unset; padding: 20px; position: relative; }

._4a23c6b { height: 200px; min-height: 200px; }

._121d384 { justify-content: space-between; align-items: center; width: 100=
%; padding: 6px 14px 6px 6px; display: flex; }

.d2a24f03 { flex-shrink: 0; }

._81e8954 { height: 26px; font-size: 12px; }

.efa13877 { height: 100%; color: var(--dsr-icon-fg-1); align-items: center;=
 display: flex; }

.e4ec2a75 { color: var(--dsr-icon-fg-1); cursor: pointer; user-select: none=
; border-radius: 50%; justify-content: center; align-items: center; width: =
16px; height: 16px; margin-right: 16px; display: flex; }

.e4ec2a75.f199b2c5 { cursor: not-allowed; opacity: 0.45; }

.ae809fef { background-color: var(--dsr-border-1); width: 1px; height: 14px=
; margin-right: 16px; }

.d813de27 { color: var(--dsr-text-2); margin-left: 8px; font-size: 12px; li=
ne-height: 18px; }

._3343133 { cursor: not-allowed; opacity: 0.45; }

._7db3914 .ds-button__icon { margin-right: 4px; }

:root { --message-list-padding-horizontal: 16px; --message-list-max-width: =
800px; }

.cb86951c { flex-direction: column; display: flex; position: absolute; inse=
t: 0px; overflow: hidden; }

@supports (top:env(safe-area-inset-top)) {
  .cb86951c { padding-top: env(safe-area-inset-top); padding-left: env(safe=
-area-inset-left); padding-right: env(safe-area-inset-right); padding-botto=
m: env(safe-area-inset-bottom); }
}

.c3ecdb44 { flex: 1 1 0%; align-items: stretch; min-height: 0px; display: f=
lex; }

.cddfb2ed { flex-shrink: 0; }

._7780f2e { flex-direction: row; flex-grow: 1; min-width: 0px; display: fle=
x; }

._7780f2e ._765a5cd { width: var(--message-list-max-width); flex-direction:=
 column; flex: 1 1 0%; max-width: 100%; display: flex; position: relative; =
}

._7463b82 { color: rgb(var(--ds-rgb-neutral-600)); margin: 30px; font-size:=
 12px; line-height: 18px; }

.f0b28104 { justify-content: center; align-items: center; height: 30vh; dis=
play: flex; }

.cookie_banner-wrap { box-sizing: border-box; background: var(--dsr-bg); z-=
index: 1020; border-radius: 16px; width: calc(100% - 32px); padding: 20px; =
position: fixed; bottom: 12px; left: 16px; box-shadow: rgba(0, 0, 0, 0.2) 0=
px 0px 1px, rgba(0, 0, 0, 0.02) 0px 0px 4px, rgba(0, 0, 0, 0.12) 0px 12px 3=
6px; }

.cookie_banner-wrap .cookie_banner-title { color: var(--dsr-text-1); font-s=
ize: 16px; font-weight: 600; line-height: 140%; }

.cookie_banner-wrap .cookie_banner-description { color: var(--dsr-text-2,#5=
25252); margin-top: 8px; font-size: 14px; line-height: 140%; }

.cookie_banner-wrap .cookie_banner-description a { color: var(--dsr-text-0,=
#000); text-underline-position: from-font; cursor: pointer; text-decoration=
-line: underline; text-decoration-style: solid; }

.cookie_banner-wrap .cookie_banner-accept-essential-button, .cookie_banner-=
wrap .cookie_banner-accept-all-button { justify-content: center; align-item=
s: center; width: 100%; height: auto; padding: 12px; line-height: 20px; }

.cookie_banner-wrap .cookie_banner-accept-essential-button { margin-top: 16=
px; }

.cookie_banner-wrap .cookie_banner-accept-all-button { margin-top: 8px; }

@media (min-width: 768px) {
  .cookie_banner-wrap { width: 400px; }
}

[data-ds-dark-theme] .cookie_banner-wrap { background-color: rgb(58, 58, 70=
) !important; }

[data-ds-dark-theme] .cookie_banner-accept-essential-button:hover { backgro=
und-color: unset !important; }

._363cb01 { --age-gate-bg: var(--dsr-button-grey-1); background: var(--dsr-=
bg,#fff); box-sizing: border-box; border-radius: 16px; width: min(420px, -3=
2px + 100vw); padding: 24px; box-shadow: rgba(0, 0, 0, 0.06) 0px 4px 8px, r=
gba(0, 0, 0, 0.08) 0px 2px 12px, rgba(0, 0, 0, 0.08) 0px 0px 4px; }

[data-ds-dark-theme] ._363cb01 { --age-gate-bg: #555562; background: rgb(58=
, 58, 70); }

._3ad1932 { color: var(--dsr-text-1,#262626); font-size: 18px; font-weight:=
 500; line-height: 25px; }

._93e2bfa { color: var(--dsr-text-3,#a3a3a3); margin-top: 8px; font-size: 1=
4px; line-height: 20px; }

.bdf05640 { align-items: center; margin-top: 20px; display: flex; }

._3340925 { background: var(--dsr-main); color: rgb(255, 255, 255); justify=
-content: center; width: 100%; height: 44px; margin-top: 20px; font-size: 1=
4px; font-weight: 500; }

._3340925:hover { background: var(--dsr-main) !important; }

.ds-select { --ds-select-placeholder-color: rgb(var(--ds-rgb-label-3)); cur=
sor: pointer; width: 100%; color: rgb(var(--ds-rgb-label-1)); font-size: va=
r(--font-size); line-height: var(--line-height); height: var(--height); box=
-sizing: border-box; border-radius: var(--border-radius); transition: backg=
round-color var(--ds-transition-duration)var(--ds-ease-in-out),box-shadow v=
ar(--ds-transition-duration)var(--ds-ease-in-out),color var(--ds-transition=
-duration)var(--ds-ease-in-out); outline: none; align-items: center; displa=
y: flex; position: relative; }

.ds-select.ds-select--disabled .ds-select__select, .ds-select.ds-select--di=
sabled .ds-select__input, .ds-select.ds-select--disabled .ds-select__arrow =
{ cursor: not-allowed; }

.ds-select.ds-select--disabled { opacity: 0.45; }

.ds-select .ds-select__placeholder, .ds-select .ds-select__select, .ds-sele=
ct .ds-select__input { white-space: nowrap; font-size: inherit; padding: 0p=
x 28px 0px 10px; }

.ds-select .ds-select__placeholder, .ds-select .ds-select__select { cursor:=
 inherit; user-select: none; align-items: center; display: flex; }

.ds-select .ds-select__input { caret-color: rgb(var(--ds-rgb-primary)); bac=
kground-color: transparent; border: none; outline: none; position: absolute=
; inset: 0px; }

.ds-select .ds-select__placeholder { width: 100%; height: 100%; color: var(=
--ds-select-placeholder-color); }

.ds-select .ds-select__select { color: inherit; appearance: none; border-ra=
dius: inherit; width: 100%; height: 100%; transition: opacity var(--ds-tran=
sition-duration)var(--ds-ease-in-out); background-color: transparent; borde=
r: none; outline: none; }

.ds-select .ds-select__select.ds-select__select--placeholder { opacity: 0.4=
5; }

.ds-select .ds-select__arrow { pointer-events: none; color: rgb(var(--ds-rg=
b-label-2)); display: flex; position: absolute; top: 50%; right: 8px; trans=
form: translateY(-50%); }

.ds-select .ds-select__arrow svg { width: 14px; height: 14px; }

.ds-select.ds-select--none:focus { background-color: rgb(var(--ds-rgb-input=
-focus)); box-shadow: inset 0 0 0 2px rgb(var(--ds-rgb-primary)); }

.ds-select.ds-select--none:focus-within { background-color: rgb(var(--ds-rg=
b-input-focus)); box-shadow: inset 0 0 0 2px rgb(var(--ds-rgb-primary)); }

.ds-select.ds-select--filled.ds-select--error:focus, .ds-select.ds-select--=
bordered.ds-select--error:focus { background-color: rgb(var(--ds-rgb-input-=
focus)); }

.ds-select.ds-select--filled.ds-select--error:focus-within { background-col=
or: rgb(var(--ds-rgb-input-focus)); }

.ds-select.ds-select--bordered.ds-select--error:focus-within { background-c=
olor: rgb(var(--ds-rgb-input-focus)); }

.ds-select.ds-select--filled.ds-select--error, .ds-select.ds-select--border=
ed.ds-select--error { background-color: rgba(var(--ds-rgb-error)/.06); box-=
shadow: inset 0 0 0 2px rgb(var(--ds-rgb-error)); }

.ds-select.ds-select--filled { background-color: rgb(var(--ds-rgb-input)); =
}

.ds-select.ds-select--bordered { box-shadow: inset 0 0 0 1px rgb(var(--ds-r=
gb-separator)); }

.ds-select.ds-select--l { --height: var(--ds-input-height-l); --font-size: =
var(--ds-font-size-l); --line-height: var(--ds-line-height-l); --border-rad=
ius: 10px; }

.ds-select.ds-select--m { --height: var(--ds-input-height-m); --font-size: =
var(--ds-font-size-m); --line-height: var(--ds-line-height-m); --border-rad=
ius: 10px; }

.ds-select.ds-select--s { --height: var(--ds-input-height-s); --font-size: =
var(--ds-font-size-s); --line-height: var(--ds-line-height-s); --border-rad=
ius: 10px; }

.ds-select.ds-select--xs { --height: var(--ds-input-height-xs); --font-size=
: var(--ds-font-size-xs); --line-height: var(--ds-line-height-xs); --border=
-radius: 8px; }

.ds-select-menu { --ds-select-menu-color: rgb(var(--ds-rgb-elevated)); --ds=
-select-menu-option-color-hover: rgb(var(--ds-rgb-hover)); --ds-select-menu=
-option-text-color: rgb(var(--ds-rgb-label-1)); --ds-select-menu-option-tex=
t-color-selected: rgb(var(--ds-rgb-primary)); --ds-select-menu-option-color=
-selected: rgba(var(--ds-rgb-primary-rgb)/.12); --ds-select-menu-option-fon=
t-size: var(--ds-font-size-m); --ds-select-menu-option-line-height: var(--d=
s-line-height-m); --ds-select-menu-option-height: 28px; --ds-select-menu-pa=
dding: 4px; --ds-select-menu-option-padding: 8px 14px; color: var(--ds-sele=
ct-menu-option-text-color); background-color: var(--ds-select-menu-color); =
max-height: calc(var(--ds-select-menu-option-height)*8.5); border-radius: 1=
0px; padding: 4px; overflow: auto; box-shadow: rgba(0, 0, 0, 0.12) 0px 8px =
24px; }

.ds-select-option { min-height: var(--ds-select-menu-option-height); paddin=
g: var(--ds-select-menu-option-padding); box-sizing: border-box; font-size:=
 var(--ds-select-menu-option-font-size); line-height: var(--ds-select-menu-=
option-line-height); transition: background-color var(--ds-transition-durat=
ion)var(--ds-ease-in-out),color var(--ds-transition-duration)var(--ds-ease-=
in-out); cursor: pointer; user-select: none; border-radius: 8px; align-item=
s: center; display: flex; }

.ds-select-option:hover, .ds-select-option.ds-select-option--pending { back=
ground-color: var(--ds-select-menu-option-color-hover); }

.ds-select-option.ds-select-option--selected { color: var(--ds-select-menu-=
option-text-color-selected); background-color: var(--ds-select-menu-option-=
color-selected); }

.ds-select-menu__not-found { min-height: var(--ds-select-menu-option-height=
); box-sizing: border-box; font-size: var(--ds-select-menu-option-font-size=
); line-height: var(--ds-select-menu-option-line-height); color: rgb(var(--=
ds-rgb-label-3)); justify-content: center; align-items: center; padding: 8p=
x 16px; display: flex; }

.ds-select-menu__skeleton { min-height: var(--ds-select-menu-option-height)=
; padding: 8px; }

.ds-select-menu__skeleton .ds-select-menu__skeleton-item { margin-bottom: 8=
px; }

.ds-select-menu__skeleton .ds-select-menu__skeleton-item:last-child { margi=
n-bottom: 0px; }

:root, page { --ds-rgb-black: 0 0 0; --ds-rgb-white: 255 255 255; --ds-rgb-=
slate-50: 248 250 252; --ds-rgb-slate-100: 241 245 249; --ds-rgb-slate-150:=
 233 238 244; --ds-rgb-slate-200: 226 232 240; --ds-rgb-slate-250: 214 222 =
232; --ds-rgb-slate-300: 203 213 225; --ds-rgb-slate-350: 175 188 204; --ds=
-rgb-slate-400: 148 163 184; --ds-rgb-slate-450: 124 139 161; --ds-rgb-slat=
e-500: 100 116 139; --ds-rgb-slate-550: 85 100 122; --ds-rgb-slate-600: 71 =
85 105; --ds-rgb-slate-650: 61 75 95; --ds-rgb-slate-700: 51 65 85; --ds-rg=
b-slate-750: 40 53 72; --ds-rgb-slate-800: 30 41 59; --ds-rgb-slate-850: 22=
 32 50; --ds-rgb-slate-900: 15 23 42; --ds-rgb-slate-950: 2 6 23; --ds-rgb-=
gray-50: 249 250 251; --ds-rgb-gray-100: 243 244 246; --ds-rgb-gray-150: 23=
6 237 240; --ds-rgb-gray-200: 229 231 235; --ds-rgb-gray-250: 219 222 227; =
--ds-rgb-gray-300: 209 213 219; --ds-rgb-gray-350: 182 188 197; --ds-rgb-gr=
ay-400: 156 163 175; --ds-rgb-gray-450: 131 138 151; --ds-rgb-gray-500: 107=
 114 128; --ds-rgb-gray-550: 91 99 113; --ds-rgb-gray-600: 75 85 99; --ds-r=
gb-gray-650: 65 75 90; --ds-rgb-gray-700: 55 65 81; --ds-rgb-gray-750: 43 5=
3 68; --ds-rgb-gray-800: 31 41 55; --ds-rgb-gray-850: 24 32 47; --ds-rgb-gr=
ay-900: 17 24 39; --ds-rgb-gray-950: 3 7 18; --ds-rgb-zinc-50: 250 250 250;=
 --ds-rgb-zinc-100: 244 244 245; --ds-rgb-zinc-150: 236 236 238; --ds-rgb-z=
inc-200: 228 228 231; --ds-rgb-zinc-250: 220 220 223; --ds-rgb-zinc-300: 21=
2 212 216; --ds-rgb-zinc-350: 186 186 193; --ds-rgb-zinc-400: 161 161 170; =
--ds-rgb-zinc-450: 137 137 146; --ds-rgb-zinc-500: 113 113 122; --ds-rgb-zi=
nc-550: 97 97 106; --ds-rgb-zinc-600: 82 82 91; --ds-rgb-zinc-650: 72 72 80=
; --ds-rgb-zinc-700: 63 63 70; --ds-rgb-zinc-750: 51 51 56; --ds-rgb-zinc-8=
00: 39 39 42; --ds-rgb-zinc-850: 31 31 34; --ds-rgb-zinc-900: 24 24 27; --d=
s-rgb-zinc-950: 9 9 11; --ds-rgb-neutral-50: 250 250 250; --ds-rgb-neutral-=
100: 245 245 245; --ds-rgb-neutral-150: 237 237 237; --ds-rgb-neutral-200: =
229 229 229; --ds-rgb-neutral-250: 220 220 220; --ds-rgb-neutral-300: 212 2=
12 212; --ds-rgb-neutral-350: 187 187 187; --ds-rgb-neutral-400: 163 163 16=
3; --ds-rgb-neutral-450: 139 139 139; --ds-rgb-neutral-500: 115 115 115; --=
ds-rgb-neutral-550: 98 98 98; --ds-rgb-neutral-600: 82 82 82; --ds-rgb-neut=
ral-650: 73 73 73; --ds-rgb-neutral-700: 64 64 64; --ds-rgb-neutral-750: 51=
 51 51; --ds-rgb-neutral-800: 38 38 38; --ds-rgb-neutral-850: 30 30 30; --d=
s-rgb-neutral-900: 23 23 23; --ds-rgb-neutral-950: 10 10 10; --ds-rgb-stone=
-50: 250 250 249; --ds-rgb-stone-100: 245 245 244; --ds-rgb-stone-150: 238 =
237 236; --ds-rgb-stone-200: 231 229 228; --ds-rgb-stone-250: 222 220 218; =
--ds-rgb-stone-300: 214 211 209; --ds-rgb-stone-350: 191 186 183; --ds-rgb-=
stone-400: 168 162 158; --ds-rgb-stone-450: 144 137 133; --ds-rgb-stone-500=
: 120 113 108; --ds-rgb-stone-550: 103 98 93; --ds-rgb-stone-600: 87 83 78;=
 --ds-rgb-stone-650: 77 73 69; --ds-rgb-stone-700: 68 64 60; --ds-rgb-stone=
-750: 54 50 48; --ds-rgb-stone-800: 41 37 36; --ds-rgb-stone-850: 34 31 29;=
 --ds-rgb-stone-900: 28 25 23; --ds-rgb-stone-950: 12 10 9; --ds-rgb-red-50=
: 254 242 242; --ds-rgb-red-100: 254 226 226; --ds-rgb-red-150: 254 214 214=
; --ds-rgb-red-200: 254 202 202; --ds-rgb-red-250: 253 183 183; --ds-rgb-re=
d-300: 252 165 165; --ds-rgb-red-350: 250 139 139; --ds-rgb-red-400: 248 11=
3 113; --ds-rgb-red-450: 243 90 90; --ds-rgb-red-500: 239 68 68; --ds-rgb-r=
ed-550: 229 53 53; --ds-rgb-red-600: 220 38 38; --ds-rgb-red-650: 202 33 33=
; --ds-rgb-red-700: 185 28 28; --ds-rgb-red-750: 169 27 27; --ds-rgb-red-80=
0: 153 27 27; --ds-rgb-red-850: 140 28 28; --ds-rgb-red-900: 127 29 29; --d=
s-rgb-red-950: 69 10 10; --ds-rgb-orange-50: 255 247 237; --ds-rgb-orange-1=
00: 255 237 213; --ds-rgb-orange-150: 254 226 191; --ds-rgb-orange-200: 254=
 215 170; --ds-rgb-orange-250: 253 200 143; --ds-rgb-orange-300: 253 186 11=
6; --ds-rgb-orange-350: 252 166 88; --ds-rgb-orange-400: 251 146 60; --ds-r=
gb-orange-450: 250 130 41; --ds-rgb-orange-500: 249 115 22; --ds-rgb-orange=
-550: 241 101 17; --ds-rgb-orange-600: 234 88 12; --ds-rgb-orange-650: 214 =
76 12; --ds-rgb-orange-700: 194 65 12; --ds-rgb-orange-750: 174 58 15; --ds=
-rgb-orange-800: 154 52 18; --ds-rgb-orange-850: 139 48 18; --ds-rgb-orange=
-900: 124 45 18; --ds-rgb-orange-950: 67 20 7; --ds-rgb-amber-50: 255 251 2=
35; --ds-rgb-amber-100: 254 243 199; --ds-rgb-amber-150: 253 236 168; --ds-=
rgb-amber-200: 253 230 138; --ds-rgb-amber-250: 252 220 107; --ds-rgb-amber=
-300: 252 211 77; --ds-rgb-amber-350: 251 201 56; --ds-rgb-amber-400: 251 1=
91 36; --ds-rgb-amber-450: 248 174 23; --ds-rgb-amber-500: 245 158 11; --ds=
-rgb-amber-550: 231 138 8; --ds-rgb-amber-600: 217 119 6; --ds-rgb-amber-65=
0: 198 101 7; --ds-rgb-amber-700: 180 83 9; --ds-rgb-amber-750: 163 73 11; =
--ds-rgb-amber-800: 146 64 14; --ds-rgb-amber-850: 133 58 14; --ds-rgb-ambe=
r-900: 120 53 15; --ds-rgb-amber-950: 69 26 3; --ds-rgb-yellow-50: 254 252 =
232; --ds-rgb-yellow-100: 254 249 195; --ds-rgb-yellow-150: 254 244 166; --=
ds-rgb-yellow-200: 254 240 138; --ds-rgb-yellow-250: 253 232 104; --ds-rgb-=
yellow-300: 253 224 71; --ds-rgb-yellow-350: 251 214 46; --ds-rgb-yellow-40=
0: 250 204 21; --ds-rgb-yellow-450: 242 191 14; --ds-rgb-yellow-500: 234 17=
9 8; --ds-rgb-yellow-550: 218 158 6; --ds-rgb-yellow-600: 202 138 4; --ds-r=
gb-yellow-650: 181 118 5; --ds-rgb-yellow-700: 161 98 7; --ds-rgb-yellow-75=
0: 147 87 10; --ds-rgb-yellow-800: 133 77 14; --ds-rgb-yellow-850: 123 70 1=
6; --ds-rgb-yellow-900: 113 63 18; --ds-rgb-yellow-950: 66 32 6; --ds-rgb-l=
ime-50: 247 254 231; --ds-rgb-lime-100: 236 252 203; --ds-rgb-lime-150: 226=
 250 180; --ds-rgb-lime-200: 217 249 157; --ds-rgb-lime-250: 203 245 128; -=
-ds-rgb-lime-300: 190 242 100; --ds-rgb-lime-350: 176 236 76; --ds-rgb-lime=
-400: 163 230 53; --ds-rgb-lime-450: 147 217 37; --ds-rgb-lime-500: 132 204=
 22; --ds-rgb-lime-550: 116 183 17; --ds-rgb-lime-600: 101 163 13; --ds-rgb=
-lime-650: 89 143 14; --ds-rgb-lime-700: 77 124 15; --ds-rgb-lime-750: 70 1=
11 16; --ds-rgb-lime-800: 63 98 18; --ds-rgb-lime-850: 58 90 19; --ds-rgb-l=
ime-900: 54 83 20; --ds-rgb-lime-950: 26 46 5; --ds-rgb-green-50: 240 253 2=
44; --ds-rgb-green-100: 220 252 231; --ds-rgb-green-150: 203 249 219; --ds-=
rgb-green-200: 187 247 208; --ds-rgb-green-250: 160 243 190; --ds-rgb-green=
-300: 134 239 172; --ds-rgb-green-350: 104 230 150; --ds-rgb-green-400: 74 =
222 128; --ds-rgb-green-450: 54 209 111; --ds-rgb-green-500: 34 197 94; --d=
s-rgb-green-550: 28 180 84; --ds-rgb-green-600: 22 163 74; --ds-rgb-green-6=
50: 21 145 67; --ds-rgb-green-700: 21 128 61; --ds-rgb-green-750: 21 114 56=
; --ds-rgb-green-800: 22 101 52; --ds-rgb-green-850: 21 92 48; --ds-rgb-gre=
en-900: 20 83 45; --ds-rgb-green-950: 5 46 22; --ds-rgb-emerald-50: 236 253=
 245; --ds-rgb-emerald-100: 209 250 229; --ds-rgb-emerald-150: 188 246 218;=
 --ds-rgb-emerald-200: 167 243 208; --ds-rgb-emerald-250: 138 237 195; --ds=
-rgb-emerald-300: 110 231 183; --ds-rgb-emerald-350: 81 221 168; --ds-rgb-e=
merald-400: 52 211 153; --ds-rgb-emerald-450: 34 198 141; --ds-rgb-emerald-=
500: 16 185 129; --ds-rgb-emerald-550: 10 167 117; --ds-rgb-emerald-600: 5 =
150 105; --ds-rgb-emerald-650: 4 135 96; --ds-rgb-emerald-700: 4 120 87; --=
ds-rgb-emerald-750: 5 107 78; --ds-rgb-emerald-800: 6 95 70; --ds-rgb-emera=
ld-850: 6 86 64; --ds-rgb-emerald-900: 6 78 59; --ds-rgb-emerald-950: 2 44 =
34; --ds-rgb-teal-50: 240 253 250; --ds-rgb-teal-100: 204 251 241; --ds-rgb=
-teal-150: 178 248 234; --ds-rgb-teal-200: 153 246 228; --ds-rgb-teal-250: =
123 240 220; --ds-rgb-teal-300: 94 234 212; --ds-rgb-teal-350: 69 223 201; =
--ds-rgb-teal-400: 45 212 191; --ds-rgb-teal-450: 32 198 178; --ds-rgb-teal=
-500: 20 184 166; --ds-rgb-teal-550: 16 166 151; --ds-rgb-teal-600: 13 148 =
136; --ds-rgb-teal-650: 14 133 123; --ds-rgb-teal-700: 15 118 110; --ds-rgb=
-teal-750: 16 106 99; --ds-rgb-teal-800: 17 94 89; --ds-rgb-teal-850: 18 86=
 81; --ds-rgb-teal-900: 19 78 74; --ds-rgb-teal-950: 4 47 46; --ds-rgb-cyan=
-50: 236 254 255; --ds-rgb-cyan-100: 207 250 254; --ds-rgb-cyan-150: 186 24=
6 253; --ds-rgb-cyan-200: 165 243 252; --ds-rgb-cyan-250: 134 237 250; --ds=
-rgb-cyan-300: 103 232 249; --ds-rgb-cyan-350: 68 221 243; --ds-rgb-cyan-40=
0: 34 211 238; --ds-rgb-cyan-450: 20 196 225; --ds-rgb-cyan-500: 6 182 212;=
 --ds-rgb-cyan-550: 7 163 195; --ds-rgb-cyan-600: 8 145 178; --ds-rgb-cyan-=
650: 11 130 161; --ds-rgb-cyan-700: 14 116 144; --ds-rgb-cyan-750: 17 105 1=
30; --ds-rgb-cyan-800: 21 94 117; --ds-rgb-cyan-850: 21 86 108; --ds-rgb-cy=
an-900: 22 78 99; --ds-rgb-cyan-950: 8 51 68; --ds-rgb-sky-50: 240 249 255;=
 --ds-rgb-sky-100: 224 242 254; --ds-rgb-sky-150: 205 236 253; --ds-rgb-sky=
-200: 186 230 253; --ds-rgb-sky-250: 155 220 252; --ds-rgb-sky-300: 125 211=
 252; --ds-rgb-sky-350: 90 200 250; --ds-rgb-sky-400: 56 189 248; --ds-rgb-=
sky-450: 35 177 240; --ds-rgb-sky-500: 14 165 233; --ds-rgb-sky-550: 8 148 =
216; --ds-rgb-sky-600: 2 132 199; --ds-rgb-sky-650: 2 118 180; --ds-rgb-sky=
-700: 3 105 161; --ds-rgb-sky-750: 5 97 147; --ds-rgb-sky-800: 7 89 133; --=
ds-rgb-sky-850: 9 81 121; --ds-rgb-sky-900: 12 74 110; --ds-rgb-sky-950: 8 =
47 73; --ds-rgb-blue-50: 239 246 255; --ds-rgb-blue-100: 219 234 254; --ds-=
rgb-blue-150: 205 226 254; --ds-rgb-blue-200: 191 219 254; --ds-rgb-blue-25=
0: 169 208 253; --ds-rgb-blue-300: 147 197 253; --ds-rgb-blue-350: 121 181 =
251; --ds-rgb-blue-400: 96 165 250; --ds-rgb-blue-450: 77 147 248; --ds-rgb=
-blue-500: 59 130 246; --ds-rgb-blue-550: 48 114 240; --ds-rgb-blue-600: 37=
 99 235; --ds-rgb-blue-650: 33 88 225; --ds-rgb-blue-700: 29 78 216; --ds-r=
gb-blue-750: 29 71 195; --ds-rgb-blue-800: 30 64 175; --ds-rgb-blue-850: 30=
 61 156; --ds-rgb-blue-900: 30 58 138; --ds-rgb-blue-950: 23 37 84; --ds-rg=
b-indigo-50: 238 242 255; --ds-rgb-indigo-100: 224 231 255; --ds-rgb-indigo=
-150: 211 220 254; --ds-rgb-indigo-200: 199 210 254; --ds-rgb-indigo-250: 1=
82 195 253; --ds-rgb-indigo-300: 165 180 252; --ds-rgb-indigo-350: 147 160 =
250; --ds-rgb-indigo-400: 129 140 248; --ds-rgb-indigo-450: 114 121 244; --=
ds-rgb-indigo-500: 99 102 241; --ds-rgb-indigo-550: 89 86 235; --ds-rgb-ind=
igo-600: 79 70 229; --ds-rgb-indigo-650: 73 63 215; --ds-rgb-indigo-700: 67=
 56 202; --ds-rgb-indigo-750: 61 52 182; --ds-rgb-indigo-800: 55 48 163; --=
ds-rgb-indigo-850: 52 47 146; --ds-rgb-indigo-900: 49 46 129; --ds-rgb-indi=
go-950: 30 27 75; --ds-rgb-violet-50: 245 243 255; --ds-rgb-violet-100: 237=
 233 254; --ds-rgb-violet-150: 229 223 254; --ds-rgb-violet-200: 221 214 25=
4; --ds-rgb-violet-250: 208 197 253; --ds-rgb-violet-300: 196 181 253; --ds=
-rgb-violet-350: 181 160 251; --ds-rgb-violet-400: 167 139 250; --ds-rgb-vi=
olet-450: 153 115 248; --ds-rgb-violet-500: 139 92 246; --ds-rgb-violet-550=
: 131 75 241; --ds-rgb-violet-600: 124 58 237; --ds-rgb-violet-650: 116 49 =
227; --ds-rgb-violet-700: 109 40 217; --ds-rgb-violet-750: 100 36 199; --ds=
-rgb-violet-800: 91 33 182; --ds-rgb-violet-850: 83 31 165; --ds-rgb-violet=
-900: 76 29 149; --ds-rgb-violet-950: 46 16 101; --ds-rgb-purple-50: 250 24=
5 255; --ds-rgb-purple-100: 243 232 255; --ds-rgb-purple-150: 238 222 255; =
--ds-rgb-purple-200: 233 213 255; --ds-rgb-purple-250: 224 196 254; --ds-rg=
b-purple-300: 216 180 254; --ds-rgb-purple-350: 204 156 253; --ds-rgb-purpl=
e-400: 192 132 252; --ds-rgb-purple-450: 180 108 249; --ds-rgb-purple-500: =
168 85 247; --ds-rgb-purple-550: 157 68 240; --ds-rgb-purple-600: 147 51 23=
4; --ds-rgb-purple-650: 136 42 220; --ds-rgb-purple-700: 126 34 206; --ds-r=
gb-purple-750: 116 33 187; --ds-rgb-purple-800: 107 33 168; --ds-rgb-purple=
-850: 97 30 151; --ds-rgb-purple-900: 88 28 135; --ds-rgb-purple-950: 59 7 =
100; --ds-rgb-fuchsia-50: 253 244 255; --ds-rgb-fuchsia-100: 250 232 255; -=
-ds-rgb-fuchsia-150: 247 220 254; --ds-rgb-fuchsia-200: 245 208 254; --ds-r=
gb-fuchsia-250: 242 189 253; --ds-rgb-fuchsia-300: 240 171 252; --ds-rgb-fu=
chsia-350: 236 146 250; --ds-rgb-fuchsia-400: 232 121 249; --ds-rgb-fuchsia=
-450: 224 95 244; --ds-rgb-fuchsia-500: 217 70 239; --ds-rgb-fuchsia-550: 2=
04 54 225; --ds-rgb-fuchsia-600: 192 38 211; --ds-rgb-fuchsia-650: 177 33 1=
93; --ds-rgb-fuchsia-700: 162 28 175; --ds-rgb-fuchsia-750: 148 26 159; --d=
s-rgb-fuchsia-800: 134 25 143; --ds-rgb-fuchsia-850: 123 25 130; --ds-rgb-f=
uchsia-900: 112 26 117; --ds-rgb-fuchsia-950: 74 4 78; --ds-rgb-pink-50: 25=
3 242 248; --ds-rgb-pink-100: 252 231 243; --ds-rgb-pink-150: 251 219 237; =
--ds-rgb-pink-200: 251 207 232; --ds-rgb-pink-250: 250 187 222; --ds-rgb-pi=
nk-300: 249 168 212; --ds-rgb-pink-350: 246 141 197; --ds-rgb-pink-400: 244=
 114 182; --ds-rgb-pink-450: 240 93 167; --ds-rgb-pink-500: 236 72 153; --d=
s-rgb-pink-550: 227 55 136; --ds-rgb-pink-600: 219 39 119; --ds-rgb-pink-65=
0: 204 31 106; --ds-rgb-pink-700: 190 24 93; --ds-rgb-pink-750: 173 23 85; =
--ds-rgb-pink-800: 157 23 77; --ds-rgb-pink-850: 144 23 72; --ds-rgb-pink-9=
00: 131 24 67; --ds-rgb-pink-950: 80 7 36; --ds-rgb-rose-50: 255 241 242; -=
-ds-rgb-rose-100: 255 228 230; --ds-rgb-rose-150: 254 216 220; --ds-rgb-ros=
e-200: 254 205 211; --ds-rgb-rose-250: 253 184 193; --ds-rgb-rose-300: 253 =
164 175; --ds-rgb-rose-350: 252 138 154; --ds-rgb-rose-400: 251 113 133; --=
ds-rgb-rose-450: 247 88 113; --ds-rgb-rose-500: 244 63 94; --ds-rgb-rose-55=
0: 234 46 83; --ds-rgb-rose-600: 225 29 72; --ds-rgb-rose-650: 207 23 66; -=
-ds-rgb-rose-700: 190 18 60; --ds-rgb-rose-750: 174 18 58; --ds-rgb-rose-80=
0: 159 18 57; --ds-rgb-rose-850: 147 18 56; --ds-rgb-rose-900: 136 19 55; -=
-ds-rgb-rose-950: 76 5 25; }

body, page, .ds-theme { --ds-input-height-l: 44px; --ds-input-height-m: 34p=
x; --ds-input-height-s: 30px; --ds-input-height-xs: 26px; --ds-font-weight-=
strong: 600; --ds-font-size-l: 16px; --ds-line-height-l: 28px; --ds-font-si=
ze-m: 14px; --ds-line-height-m: 25px; --ds-font-size-sp: 13px; --ds-line-he=
ight-sp: 23px; --ds-font-size-s: 12px; --ds-line-height-s: 21px; --ds-font-=
size-xsp: 11px; --ds-line-height-xsp: 19.5px; --ds-font-size-xs: 10px; --ds=
-line-height-xs: 18px; --ds-ease-in-out: cubic-bezier(.4,0,.2,1); --ds-ease=
-in: cubic-bezier(.4,0,1,1); --ds-ease-out: cubic-bezier(0,0,.2,1); --ds-fo=
nt-family-code: Menlo,"Roboto Mono","Courier New",Courier,monospace,"Inter"=
,sans-serif; --ds-transition-duration: .2s; --ds-transition-duration-fast: =
.1s; --ds-transition-duration-slow: .3s; }

body { font-size: var(--ds-font-size-m); line-height: var(--ds-line-height-=
m); color: rgb(var(--ds-rgb-label-1)); text-size-adjust: none; margin: 0px;=
 }

body, page { --ds-rgb-info: var(--ds-rgb-blue-500); --ds-rgb-primary: var(-=
-ds-rgb-blue-500); --ds-rgb-primary-foreground: var(--ds-rgb-white); --ds-r=
gb-label-1: var(--ds-rgb-neutral-700); --ds-rgb-label-2: var(--ds-rgb-neutr=
al-450); --ds-rgb-label-3: var(--ds-rgb-neutral-400); --ds-rgb-error: var(-=
-ds-rgb-red-500); --ds-rgb-warning: var(--ds-rgb-amber-500); --ds-rgb-succe=
ss: var(--ds-rgb-green-500); --ds-rgba-transparent: 255 255 255/0; --ds-rgb=
-bg-base: var(--ds-rgb-white); --ds-rgb-elevated: var(--ds-rgb-white); --ds=
-rgb-track: var(--ds-rgb-neutral-200); --ds-rgb-hover: var(--ds-rgb-neutral=
-100); --ds-rgb-header: var(--ds-rgb-neutral-50); --ds-rgb-separator: var(-=
-ds-rgb-neutral-100); --ds-rgb-separator-strong: var(--ds-rgb-neutral-200);=
 --ds-rgb-input: var(--ds-rgb-neutral-100); --ds-rgb-input-strong: var(--ds=
-rgb-neutral-150); --ds-rgb-input-focus: var(--ds-rgb-white); --ds-rgb-link=
: var(--ds-rgb-primary); --ds-rgb-tag: var(--ds-rgb-neutral-200); --ds-rgb-=
segmented: var(--ds-rgb-neutral-100); --ds-rgb-segmented-button: var(--ds-r=
gb-white); --ds-rgb-segmented-separator: var(--ds-rgb-neutral-300); --ds-rg=
b-thumb: var(--ds-rgb-white); font-family: quote-cjk-patch, Inter, system-u=
i, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Noto Sans", Ubun=
tu, Cantarell, "Helvetica Neue", Oxygen, "Open Sans", sans-serif; }

body { -webkit-tap-highlight-color: transparent; }

body.apple, body.en_US, body.apple .ds-theme, body.en_US .ds-theme { --ds-f=
ont-weight-strong: 500; }

body.dark { background-color: rgb(var(--ds-rgb-bg-base)); color: rgb(var(--=
ds-rgb-label-1)); --lightningcss-light: ; --lightningcss-dark: initial; col=
or-scheme: dark; }

body.dark, body.dark .ds-theme { --ds-rgb-info: var(--ds-rgb-blue-500); --d=
s-rgb-primary: var(--ds-rgb-blue-500); --ds-rgb-primary-foreground: 255 255=
 255; --ds-rgb-label-1: var(--ds-rgb-neutral-100); --ds-rgb-label-2: var(--=
ds-rgb-neutral-400); --ds-rgb-label-3: var(--ds-rgb-neutral-500); --ds-rgb-=
error: var(--ds-rgb-red-500); --ds-rgb-warning: var(--ds-rgb-amber-500); --=
ds-rgb-success: var(--ds-rgb-green-500); --ds-rgba-transparent: 255 255 255=
/0; --ds-rgb-bg-base: var(--ds-rgb-black); --ds-rgb-elevated: var(--ds-rgb-=
neutral-700); --ds-rgb-track: var(--ds-rgb-neutral-500); --ds-rgb-hover: va=
r(--ds-rgb-neutral-700); --ds-rgb-header: 40 40 40; --ds-rgb-separator: var=
(--ds-rgb-neutral-700); --ds-rgb-separator-strong: var(--ds-rgb-neutral-600=
); --ds-rgb-input: var(--ds-rgb-neutral-800); --ds-rgb-input-strong: var(--=
ds-rgb-neutral-700); --ds-rgb-input-focus: var(--ds-rgb-neutral-900); --ds-=
rgb-link: var(--ds-rgb-primary); --ds-rgb-tag: var(--ds-rgb-neutral-700); -=
-ds-rgb-segmented: var(--ds-rgb-neutral-700); --ds-rgb-segmented-button: va=
r(--ds-rgb-neutral-600); --ds-rgb-segmented-separator: var(--ds-rgb-neutral=
-600); --ds-rgb-thumb: var(--ds-rgb-neutral-200); }

body.dark .ds-elevated, body.dark [data-elevated] { --ds-rgb-label-1: var(-=
-ds-rgb-neutral-100); --ds-rgb-label-2: var(--ds-rgb-neutral-400); --ds-rgb=
-label-3: var(--ds-rgb-neutral-500); --ds-rgb-track: var(--ds-rgb-neutral-5=
00); --ds-rgb-hover: var(--ds-rgb-neutral-600); --ds-rgb-header: 40 40 40; =
--ds-rgb-separator: var(--ds-rgb-neutral-600); --ds-rgb-separator-strong: v=
ar(--ds-rgb-neutral-500); --ds-rgb-input: var(--ds-rgb-neutral-600); --ds-r=
gb-input-strong: var(--ds-rgb-neutral-600); --ds-rgb-input-focus: var(--ds-=
rgb-neutral-700); --ds-rgb-tag: var(--ds-rgb-neutral-600); --ds-rgb-segment=
ed: var(--ds-rgb-neutral-600); --ds-rgb-segmented-button: var(--ds-rgb-neut=
ral-500); --ds-rgb-segmented-separator: var(--ds-rgb-neutral-500); --ds-rgb=
-thumb: var(--ds-rgb-neutral-200); }

@media (prefers-color-scheme: dark) {
  page { background-color: rgb(var(--ds-rgb-bg-base)); color: rgb(var(--ds-=
rgb-label-1)); --lightningcss-light: ; --lightningcss-dark: initial; color-=
scheme: dark; }
  page, page .ds-theme { --ds-rgb-info: var(--ds-rgb-blue-500); --ds-rgb-pr=
imary: var(--ds-rgb-blue-500); --ds-rgb-primary-foreground: 255 255 255; --=
ds-rgb-label-1: var(--ds-rgb-neutral-100); --ds-rgb-label-2: var(--ds-rgb-n=
eutral-400); --ds-rgb-label-3: var(--ds-rgb-neutral-500); --ds-rgb-error: v=
ar(--ds-rgb-red-500); --ds-rgb-warning: var(--ds-rgb-amber-500); --ds-rgb-s=
uccess: var(--ds-rgb-green-500); --ds-rgba-transparent: 255 255 255/0; --ds=
-rgb-bg-base: var(--ds-rgb-black); --ds-rgb-elevated: var(--ds-rgb-neutral-=
700); --ds-rgb-track: var(--ds-rgb-neutral-500); --ds-rgb-hover: var(--ds-r=
gb-neutral-700); --ds-rgb-header: 40 40 40; --ds-rgb-separator: var(--ds-rg=
b-neutral-700); --ds-rgb-separator-strong: var(--ds-rgb-neutral-600); --ds-=
rgb-input: var(--ds-rgb-neutral-800); --ds-rgb-input-strong: var(--ds-rgb-n=
eutral-700); --ds-rgb-input-focus: var(--ds-rgb-neutral-900); --ds-rgb-link=
: var(--ds-rgb-primary); --ds-rgb-tag: var(--ds-rgb-neutral-700); --ds-rgb-=
segmented: var(--ds-rgb-neutral-700); --ds-rgb-segmented-button: var(--ds-r=
gb-neutral-600); --ds-rgb-segmented-separator: var(--ds-rgb-neutral-600); -=
-ds-rgb-thumb: var(--ds-rgb-neutral-200); }
  page .ds-elevated { --ds-rgb-label-1: var(--ds-rgb-neutral-100); --ds-rgb=
-label-2: var(--ds-rgb-neutral-400); --ds-rgb-label-3: var(--ds-rgb-neutral=
-500); --ds-rgb-track: var(--ds-rgb-neutral-500); --ds-rgb-hover: var(--ds-=
rgb-neutral-600); --ds-rgb-header: 40 40 40; --ds-rgb-separator: var(--ds-r=
gb-neutral-600); --ds-rgb-separator-strong: var(--ds-rgb-neutral-500); --ds=
-rgb-input: var(--ds-rgb-neutral-600); --ds-rgb-input-strong: var(--ds-rgb-=
neutral-600); --ds-rgb-input-focus: var(--ds-rgb-neutral-700); --ds-rgb-tag=
: var(--ds-rgb-neutral-600); --ds-rgb-segmented: var(--ds-rgb-neutral-600);=
 --ds-rgb-segmented-button: var(--ds-rgb-neutral-500); --ds-rgb-segmented-s=
eparator: var(--ds-rgb-neutral-500); --ds-rgb-thumb: var(--ds-rgb-neutral-2=
00); }
}

body { --dsr-main: #4d6bfe; --dsr-main-2: rgba(77,107,254,.4); --dsr-main-3=
: rgba(77,107,254,.2); --dsr-bg: rgb(var(--ds-rgb-white)); --dsr-text-0: rg=
b(var(--ds-rgb-black)); --dsr-text-1: rgb(var(--ds-rgb-neutral-800)); --dsr=
-text-2: rgb(var(--ds-rgb-neutral-600)); --dsr-text-3: rgb(var(--ds-rgb-neu=
tral-400)); --dsr-text-4: rgb(var(--ds-rgb-zinc-350)); --dsr-border-1: rgb(=
var(--ds-rgb-neutral-350)); --dsr-border-2: rgb(var(--ds-rgb-neutral-200));=
 --dsr-input-border: #dce0e9; --dsr-input-bg: rgb(var(--ds-rgb-gray-100)); =
--dsr-button-main-bg: var(--dsr-main); --dsr-button-main-bg-hover: #4166d5;=
 --dsr-button-second-bg: var(--dsr-main-3); --dsr-button-grey-0: rgb(var(--=
ds-rgb-neutral-150)); --dsr-button-grey-1: rgb(var(--ds-rgb-neutral-100)); =
--dsr-button-grey-2: rgb(var(--ds-rgb-neutral-50)); --dsr-delete-button-bg:=
 rgb(var(--ds-rgb-red-500)/.85); --dsr-delete-button-bg-hover: rgb(var(--ds=
-rgb-red-550)); --dsr-tooltip-fg: #eff6ff; --dsr-tooltip-bg: rgb(var(--ds-r=
gb-neutral-850)); --dsr-side-bg: #f9fbff; --dsr-side-hover-bg-rgb: 239,246,=
255; --dsr-side-hover-bg: rgb(var(--ds-rgb-blue-50)); --dsr-icon-fg-1: rgb(=
var(--ds-rgb-neutral-650)); --dsr-icon-hover-0: rgb(var(--ds-rgb-neutral-15=
0)); --dsr-icon-hover-1: rgb(var(--ds-rgb-neutral-100)); --dsr-side-icon-ho=
ver: rgb(var(--ds-rgb-slate-100)); --dsr-error-fg: rgb(var(--ds-rgb-red-550=
)); --dsr-risk-text: #e4773d; --dsr-risk-border: rgba(228,119,61,.1); --dsr=
-risk-fill: rgba(228,119,61,.05); }

body[data-ds-dark-theme] { --dsr-bg: #292a2d; --dsr-text-0: rgb(var(--ds-rg=
b-white)); --dsr-text-1: rgb(var(--ds-rgb-zinc-200)); --dsr-text-2: rgb(var=
(--ds-rgb-zinc-350)); --dsr-text-3: rgb(var(--ds-rgb-neutral-400)); --dsr-t=
ext-4: rgb(var(--ds-rgb-zinc-400)); --dsr-border-1: rgb(var(--ds-rgb-neutra=
l-450)); --dsr-border-2: rgb(var(--ds-rgb-neutral-600)); --dsr-input-border=
: #5a5a69; --dsr-input-bg: #404045; --dsr-button-main-bg: #509fff; --dsr-bu=
tton-main-bg-hover: #4166d5; --dsr-button-second-bg: var(--dsr-main-2); --d=
sr-button-grey-0: rgb(var(--ds-rgb-neutral-600)); --dsr-button-grey-1: rgb(=
var(--ds-rgb-neutral-650)); --dsr-button-grey-2: rgb(var(--ds-rgb-neutral-7=
00)); --dsr-delete-button-bg: rgb(var(--ds-rgb-red-500)/.85); --dsr-delete-=
button-bg-hover: rgb(var(--ds-rgb-red-550)/.45); --dsr-tooltip-fg: rgb(var(=
--ds-rgb-zinc-650)); --dsr-tooltip-bg: #000; --dsr-side-bg: #212327; --dsr-=
side-hover-bg-rgb: 51,51,51; --dsr-side-hover-bg: rgb(var(--ds-rgb-neutral-=
750)); --dsr-icon-fg-1: rgb(var(--ds-rgb-neutral-350)); --dsr-icon-hover-0:=
 rgb(var(--ds-rgb-neutral-500)); --dsr-icon-hover-1: rgb(var(--ds-rgb-neutr=
al-700)); --dsr-side-icon-hover: rgb(var(--ds-rgb-zinc-750)); --dsr-error-f=
g: rgb(var(--ds-rgb-red-450)); --dsr-risk-text: #e4773d; --dsr-risk-border:=
 #4c4740; --dsr-risk-fill: #31302e; }

.ds-markdown { --ds-md-zoom: 1.143; --ds-md-font-size: calc(var(--ds-md-zoo=
m)*var(--ds-font-size-m)); --ds-md-line-height: calc(var(--ds-md-zoom)*var(=
--ds-line-height-m)); font-size: var(--ds-md-font-size); min-height: var(--=
ds-md-font-size); line-height: var(--ds-md-line-height); }

.ds-markdown strong { font-weight: 600; }

.ds-markdown img { max-width: 100%; }

.ds-markdown h1, .ds-markdown h2, .ds-markdown h3, .ds-markdown h4, .ds-mar=
kdown h5, .ds-markdown h6 { font-weight: var(--ds-font-weight-strong); font=
-size: var(--ds-md-font-size); line-height: var(--ds-md-line-height); margi=
n: calc(var(--ds-md-zoom)*16px)0 calc(var(--ds-md-zoom)*12px)0; }

.ds-markdown h1 { font-size: calc(var(--ds-md-zoom)*24px); line-height: 1.5=
; }

.ds-markdown h2 { font-size: calc(var(--ds-md-zoom)*20px); line-height: 1.5=
; }

.ds-markdown h3 { font-size: calc(var(--ds-md-zoom)*16px); line-height: 1.5=
; }

.ds-markdown h1 .header-anchor, .ds-markdown h2 .header-anchor, .ds-markdow=
n h3 .header-anchor, .ds-markdown h4 .header-anchor, .ds-markdown h5 .heade=
r-anchor, .ds-markdown h6 .header-anchor { opacity: 0; margin-left: 4px; }

.ds-markdown h1:hover .header-anchor, .ds-markdown h2:hover .header-anchor,=
 .ds-markdown h3:hover .header-anchor, .ds-markdown h4:hover .header-anchor=
, .ds-markdown h5:hover .header-anchor, .ds-markdown h6:hover .header-ancho=
r { opacity: 1; }

.ds-markdown .ds-markdown-paragraph { margin: calc(var(--ds-md-zoom)*12px)0=
; font-size: var(--ds-md-font-size); line-height: var(--ds-md-line-height);=
 }

.ds-markdown a:not(.ds-a) { color: rgb(var(--ds-rgb-link)); transition: box=
-shadow var(--ds-transition-duration)var(--ds-ease-in-out); border-radius: =
calc(var(--ds-md-zoom)*6px); border-left: 3px solid rgba(var(--ds-rgba-tran=
sparent)); border-right: 3px solid rgba(var(--ds-rgba-transparent)); border=
-top: 2px solid rgba(var(--ds-rgba-transparent)); border-bottom: 2px solid =
rgba(var(--ds-rgba-transparent)); margin-left: -3px; margin-right: -3px; te=
xt-decoration: none; position: relative; }

.ds-markdown a:not(.ds-a):focus { outline: none; }

.ds-markdown a:not(.ds-a):focus-visible { box-shadow: 0 0 0 2px rgb(var(--d=
s-rgb-primary)); }

.ds-markdown li > ul, .ds-markdown li > ol { margin-top: 4px; }

.ds-markdown ul, .ds-markdown ol { margin: calc(var(--ds-md-zoom)*12px)0; p=
adding-left: calc(var(--ds-md-zoom)*24px); }

.ds-markdown li:not(:first-child) { margin-top: 4px; }

.ds-markdown li::marker { line-height: var(--ds-md-line-height); color: rgb=
(var(--ds-rgb-label-2)); }

.ds-markdown hr { height: 1px; margin: calc(var(--ds-md-zoom)*12px)0; backg=
round: rgb(var(--ds-rgb-label-3)); border: none; display: block; }

.ds-markdown blockquote { border-left: 2px solid rgb(var(--ds-rgb-label-3))=
; padding-left: calc(var(--ds-md-zoom)*16px); margin: 0px; }

.ds-markdown table { border-collapse: collapse; }

.ds-markdown th { color: rgb(var(--ds-rgb-label-1)); padding: calc(var(--ds=
-md-zoom)*6px)calc(var(--ds-md-zoom)*12px); border-bottom: 1px solid rgb(va=
r(--ds-rgb-label-3)); border-top: 1px solid rgb(var(--ds-rgb-label-3)); fon=
t-weight: 600; }

.ds-markdown th:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bc=
c), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :l=
ang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug=
), :lang(ur), :lang(yi))) { text-align: left; }

.ds-markdown th:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang=
(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), =
:lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(=
ur), :lang(yi))) { text-align: left; }

.ds-markdown th:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :=
lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(k=
u), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :l=
ang(ur), :lang(yi)) { text-align: right; }

.ds-markdown th:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi)=
, :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang=
(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), =
:lang(yi)) { text-align: right; }

.ds-markdown th:first-child { padding-left: 0px; }

.ds-markdown td { padding: calc(var(--ds-md-zoom)*6px)calc(var(--ds-md-zoom=
)*12px); border-bottom: 1px solid rgb(var(--ds-rgb-label-3)); }

.ds-markdown td:first-child { padding-left: 0px; }

.ds-markdown pre { margin: calc(var(--ds-md-zoom)*12px)0; font-family: var(=
--ds-font-family-code); overflow: auto; }

.ds-markdown code { font-size: 0.875em; font-weight: var(--ds-font-weight-s=
trong); font-family: var(--ds-font-family-code); background-color: var(--ds=
-md-inline-code-color,#ececec); border-radius: 4px; padding: 0.15rem 0.3rem=
; }

.ds-markdown code::before { margin-left: 4px; }

.ds-markdown code::after { margin-right: 4px; }

.ds-markdown-math { text-align: center; padding-top: 2px; display: block; o=
verflow: auto hidden; }

.ds-markdown > * .ds-markdown-math { margin: calc(var(--ds-md-zoom)*12px)0;=
 }

.ds-markdown > * .ds-markdown-math:first-child { margin-top: 0px; }

.ds-markdown > * .ds-markdown-math:last-child { margin-bottom: 0px; }

.ds-markdown-code-copy-button { background-color: rgba(var(--ds-rgba-transp=
arent)); color: inherit; cursor: pointer; border: none; margin: 0px; paddin=
g: 0px; }

.ds-markdown li > .ds-markdown-paragraph { margin: 4px 0px; }

.ds-markdown li > :first-child { margin-top: 0px; }

.ds-markdown li > :last-child { margin-bottom: 0px; }

.ds-markdown .ds-markdown-paragraph:last-child { margin-bottom: 0px !import=
ant; }

.ds-markdown > :first-child { margin-top: 0px !important; }

.ds-markdown > :last-child { margin-bottom: 0px !important; }

.ds-markdown.ds-markdown--page h1 { font-size: calc(var(--ds-md-zoom)*24px)=
; margin-top: calc(var(--ds-md-zoom)*32px); line-height: calc(var(--ds-md-z=
oom)*32px); margin-bottom: calc(var(--ds-md-zoom)*20px); }

.ds-markdown.ds-markdown--page h2 { font-size: calc(var(--ds-md-zoom)*20px)=
; margin-top: calc(var(--ds-md-zoom)*26px); line-height: calc(var(--ds-md-z=
oom)*26px); margin-bottom: calc(var(--ds-md-zoom)*16px); }

.ds-markdown.ds-markdown--page h3 { font-size: calc(var(--ds-md-zoom)*18px)=
; margin-top: calc(var(--ds-md-zoom)*22px); line-height: calc(var(--ds-md-z=
oom)*22px); margin-bottom: calc(var(--ds-md-zoom)*14px); }

.ds-markdown.ds-markdown--page h4 { font-size: calc(var(--ds-md-zoom)*16px)=
; margin-top: calc(var(--ds-md-zoom)*20px); line-height: calc(var(--ds-md-z=
oom)*20px); margin-bottom: calc(var(--ds-md-zoom)*12px); }

.ds-markdown.ds-markdown--page > .ds-markdown-paragraph, .ds-markdown.ds-ma=
rkdown--page > pre, .ds-markdown.ds-markdown--page > .md-code-block { margi=
n: calc(var(--ds-md-zoom)*16px)0 calc(var(--ds-md-zoom)*23px)0; }

.ds-markdown.ds-markdown--page hr { margin: calc(var(--ds-md-zoom)*18px)0; =
}

.ds-markdown.ds-markdown--page th { color: rgb(var(--ds-rgb-label-1)); padd=
ing: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*10px); border-bottom=
: 1px solid rgb(var(--ds-rgb-separator)); border-top: 1px solid rgb(var(--d=
s-rgb-separator)); }

.ds-markdown.ds-markdown--page th:not(:-webkit-any(:lang(ae), :lang(ar), :l=
ang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(g=
lk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :=
lang(sd), :lang(ug), :lang(ur), :lang(yi))) { text-align: left; }

.ds-markdown.ds-markdown--page th:not(:is(:lang(ae), :lang(ar), :lang(arc),=
 :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lan=
g(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd),=
 :lang(ug), :lang(ur), :lang(yi))) { text-align: left; }

.ds-markdown.ds-markdown--page th:-webkit-any(:lang(ae), :lang(ar), :lang(a=
rc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), =
:lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(=
sd), :lang(ug), :lang(ur), :lang(yi)) { text-align: right; }

.ds-markdown.ds-markdown--page th:is(:lang(ae), :lang(ar), :lang(arc), :lan=
g(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he)=
, :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lan=
g(ug), :lang(ur), :lang(yi)) { text-align: right; }

.ds-markdown.ds-markdown--page td { padding: calc(var(--ds-md-zoom)*8px)cal=
c(var(--ds-md-zoom)*10px); border-bottom: 1px solid rgb(var(--ds-rgb-separa=
tor)); }

.ds-markdown.ds-markdown--page td:first-child, .ds-markdown.ds-markdown--pa=
ge th:first-child { padding-left: 0px; }

.ds-markdown.ds-markdown--page td:last-child, .ds-markdown.ds-markdown--pag=
e th:last-child { padding-right: 0px; }

.ds-markdown-html { font-size: 0.875em; font-family: var(--ds-font-family-c=
ode); }

.ds-markdown-cite { vertical-align: middle; font-variant: tabular-nums; box=
-sizing: border-box; color: rgb(64, 64, 64); cursor: pointer; background: r=
gb(229, 229, 229); border-radius: 9px; flex-shrink: 0; justify-content: cen=
ter; align-items: center; height: 18px; margin-left: 4px; padding: 0px 6px;=
 font-size: 12px; font-weight: 400; display: inline-flex; position: relativ=
e; top: -2px; }

[data-ds-dark-theme] .ds-markdown-cite { color: rgb(248, 250, 255); backgro=
und: rgb(82, 82, 91); }

.cjk_fallback { font-family: serif !important; }

.md-code-block.md-code-block-dark code[class*=3D"language-"], .md-code-bloc=
k.md-code-block-dark pre[class*=3D"language-"] { color: rgb(227, 234, 242);=
 text-align: left; white-space: pre; word-spacing: normal; word-break: norm=
al; overflow-wrap: normal; tab-size: 4; hyphens: none; background: 0px 0px;=
 font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace; li=
ne-height: 1.5; }

.md-code-block.md-code-block-dark pre[class*=3D"language-"]::selection { ba=
ckground: rgb(60, 82, 109); }

.md-code-block.md-code-block-dark pre[class*=3D"language-"] ::selection { b=
ackground: rgb(60, 82, 109); }

.md-code-block.md-code-block-dark code[class*=3D"language-"]::selection { b=
ackground: rgb(60, 82, 109); }

.md-code-block.md-code-block-dark code[class*=3D"language-"] ::selection { =
background: rgb(60, 82, 109); }

.md-code-block.md-code-block-dark pre[class*=3D"language-"] { margin: 0.5em=
 0px; padding: 1em; overflow: auto; }

.md-code-block.md-code-block-dark :not(pre) > code[class*=3D"language-"], .=
md-code-block.md-code-block-dark pre[class*=3D"language-"] { background: rg=
b(17, 27, 39); }

.md-code-block.md-code-block-dark :not(pre) > code[class*=3D"language-"] { =
white-space: normal; border-radius: 0.3em; padding: 0.1em 0.3em; }

.md-code-block.md-code-block-dark .token.comment, .md-code-block.md-code-bl=
ock-dark .token.prolog, .md-code-block.md-code-block-dark .token.doctype, .=
md-code-block.md-code-block-dark .token.cdata { color: rgb(141, 161, 185); =
}

.md-code-block.md-code-block-dark .token.punctuation { color: rgb(227, 234,=
 242); }

.md-code-block.md-code-block-dark .token.delimiter.important, .md-code-bloc=
k.md-code-block-dark .token.selector .parent, .md-code-block.md-code-block-=
dark .token.tag, .md-code-block.md-code-block-dark .token.tag .token.punctu=
ation { color: rgb(102, 204, 204); }

.md-code-block.md-code-block-dark .token.attr-name, .md-code-block.md-code-=
block-dark .token.boolean, .md-code-block.md-code-block-dark .token.boolean=
.important, .md-code-block.md-code-block-dark .token.number, .md-code-block=
.md-code-block-dark .token.constant, .md-code-block.md-code-block-dark .tok=
en.selector .token.attribute { color: rgb(230, 211, 122); }

.md-code-block.md-code-block-dark .token.class-name, .md-code-block.md-code=
-block-dark .token.key, .md-code-block.md-code-block-dark .token.parameter,=
 .md-code-block.md-code-block-dark .token.property, .md-code-block.md-code-=
block-dark .token.property-access, .md-code-block.md-code-block-dark .token=
.variable { color: rgb(108, 184, 230); }

.md-code-block.md-code-block-dark .token.attr-value, .md-code-block.md-code=
-block-dark .token.inserted, .md-code-block.md-code-block-dark .token.color=
, .md-code-block.md-code-block-dark .token.selector .token.value, .md-code-=
block.md-code-block-dark .token.string, .md-code-block.md-code-block-dark .=
token.string .token.url-link { color: rgb(145, 208, 118); }

.md-code-block.md-code-block-dark .token.builtin, .md-code-block.md-code-bl=
ock-dark .token.keyword-array, .md-code-block.md-code-block-dark .token.pac=
kage, .md-code-block.md-code-block-dark .token.regex { color: rgb(244, 173,=
 244); }

.md-code-block.md-code-block-dark .token.function, .md-code-block.md-code-b=
lock-dark .token.selector .token.class, .md-code-block.md-code-block-dark .=
token.selector .token.id { color: rgb(198, 153, 227); }

.md-code-block.md-code-block-dark .token.atrule .token.rule, .md-code-block=
.md-code-block-dark .token.combinator, .md-code-block.md-code-block-dark .t=
oken.keyword, .md-code-block.md-code-block-dark .token.operator, .md-code-b=
lock.md-code-block-dark .token.pseudo-class, .md-code-block.md-code-block-d=
ark .token.pseudo-element, .md-code-block.md-code-block-dark .token.selecto=
r, .md-code-block.md-code-block-dark .token.unit { color: rgb(233, 174, 126=
); }

.md-code-block.md-code-block-dark .token.deleted, .md-code-block.md-code-bl=
ock-dark .token.important { color: rgb(205, 102, 96); }

.md-code-block.md-code-block-dark .token.keyword-this, .md-code-block.md-co=
de-block-dark .token.this { color: rgb(108, 184, 230); }

.md-code-block.md-code-block-dark .token.important, .md-code-block.md-code-=
block-dark .token.keyword-this, .md-code-block.md-code-block-dark .token.th=
is, .md-code-block.md-code-block-dark .token.bold { font-weight: 700; }

.md-code-block.md-code-block-dark .token.delimiter.important { font-weight:=
 inherit; }

.md-code-block.md-code-block-dark .token.italic { font-style: italic; }

.md-code-block.md-code-block-dark .token.entity { cursor: help; }

.md-code-block.md-code-block-dark .language-markdown .token.title, .md-code=
-block.md-code-block-dark .language-markdown .token.title .token.punctuatio=
n { color: rgb(108, 184, 230); font-weight: 700; }

.md-code-block.md-code-block-dark .language-markdown .token.blockquote.punc=
tuation { color: rgb(244, 173, 244); }

.md-code-block.md-code-block-dark .language-markdown .token.code { color: r=
gb(102, 204, 204); }

.md-code-block.md-code-block-dark .language-markdown .token.hr.punctuation =
{ color: rgb(108, 184, 230); }

.md-code-block.md-code-block-dark .language-markdown .token.url .token.cont=
ent { color: rgb(145, 208, 118); }

.md-code-block.md-code-block-dark .language-markdown .token.url-link { colo=
r: rgb(230, 211, 122); }

.md-code-block.md-code-block-dark .language-markdown .token.list.punctuatio=
n { color: rgb(244, 173, 244); }

.md-code-block.md-code-block-dark .language-markdown .token.table-header, .=
md-code-block.md-code-block-dark .language-json .token.operator { color: rg=
b(227, 234, 242); }

.md-code-block.md-code-block-dark .language-scss .token.variable { color: r=
gb(102, 204, 204); }

.md-code-block.md-code-block-dark .token.token.tab:not(:empty)::before, .md=
-code-block.md-code-block-dark .token.token.cr::before, .md-code-block.md-c=
ode-block-dark .token.token.lf::before, .md-code-block.md-code-block-dark .=
token.token.space::before { color: rgb(141, 161, 185); }

.md-code-block.md-code-block-dark div.code-toolbar > .toolbar.toolbar > .to=
olbar-item > a, .md-code-block.md-code-block-dark div.code-toolbar > .toolb=
ar.toolbar > .toolbar-item > button { color: rgb(17, 27, 39); background: r=
gb(108, 184, 230); }

.md-code-block.md-code-block-dark div.code-toolbar > .toolbar.toolbar > .to=
olbar-item > a:hover, .md-code-block.md-code-block-dark div.code-toolbar > =
.toolbar.toolbar > .toolbar-item > a:focus, .md-code-block.md-code-block-da=
rk div.code-toolbar > .toolbar.toolbar > .toolbar-item > button:hover, .md-=
code-block.md-code-block-dark div.code-toolbar > .toolbar.toolbar > .toolba=
r-item > button:focus { color: rgb(17, 27, 39); background: rgba(108, 184, =
230, 0.855); text-decoration: none; }

.md-code-block.md-code-block-dark div.code-toolbar > .toolbar.toolbar > .to=
olbar-item > span, .md-code-block.md-code-block-dark div.code-toolbar > .to=
olbar.toolbar > .toolbar-item > span:hover, .md-code-block.md-code-block-da=
rk div.code-toolbar > .toolbar.toolbar > .toolbar-item > span:focus { color=
: rgb(17, 27, 39); background: rgb(141, 161, 185); }

.md-code-block.md-code-block-dark .line-highlight.line-highlight { backgrou=
nd: linear-gradient(90deg, rgba(60, 82, 109, 0.373) 70%, rgba(60, 82, 109, =
0.333)); }

.md-code-block.md-code-block-dark .line-highlight.line-highlight::before, .=
md-code-block.md-code-block-dark .line-highlight.line-highlight[data-end]::=
after { color: rgb(17, 27, 39); background-color: rgb(141, 161, 185); box-s=
hadow: rgb(60, 82, 109) 0px 1px; }

.md-code-block.md-code-block-dark pre[id].linkable-line-numbers.linkable-li=
ne-numbers span.line-numbers-rows > span:hover::before { background-color: =
rgba(141, 161, 185, 0.094); }

.md-code-block.md-code-block-dark .line-numbers.line-numbers .line-numbers-=
rows { background: rgba(11, 18, 27, 0.48); border-right: 1px solid rgb(11, =
18, 27); }

.md-code-block.md-code-block-dark .line-numbers .line-numbers-rows > span::=
before { color: rgba(141, 161, 185, 0.855); }

.md-code-block.md-code-block-dark .rainbow-braces .token.token.punctuation.=
brace-level-1, .md-code-block.md-code-block-dark .rainbow-braces .token.tok=
en.punctuation.brace-level-5, .md-code-block.md-code-block-dark .rainbow-br=
aces .token.token.punctuation.brace-level-9 { color: rgb(230, 211, 122); }

.md-code-block.md-code-block-dark .rainbow-braces .token.token.punctuation.=
brace-level-2, .md-code-block.md-code-block-dark .rainbow-braces .token.tok=
en.punctuation.brace-level-6, .md-code-block.md-code-block-dark .rainbow-br=
aces .token.token.punctuation.brace-level-10 { color: rgb(244, 173, 244); }

.md-code-block.md-code-block-dark .rainbow-braces .token.token.punctuation.=
brace-level-3, .md-code-block.md-code-block-dark .rainbow-braces .token.tok=
en.punctuation.brace-level-7, .md-code-block.md-code-block-dark .rainbow-br=
aces .token.token.punctuation.brace-level-11 { color: rgb(108, 184, 230); }

.md-code-block.md-code-block-dark .rainbow-braces .token.token.punctuation.=
brace-level-4, .md-code-block.md-code-block-dark .rainbow-braces .token.tok=
en.punctuation.brace-level-8, .md-code-block.md-code-block-dark .rainbow-br=
aces .token.token.punctuation.brace-level-12 { color: rgb(198, 153, 227); }

.md-code-block.md-code-block-dark pre.diff-highlight > code .token.token.de=
leted:not(.prefix), .md-code-block.md-code-block-dark pre > code.diff-highl=
ight .token.token.deleted:not(.prefix) { background-color: rgba(205, 102, 9=
6, 0.12); }

.md-code-block.md-code-block-dark pre.diff-highlight > code .token.token.in=
serted:not(.prefix), .md-code-block.md-code-block-dark pre > code.diff-high=
light .token.token.inserted:not(.prefix) { background-color: rgba(145, 208,=
 118, 0.12); }

.md-code-block.md-code-block-dark .command-line .command-line-prompt { bord=
er-right: 1px solid rgb(11, 18, 27); }

.md-code-block.md-code-block-dark .command-line .command-line-prompt > span=
::before { color: rgba(141, 161, 185, 0.855); }

.md-code-block.md-code-block-light code[class*=3D"language-"], .md-code-blo=
ck.md-code-block-light pre[class*=3D"language-"] { color: rgb(56, 58, 66); =
text-align: left; white-space: pre; word-spacing: normal; word-break: norma=
l; tab-size: 2; hyphens: none; direction: ltr; background: rgb(250, 250, 25=
0); font-family: "Fira Code", "Fira Mono", Menlo, Consolas, "DejaVu Sans Mo=
no", monospace; line-height: 1.5; }

.md-code-block.md-code-block-light code[class*=3D"language-"]::selection { =
color: inherit; background: rgb(229, 229, 230); }

.md-code-block.md-code-block-light code[class*=3D"language-"] ::selection {=
 color: inherit; background: rgb(229, 229, 230); }

.md-code-block.md-code-block-light pre[class*=3D"language-"] ::selection { =
color: inherit; background: rgb(229, 229, 230); }

.md-code-block.md-code-block-light pre[class*=3D"language-"] { border-radiu=
s: 0.3em; margin: 0.5em 0px; padding: 1em; overflow: auto; }

.md-code-block.md-code-block-light :not(pre) > code[class*=3D"language-"] {=
 white-space: normal; border-radius: 0.3em; padding: 0.2em 0.3em; }

.md-code-block.md-code-block-light .token.comment, .md-code-block.md-code-b=
lock-light .token.prolog, .md-code-block.md-code-block-light .token.cdata {=
 color: rgb(160, 161, 167); }

.md-code-block.md-code-block-light .token.doctype, .md-code-block.md-code-b=
lock-light .token.punctuation, .md-code-block.md-code-block-light .token.en=
tity { color: rgb(56, 58, 66); }

.md-code-block.md-code-block-light .token.attr-name, .md-code-block.md-code=
-block-light .token.class-name, .md-code-block.md-code-block-light .token.b=
oolean, .md-code-block.md-code-block-light .token.constant, .md-code-block.=
md-code-block-light .token.number, .md-code-block.md-code-block-light .toke=
n.atrule { color: rgb(183, 107, 1); }

.md-code-block.md-code-block-light .token.keyword { color: rgb(166, 38, 164=
); }

.md-code-block.md-code-block-light .token.property, .md-code-block.md-code-=
block-light .token.tag, .md-code-block.md-code-block-light .token.symbol, .=
md-code-block.md-code-block-light .token.deleted, .md-code-block.md-code-bl=
ock-light .token.important { color: rgb(228, 86, 73); }

.md-code-block.md-code-block-light .token.selector, .md-code-block.md-code-=
block-light .token.string, .md-code-block.md-code-block-light .token.char, =
.md-code-block.md-code-block-light .token.builtin, .md-code-block.md-code-b=
lock-light .token.inserted, .md-code-block.md-code-block-light .token.regex=
, .md-code-block.md-code-block-light .token.attr-value, .md-code-block.md-c=
ode-block-light .token.attr-value > .token.punctuation { color: rgb(80, 161=
, 79); }

.md-code-block.md-code-block-light .token.variable, .md-code-block.md-code-=
block-light .token.operator, .md-code-block.md-code-block-light .token.func=
tion { color: rgb(64, 120, 242); }

.md-code-block.md-code-block-light .token.url { color: rgb(1, 132, 188); }

.md-code-block.md-code-block-light .token.attr-value > .token.punctuation.a=
ttr-equals, .md-code-block.md-code-block-light .token.special-attr > .token=
.attr-value > .token.value.css { color: rgb(56, 58, 66); }

.md-code-block.md-code-block-light .language-css .token.selector { color: r=
gb(228, 86, 73); }

.md-code-block.md-code-block-light .language-css .token.property { color: r=
gb(56, 58, 66); }

.md-code-block.md-code-block-light .language-css .token.function, .md-code-=
block.md-code-block-light .language-css .token.url > .token.function { colo=
r: rgb(1, 132, 188); }

.md-code-block.md-code-block-light .language-css .token.url > .token.string=
.url { color: rgb(80, 161, 79); }

.md-code-block.md-code-block-light .language-css .token.important, .md-code=
-block.md-code-block-light .language-css .token.atrule .token.rule, .md-cod=
e-block.md-code-block-light .language-javascript .token.operator { color: r=
gb(166, 38, 164); }

.md-code-block.md-code-block-light .language-javascript .token.template-str=
ing > .token.interpolation > .token.interpolation-punctuation.punctuation {=
 color: rgb(202, 18, 67); }

.md-code-block.md-code-block-light .language-json .token.operator { color: =
rgb(56, 58, 66); }

.md-code-block.md-code-block-light .language-json .token.null.keyword { col=
or: rgb(183, 107, 1); }

.md-code-block.md-code-block-light .language-markdown .token.url, .md-code-=
block.md-code-block-light .language-markdown .token.url > .token.operator, =
.md-code-block.md-code-block-light .language-markdown .token.url-reference.=
url > .token.string { color: rgb(56, 58, 66); }

.md-code-block.md-code-block-light .language-markdown .token.url > .token.c=
ontent { color: rgb(64, 120, 242); }

.md-code-block.md-code-block-light .language-markdown .token.url > .token.u=
rl, .md-code-block.md-code-block-light .language-markdown .token.url-refere=
nce.url { color: rgb(1, 132, 188); }

.md-code-block.md-code-block-light .language-markdown .token.blockquote.pun=
ctuation, .md-code-block.md-code-block-light .language-markdown .token.hr.p=
unctuation { color: rgb(160, 161, 167); font-style: italic; }

.md-code-block.md-code-block-light .language-markdown .token.code-snippet {=
 color: rgb(80, 161, 79); }

.md-code-block.md-code-block-light .language-markdown .token.bold .token.co=
ntent { color: rgb(183, 107, 1); }

.md-code-block.md-code-block-light .language-markdown .token.italic .token.=
content { color: rgb(166, 38, 164); }

.md-code-block.md-code-block-light .language-markdown .token.strike .token.=
content, .md-code-block.md-code-block-light .language-markdown .token.strik=
e .token.punctuation, .md-code-block.md-code-block-light .language-markdown=
 .token.list.punctuation, .md-code-block.md-code-block-light .language-mark=
down .token.title.important > .token.punctuation { color: rgb(228, 86, 73);=
 }

.md-code-block.md-code-block-light .token.bold { font-weight: 700; }

.md-code-block.md-code-block-light .token.comment, .md-code-block.md-code-b=
lock-light .token.italic { font-style: italic; }

.md-code-block.md-code-block-light .token.entity { cursor: help; }

.md-code-block.md-code-block-light .token.namespace { opacity: 0.8; }

.md-code-block.md-code-block-light .token.token.tab:not(:empty)::before, .m=
d-code-block.md-code-block-light .token.token.cr::before, .md-code-block.md=
-code-block-light .token.token.lf::before, .md-code-block.md-code-block-lig=
ht .token.token.space::before { color: rgba(56, 58, 66, 0.2); }

.md-code-block-light { --ds-md-code-block-border-color: #e5e5e5; --ds-md-co=
de-block-banner-wrap-background-color: white; --ds-md-code-banner-backgroun=
d-color: #f5f5f5; color: rgb(73, 73, 73); background: rgb(250, 250, 250); }

.md-code-block-dark { --ds-md-code-block-border-color: var(--dsr-bg,transpa=
rent); --ds-md-code-block-banner-wrap-background-color: #292a2d; --ds-md-co=
de-banner-background-color: #404045; color: rgb(255, 255, 255); background:=
 rgb(33, 35, 39); }

.md-code-block { --ds-md-code-block-border-radius: 12px; --ds-md-code-block=
-font-size: calc(var(--ds-md-zoom)*var(--ds-font-size-xsp)); border-radius:=
 var(--ds-md-code-block-border-radius); font-size: var(--ds-md-code-block-f=
ont-size); line-height: calc(var(--ds-md-code-block-font-size)*1.6); }

.md-code-block:not(:last-child) { margin-bottom: calc(var(--ds-md-zoom)*10p=
x); }

.md-code-block-banner-wrap { background-color: var(--ds-md-code-block-banne=
r-wrap-background-color); z-index: 6; position: sticky; top: 0px; }

.md-code-block-banner { background: var(--ds-md-code-banner-background-colo=
r); padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); font-=
size: var(--ds-md-code-block-font-size); line-height: var(--ds-md-code-bloc=
k-font-size); justify-content: space-between; display: flex; }

.md-code-block-banner-lite { padding: 0px; }

.md-code-block-banner { border-top-left-radius: var(--ds-md-code-block-bord=
er-radius); border-top-right-radius: var(--ds-md-code-block-border-radius);=
 }

.md-code-block-footer { background: var(--ds-md-code-banner-background-colo=
r); padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); font-=
size: var(--ds-md-code-block-font-size); line-height: var(--ds-md-code-bloc=
k-font-size); border-bottom-left-radius: var(--ds-md-code-block-border-radi=
us); border-bottom-right-radius: var(--ds-md-code-block-border-radius); jus=
tify-content: flex-end; display: flex; }

.md-code-block-action { align-items: center; display: flex; }

.md-code-block > pre { padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md=
-zoom)*12px); white-space: pre-wrap; word-break: break-all; margin: 0px !im=
portant; }

.ds-auth-form-wrapper { padding-top: 48px; }

.ds-sign-up-form__main { border-radius: 16px; min-height: 420px; padding: 1=
2px; display: flex; box-shadow: rgba(0, 0, 0, 0.2) 0px 0px 1px, rgba(0, 0, =
0, 0.02) 0px 0px 4px, rgba(0, 0, 0, 0.06) 0px 12px 36px; }

.ds-sign-up-form__main-hero { box-sizing: border-box; flex-direction: colum=
n; flex-grow: 1; width: min(408px, -24px + 100vw); min-width: 300px; paddin=
g: 24px 24px 16px; display: flex; }

.ds-sign-up-form__main-wechat { width: 280px; margin-left: 12px; }

@media (min-width: 440px) {
  [data-ds-dark-theme] .ds-sign-up-form__main { background: rgba(255, 255, =
255, 0.1); border: 1px solid rgba(255, 255, 255, 0.06); box-shadow: rgba(0,=
 0, 0, 0.06) 0px 0px 1px, rgba(0, 0, 0, 0.02) 0px 0px 4px, rgba(0, 0, 0, 0.=
06) 0px 12px 36px; }
}

@media (max-width: 768px) {
  .ds-sign-up-form__main { flex-direction: column; }
  .ds-sign-up-form__main-wechat { width: 100%; margin-top: 12px; margin-lef=
t: 0px; }
}

@media (max-width: 440px) {
  .ds-sign-up-form__main { box-shadow: none; }
  .ds-sign-up-form__main-wechat { display: none; }
}

.ds-auth-form-loading-wrapper { color: rgb(var(--ds-rgb-primary)); justify-=
content: center; align-items: center; padding: 28px 0px; font-size: 28px; d=
isplay: flex; }

@media not all and (min-width: 768px) {
  .ds-auth-form-wrapper { max-width: 100%; }
}

.ds-verify-code-form-item { display: flex; }

.ds-verify-code-form-item > :not(:last-child) { margin-right: 12px; }

.ds-verify-code-form-item .ds-verify-code-form-item__verify-code-input { fl=
ex: 1 1 0%; }

.ds-verify-code-form-item .ds-verify-code-form-item__verify-code-button { f=
lex: 0 0 0%; }

.ds-audit-reason-form-item__checkbox-group { display: flex; }

.ds-audit-reason-form-item__checkbox-group > :not(:last-child) { margin-rig=
ht: 16px; }

.ds-audit-reason-form-item__checkbox-group > * { margin-bottom: 8px; }

.ds-audit-reason-form-item__checkbox-group { flex-wrap: wrap; margin-bottom=
: -8px; }

.grecaptcha-badge { visibility: hidden; }

.shumei_captcha_wrapper .shumei_captcha_img_refresh_btn { display: none !im=
portant; }

.ds-sign-up-form__agreement-text .ds-form-item__content { color: var(--dsr-=
text-3,#a3a3a3); font-size: 12px; line-height: 18px; }

.ds-sign-up-form__agreement-text .ds-form-item__content a { color: var(--ds=
r-text-1,#262626); text-underline-position: from-font; text-decoration: und=
erline; }

body { word-break: break-word; color: purple; background-color: rgb(255, 25=
5, 255); margin: 0px; }

body[data-ds-dark-theme] { background-color: var(--dsr-bg); }

body[data-ds-dark-theme].dark .ds-tooltip { --tooltip-color: #000; }

body .ds-modal-overlay { --ds-modal-overlay-opacity: .36; }

.ds-switch { --switch-color: var(--dsr-border-2); }

.ds-switch.ds-switch--checked { --switch-color: var(--dsr-text-1); }

[data-ds-dark-theme] { --ds-toast-custom-color: #505050; --ds-toast-cutsom-=
border: 1px solid #545557; --ds-md-inline-code-color: #424242; }

[data-ds-dark-theme] .ds-modal-overlay { --ds-modal-overlay-opacity: .6; }

[data-ds-dark-theme] .ds-switch { --switch-color: rgba(255,255,255,.2); }

[data-ds-dark-theme] .ds-switch.ds-switch--checked { --switch-color: rgba(v=
ar(--ds-rgb-primary)); }

body { --scroll-color: rgba(0,0,0,.08); --scroll-color-hover: rgba(0,0,0,.1=
5); }

body[data-ds-dark-theme] { --scroll-color: rgba(255,255,255,.15); --scroll-=
color-hover: rgba(255,255,255,.24); }

.scrollable { scrollbar-gutter: stable; scrollbar-color: var(--scroll-color=
)transparent; transition: scrollbar-color 0.1s ease-out; }

.scrollable:hover { scrollbar-color: var(--scroll-color-hover)transparent; =
}

#zenuml-intersection-detector-container { display: none !important; }

.markdown-table-wrapper { overflow-x: auto; }

.markdown-table-wrapper table { width: max-content; max-width: max-content;=
 }

.markdown-table-wrapper th, .markdown-table-wrapper td { padding: 10px; fon=
t-size: 15px; line-height: 1.72; }

.markdown-table-wrapper th { border-right-color: ; border-bottom-color: ; b=
order-left-color: ; border-top: none; }

.markdown-table-wrapper td { border-color: var(--dsr-border-2); min-width: =
100px; max-width: max(30vw, 320px); }

.ds-markdown hr { background-color: var(--dsr-border-2); margin: 32px 0px; }
------MultipartBoundary--xC4mlvqwVrWApoms1A0UKBsV18p6KuT1DXBVaW7nOf----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-a387356e-feaa-4aa2-a3b2-6a8436e43dcd@mhtml.blink

@charset "utf-8";

@keyframes intercom-lightweight-app-launcher {=20
  0% { opacity: 0; transform: scale(0.5); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes intercom-lightweight-app-gradient {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes intercom-lightweight-app-messenger {=20
  0% { opacity: 0; transform: scale(0); }
  40% { opacity: 1; }
  100% { transform: scale(1); }
}

.intercom-lightweight-app { position: fixed; z-index: 2147483001; width: 0p=
x; height: 0px; font-family: intercom-font, "Helvetica Neue", "Apple Color =
Emoji", Helvetica, Arial, sans-serif; }

.intercom-lightweight-app-gradient { position: fixed; z-index: 2147483002; =
width: 500px; height: 500px; bottom: 0px; right: 0px; pointer-events: none;=
 background: radial-gradient(at right bottom, rgba(29, 39, 54, 0.16) 0%, rg=
ba(29, 39, 54, 0) 72%); animation: 200ms ease-out 0s 1 normal none running =
intercom-lightweight-app-gradient; }

.intercom-lightweight-app-launcher { position: fixed; z-index: 2147483003; =
border: none; bottom: 20px; right: 20px; max-width: 48px; width: 48px; max-=
height: 48px; height: 48px; border-radius: 50%; background: rgb(15, 15, 15)=
; cursor: pointer; box-shadow: rgba(0, 0, 0, 0.06) 0px 1px 6px 0px, rgba(0,=
 0, 0, 0.16) 0px 2px 32px 0px; transition: transform 167ms cubic-bezier(0.3=
3, 0, 0, 1); box-sizing: content-box; padding: 0px !important; margin: 0px =
!important; }

.intercom-lightweight-app-launcher:hover { transition: transform 250ms cubi=
c-bezier(0.33, 0, 0, 1); transform: scale(1.1); }

.intercom-lightweight-app-launcher:active { transform: scale(0.85); transit=
ion: transform 134ms cubic-bezier(0.45, 0, 0.2, 1); }

.intercom-lightweight-app-launcher:focus { outline: none; }

.intercom-lightweight-app-launcher-icon { display: flex; align-items: cente=
r; justify-content: center; position: absolute; top: 0px; left: 0px; width:=
 48px; height: 48px; transition: transform 100ms linear, opacity 80ms linea=
r; }

.intercom-lightweight-app-launcher-icon-open { opacity: 1; transform: rotat=
e(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-open svg { width: 24px; height: 24p=
x; }

.intercom-lightweight-app-launcher-icon-open svg path { fill: rgb(255, 255,=
 255); }

.intercom-lightweight-app-launcher-icon-self-serve { opacity: 1; transform:=
 rotate(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-self-serve svg { height: 44px; }

.intercom-lightweight-app-launcher-icon-self-serve svg path { fill: rgb(255=
, 255, 255); }

.intercom-lightweight-app-launcher-custom-icon-open { max-height: 24px; max=
-width: 24px; opacity: 1; transform: rotate(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-minimize { opacity: 0; transform: r=
otate(-60deg) scale(0); }

.intercom-lightweight-app-launcher-icon-minimize svg path { fill: rgb(255, =
255, 255); }

.intercom-lightweight-app-messenger { position: fixed; z-index: 2147483003;=
 overflow: hidden; background-color: rgb(255, 255, 255); animation: 250ms c=
ubic-bezier(0, 1, 1, 1) 0s 1 normal none running intercom-lightweight-app-m=
essenger; transform-origin: right bottom; width: 400px; height: calc(100% -=
 40px); max-height: 704px; min-height: 250px; right: 20px; bottom: 20px; bo=
x-shadow: rgba(0, 0, 0, 0.16) 0px 5px 40px; border-radius: 16px; }

.intercom-lightweight-app-messenger-header { height: 64px; border-bottom: n=
one; background: rgb(255, 255, 255); }

.intercom-lightweight-app-messenger-footer { position: absolute; bottom: 0p=
x; width: 100%; height: 80px; background: rgb(255, 255, 255); font-size: 14=
px; line-height: 21px; border-top: 1px solid rgba(0, 0, 0, 0.05); box-shado=
w: rgba(0, 0, 0, 0.05) 0px 0px 25px; }

@media print {
  .intercom-lightweight-app { display: none; }
}
------MultipartBoundary--xC4mlvqwVrWApoms1A0UKBsV18p6KuT1DXBVaW7nOf----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-4ce5887a-ce0f-4994-a6ac-93b671eb100f@mhtml.blink

@charset "utf-8";

@font-face { font-family: Inter; src: url("chrome-extension://ddlbpiadoechc=
olndfeaonajmngmhblj/assets/Inter-Regular.ttf"); font-weight: 400; }

@font-face { font-family: Inter; src: url("chrome-extension://ddlbpiadoechc=
olndfeaonajmngmhblj/assets/Inter-SemiBold.ttf"); font-weight: 600; }

@font-face { font-family: Inter; src: url("chrome-extension://ddlbpiadoechc=
olndfeaonajmngmhblj/assets/Inter-Black.ttf"); font-weight: 900; }

@-webkit-keyframes compose-nudgeFader {=20
  0% { opacity: 0; }
  100% { opacity: 0.95; }
}

@keyframes compose-nudgeFader {=20
  0% { opacity: 0; }
  100% { opacity: 0.95; }
}
------MultipartBoundary--xC4mlvqwVrWApoms1A0UKBsV18p6KuT1DXBVaW7nOf----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-08da97c1-7dc4-4312-8048-aded997a44b2@mhtml.blink

@charset "utf-8";

body.change-theme * { transition: none !important; }

body.change-theme ::before { transition: none !important; }

body.change-theme ::after { transition: none !important; }
------MultipartBoundary--xC4mlvqwVrWApoms1A0UKBsV18p6KuT1DXBVaW7nOf----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-2fd9ae6d-0201-4b6d-8d6a-b6ecc83731c5@mhtml.blink

@charset "utf-8";

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; src: url("/cf-fonts/v/roboto-mono/5.0.16/cyrillic-ext/wght/normal.woff2=
"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F=
, U+FE2E-FE2F; font-display: swap; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; src: url("/cf-fonts/v/roboto-mono/5.0.16/latin/wght/normal.woff2"); uni=
code-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304=
, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212=
, U+2215, U+FEFF, U+FFFD; font-display: swap; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; src: url("/cf-fonts/v/roboto-mono/5.0.16/vietnamese/wght/normal.woff2")=
; unicode-range: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1=
AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB;=
 font-display: swap; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; src: url("/cf-fonts/v/roboto-mono/5.0.16/greek/wght/normal.woff2"); uni=
code-range: U+370-3FF; font-display: swap; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; src: url("/cf-fonts/v/roboto-mono/5.0.16/latin-ext/wght/normal.woff2");=
 unicode-range: U+100-2AF, U+304, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U=
+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; font-dis=
play: swap; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 4=
00; src: url("/cf-fonts/v/roboto-mono/5.0.16/cyrillic/wght/normal.woff2"); =
unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; font-display=
: swap; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 5=
00; src: url("/cf-fonts/v/roboto-mono/5.0.16/cyrillic-ext/wght/normal.woff2=
"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F=
, U+FE2E-FE2F; font-display: swap; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 5=
00; src: url("/cf-fonts/v/roboto-mono/5.0.16/latin-ext/wght/normal.woff2");=
 unicode-range: U+100-2AF, U+304, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U=
+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; font-dis=
play: swap; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 5=
00; src: url("/cf-fonts/v/roboto-mono/5.0.16/greek/wght/normal.woff2"); uni=
code-range: U+370-3FF; font-display: swap; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 5=
00; src: url("/cf-fonts/v/roboto-mono/5.0.16/cyrillic/wght/normal.woff2"); =
unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; font-display=
: swap; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 5=
00; src: url("/cf-fonts/v/roboto-mono/5.0.16/vietnamese/wght/normal.woff2")=
; unicode-range: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1=
AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB;=
 font-display: swap; }

@font-face { font-family: "Roboto Mono"; font-style: normal; font-weight: 5=
00; src: url("/cf-fonts/v/roboto-mono/5.0.16/latin/wght/normal.woff2"); uni=
code-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304=
, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212=
, U+2215, U+FEFF, U+FFFD; font-display: swap; }
------MultipartBoundary--xC4mlvqwVrWApoms1A0UKBsV18p6KuT1DXBVaW7nOf----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-58d39887-a6d9-432f-b348-2de096e61bac@mhtml.blink

@charset "utf-8";

.css-10axhgb { z-index: 10001199; }

.css-fbb3ws { z-index: 10001399; opacity: 0.95; animation: 250ms ease 0s 1 =
normal none running compose-nudgeFader; }

.css-fbb3ws > div { position: relative; }

.css-fbb3ws[data-popper-placement*=3D"top"] > div { margin-bottom: 0px; }

.css-fbb3ws[data-popper-placement*=3D"top"] .MuiPopper-arrow { z-index: 2; =
bottom: 0px; margin-bottom: -0.9em; width: 3em; height: 1em; }

.css-fbb3ws[data-popper-placement*=3D"top"] .MuiPopper-arrow::before { bord=
er-width: 1em 1em 0px; border-color: rgb(230, 230, 230) transparent transpa=
rent; }

.css-fbb3ws[data-popper-placement*=3D"top"] .MuiPopper-arrow::after { borde=
r-width: 1em 1em 0px; border-color: white transparent transparent; }

.css-fbb3ws[data-popper-placement=3D"top-start"] .MuiPopper-arrow { left: 0=
px; transform: translate3d(10px, 0px, 0px) !important; }

.css-fbb3ws[data-popper-placement=3D"top-end"] .MuiPopper-arrow { right: 0p=
x; left: auto !important; transform: translate3d(-2px, 0px, 0px) !important=
; }

.css-zh45qj { z-index: 10001399; opacity: 0.95; animation: 250ms ease 0s 1 =
normal none running compose-nudgeFader; }

.css-zh45qj > div { position: relative; }

.css-zh45qj[data-popper-placement*=3D"top"] > div { margin-bottom: 0px; }

.css-zh45qj[data-popper-placement*=3D"top"] .MuiPopper-arrow { z-index: 2; =
bottom: 0px; margin-bottom: -0.9em; width: 3em; height: 1em; }

.css-zh45qj[data-popper-placement*=3D"top"] .MuiPopper-arrow::before { bord=
er-width: 1em 1em 0px; border-color: rgb(230, 230, 230) transparent transpa=
rent; }

.css-zh45qj[data-popper-placement*=3D"top"] .MuiPopper-arrow::after { borde=
r-width: 1em 1em 0px; border-color: white transparent transparent; }

.css-zh45qj[data-popper-placement=3D"top-start"] .MuiPopper-arrow { left: 0=
px; transform: translate3d(10px, 0px, 0px) !important; }

.css-zh45qj[data-popper-placement=3D"top-end"] .MuiPopper-arrow { right: 0p=
x; left: auto !important; transform: translate3d(-2px, 0px, 0px) !important=
; }

@media print {
  .css-1k371a6 { position: absolute !important; }
}

.css-14bgs1h.compose-ClickAwayPopper { padding: 0px; background-color: rgba=
(255, 255, 255, 0); z-index: 10000149; }

.css-22inyy.compose-ClickAwayPopper { padding: 0px; background-color: rgba(=
255, 255, 255, 0); z-index: 10000149; }
------MultipartBoundary--xC4mlvqwVrWApoms1A0UKBsV18p6KuT1DXBVaW7nOf----
Content-Type: text/html
Content-ID: <frame-F6804BEAEFBF553C5D5FF6F850D657FD@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--xC4mlvqwVrWApoms1A0UKBsV18p6KuT1DXBVaW7nOf----
Content-Type: text/html
Content-ID: <frame-E6728D15B8CCCFA13E94AD3E4DFB99B1@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html lang=3D"en"><head><meta http-equiv=3D"Content-Type" content=3D"text/h=
tml; charset=3DUTF-8">
       =20
      </head>
      <body>
     =20
    </body></html>
------MultipartBoundary--xC4mlvqwVrWApoms1A0UKBsV18p6KuT1DXBVaW7nOf------
